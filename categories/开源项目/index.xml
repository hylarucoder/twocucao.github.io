<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源项目 - 分类 - 海拉鲁编程客</title>
        <link>http://twocucao.xyz/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/</link>
        <description>开源项目 - 分类 - 海拉鲁编程客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>twocucao@gmail.com (twocucao)</managingEditor>
            <webMaster>twocucao@gmail.com (twocucao)</webMaster><lastBuildDate>Mon, 30 Nov 2020 18:03:01 &#43;0800</lastBuildDate><atom:link href="http://twocucao.xyz/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/" rel="self" type="application/rss+xml" /><item>
    <title>开源认证基础服务</title>
    <link>http://twocucao.xyz/posts/20201130_ory/</link>
    <pubDate>Mon, 30 Nov 2020 18:03:01 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://twocucao.xyz/posts/20201130_ory/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/5625783/100601457-8efe8a80-333d-11eb-803e-861352bd1715.jpg" referrerpolicy="no-referrer">
            </div>0x00 前言 随着业务的增长，往往需要统一体系内的服务的账户。
经过一番调研，决定尝试一下 ory 的开源认证基础服务
0x01 ORY 尝试解决问题？ ORY 提供了四个主要项目，每个项目着力于解决一个边界清晰的认证 / 鉴权问题
 ORY Kratos 提供了用户认证服务 ORY Hydra 提供了 OAuth 2.0 &amp; OpenID Connect provider. ORY Keto 提供了 访问控制 ORY Oathkeeper 提供了认证访问代理  0x02 用户认证服务 Kratos 常见方案  方案 1, 选择全栈式解决方案 - 比如 Java 社区的 JGroups 方案 2, 选择 IDaas - 比如 Login With Apple, Google 方案 3, 选择自己来 - 比如 Java 社区的 JGroups  三种方案各有利弊
 全栈式解决方案上手极快，但  扩展性不强 绑定 Java 技术栈 数据模型固定 登陆流程固定     更新迭代慢  Login With Google 虽然方便，但是并没有解决如下的问题   更新 Profile  添加第二个恢复邮箱 2FA 存储管理 Sessions   全局登出  自己来，需要处理事情也挺多   方案二遇到的问题，一个不会少 加密算法  流程可能较为复杂，比如先用邮箱注册，然后用 Sign Up Using Google, 或者先用 Sign Up Google, 然后使用邮箱登陆。(PS: 我国的登陆姿势就更多了）    是不是某种方案是最好的呢？其实未必]]></description>
</item><item>
    <title>Chorthotkey 发布</title>
    <link>http://twocucao.xyz/posts/20150222_chorthotkey%E5%8F%91%E5%B8%83/</link>
    <pubDate>Sun, 22 Feb 2015 20:10:10 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://twocucao.xyz/posts/20150222_chorthotkey%E5%8F%91%E5%B8%83/</guid>
    <description><![CDATA[<h2 id="概要介绍">概要介绍</h2>
<p>经过长时间的电脑的使用，我渐渐的喜欢上了 Autohotkey 这个神器，喜欢 Python 是因为 Python 强大与高效，喜欢 AHK 则是太方便了。</p>
<p>长时间的使用，毕竟也积攒了一些脚本，加上对很多脚本的收集以及修改，勉强算得上是一个入门的 AHK 菜鸟了。</p>
<p>AHK 的优点可以对快捷键进行编程，对一个经常使用电脑自动化处理一些事情的人说，非常之方便，但缺点，太多，效率低，语法乱，数据结构乱。让我写一段文字处理简直就让我非常难受。</p>]]></description>
</item></channel>
</rss>

{"pageProps":{"post":{"tags":["Golang"],"path":"20201130_ORY.md","title":"开源认证基础服务","slug":"开源认证基础服务","date":"2020-11-30T18:03:01+08:00","category":"开源项目","lastMod":"2020-12-01","description":"未描述","thumbnail":"","content":"<h2 id=\"0x00-前言\"><a class=\"v-toc-item\" href=\"#0x00-前言\">#</a> 0x00 前言</h2>\n<p>随着业务的增长，往往需要统一体系内的服务的账户。</p>\n<p>经过一番调研，决定尝试一下 ory 的开源认证基础服务</p>\n<h2 id=\"0x01-ory-尝试解决问题\"><a class=\"v-toc-item\" href=\"#0x01-ory-尝试解决问题\">#</a> 0x01 ORY 尝试解决问题？</h2>\n<p>ORY 提供了四个主要项目，每个项目着力于解决一个边界清晰的认证 / 鉴权问题</p>\n<ul>\n<li>ORY Kratos 提供了用户认证服务</li>\n<li>ORY Hydra 提供了 OAuth 2.0 &amp; OpenID Connect provider.</li>\n<li>ORY Keto 提供了 访问控制</li>\n<li>ORY Oathkeeper 提供了认证访问代理</li>\n</ul>\n<h2 id=\"0x02-用户认证服务-kratos\"><a class=\"v-toc-item\" href=\"#0x02-用户认证服务-kratos\">#</a> 0x02 用户认证服务 Kratos</h2>\n<h3 id=\"常见方案\"><a class=\"v-toc-item\" href=\"#常见方案\">#</a> 常见方案</h3>\n<ol>\n<li>方案 1, 选择全栈式解决方案 - 比如 Java 社区的 JGroups</li>\n<li>方案 2, 选择 IDaas - 比如 Login With Apple, Google</li>\n<li>方案 3, 选择自己来 - 比如 Java 社区的 JGroups</li>\n</ol>\n<p>三种方案各有利弊</p>\n<ol>\n<li>全栈式解决方案上手极快，但\n<ul>\n<li>扩展性不强</li>\n<li>绑定 Java 技术栈</li>\n<li>数据模型固定</li>\n<li>登陆流程固定</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>更新迭代慢</li>\n</ul>\n<ol start=\"2\">\n<li>Login With Google 虽然方便，但是并没有解决如下的问题</li>\n</ol>\n<ul>\n<li>更新 Profile\n<ul>\n<li>添加第二个恢复邮箱</li>\n<li>2FA</li>\n<li>存储管理 Sessions</li>\n</ul>\n</li>\n<li>全局登出</li>\n</ul>\n<ol start=\"3\">\n<li>自己来，需要处理事情也挺多</li>\n</ol>\n<ul>\n<li>方案二遇到的问题，一个不会少</li>\n<li>加密算法\n<ul>\n<li>流程可能较为复杂，比如先用邮箱注册，然后用 Sign Up Using Google, 或者先用 Sign Up Google, 然后使用邮箱登陆。(PS: 我国的登陆姿势就更多了）</li>\n</ul>\n</li>\n</ul>\n<p>是不是某种方案是最好的呢？其实未必</p>\n<p>就我个人经验来说，</p>\n<ul>\n<li>第一种方案比较适合稳定的，技术栈相同的团队使用。如果对原先应用进行少量裁剪就可以使用，其实未尝不可。</li>\n<li>第二种方案如果登陆入口仅是 Login With Google, 并且内网服务数量就几个，也不需要做全局登出，那么其实做起来比较省事。我工作过的一个公司就喜欢这么干。</li>\n<li>第三种方案虽然处理的问题看起来比较多，但是社区现有的 Building Block 已经比较多了。如果流程没有特别复杂，一手打造的非常容易往自己的项目发展情况发展。</li>\n</ul>\n<h3 id=\"kratos-的方案\"><a class=\"v-toc-item\" href=\"#kratos-的方案\">#</a> Kratos 的方案</h3>\n<p>Kratos 提供了如下的解决方案</p>\n<ul>\n<li>登陆与注册</li>\n<li>track sesison/devices</li>\n<li>MFA/2FA</li>\n<li>账户验证</li>\n<li>账户恢复</li>\n<li>Profile &amp; Account Management</li>\n<li>管理后台接口 API</li>\n<li>消费 OAuth2 and OpenID Connect</li>\n</ul>\n<h2 id=\"0x03-ory-hydra\"><a class=\"v-toc-item\" href=\"#0x03-ory-hydra\">#</a> 0x03 Ory Hydra</h2>\n<blockquote>\n<p>You May Not Need It</p>\n</blockquote>\n<ul>\n<li>Provider OAuth2 and OpenID Connect via <a href=\"https://github.com/ory/hydra\">https://github.com/ory/hydra</a></li>\n</ul>\n<h2 id=\"0x03-ory-keto\"><a class=\"v-toc-item\" href=\"#0x03-ory-keto\">#</a> 0x03 Ory Keto</h2>\n<p>权限系统一般放在按照产品需求，最好跟着产品走。而不是随随便便提取出来做一个权限系统。</p>\n<blockquote>\n<p>You May Not Need It</p>\n</blockquote>\n<h2 id=\"0x04-ory-oathkeeper\"><a class=\"v-toc-item\" href=\"#0x04-ory-oathkeeper\">#</a> 0x04 Ory Oathkeeper</h2>\n<p>同样，如果你不是有做 zero trust</p>\n<blockquote>\n<p>You May Not Need It</p>\n</blockquote>\n","toc":"<ul class=\"v-article-toc\">\n<li>\n<ul>\n<li><a href=\"#0x00-%E5%89%8D%E8%A8%80\">0x00 前言</a></li>\n<li><a href=\"#0x01-ory-%E5%B0%9D%E8%AF%95%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98\">0x01 ORY 尝试解决问题？</a></li>\n<li><a href=\"#0x02-%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E6%9C%8D%E5%8A%A1-kratos\">0x02 用户认证服务 Kratos</a>\n<ul>\n<li><a href=\"#%E5%B8%B8%E8%A7%81%E6%96%B9%E6%A1%88\">常见方案</a></li>\n<li><a href=\"#kratos-%E7%9A%84%E6%96%B9%E6%A1%88\">Kratos 的方案</a></li>\n</ul>\n</li>\n<li><a href=\"#0x03-ory-hydra\">0x03 Ory Hydra</a></li>\n<li><a href=\"#0x03-ory-keto\">0x03 Ory Keto</a></li>\n<li><a href=\"#0x04-ory-oathkeeper\">0x04 Ory Oathkeeper</a></li>\n</ul>\n</li>\n</ul>\n"}},"__N_SSG":true}
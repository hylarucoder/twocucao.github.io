{"pageProps":{"post":{"tags":["编辑器"],"path":"20170115_Spacemacs.md","title":"写给 Pythoner 的 Spacemacs 入门指北","slug":"写给 Pythoner 的 Spacemacs 入门指北","date":"2017-01-15","category":"善用佳软","lastMod":"2020-01-01","description":"这篇文章展示了基本的 Markdown 语法和格式.","thumbnail":"","content":"<h1 id=\"写给-pythoner-的-spacemacs-入门指北\"><a class=\"v-toc-item\" href=\"#写给-pythoner-的-spacemacs-入门指北\">#</a> 写给 Pythoner 的 Spacemacs 入门指北</h1>\n<p>最开始，使用 Sublime Text 编码，后来用 Vim 混合 PyCharm 写 Python。</p>\n<p>前几天，Github 上的 Spacemacs 已经成功的突破一万 Star, 听说几个我非常佩服的 Pythoner（比如『Python Web 开发实战』的作者董伟明） 也是非常喜欢 Spacemacs, 我就萌生了从 Vim 切换到 Spacemacs 的想法，说做就做。</p>\n<blockquote>\n<p>注：本文所有内容基于 macOS 10.11, 软件环境为 zsh , pyenv , python3.5.2 , node5.12.0. 其他类 Unix 平台略作修改即可使用。至于 Windows 平台，建议安装 Ubuntu 虚拟机。本文也需要读者具备基本的 VIM 基本常识和 Python 常识。</p>\n</blockquote>\n<p>本文只负责把读者带入 Spacemacs 的世界中，而不是涉及到 Spacemacs 的方方面面，所以此文为指北。而非详细的指南 (Guide).</p>\n<h2 id=\"0x00-基本软件环境安装\"><a class=\"v-toc-item\" href=\"#0x00-基本软件环境安装\">#</a> 0x00 基本软件环境安装</h2>\n<h3 id=\"zsh-与-ohmyzsh\"><a class=\"v-toc-item\" href=\"#zsh-与-ohmyzsh\">#</a> zsh 与 ohmyzsh</h3>\n<pre><code class=\"language-bash\">brew install zsh\nchsh <span class=\"token operator\">-</span>s <span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zsh\nsh <span class=\"token operator\">-</span>c <span class=\"token string\">\"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"</span>\n</code></pre>\n<h3 id=\"pyenv-与-pyenv-virtualenv\"><a class=\"v-toc-item\" href=\"#pyenv-与-pyenv-virtualenv\">#</a> pyenv 与 pyenv virtualenv</h3>\n<pre><code class=\"language-bash\">git clone https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>yyuu<span class=\"token operator\">/</span>pyenv<span class=\"token punctuation\">.</span>git <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>pyenv\ngit clone https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>yyuu<span class=\"token operator\">/</span>pyenv<span class=\"token operator\">-</span>virtualenv<span class=\"token punctuation\">.</span>git <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>pyenv<span class=\"token operator\">/</span>plugins<span class=\"token operator\">/</span>pyenv<span class=\"token operator\">-</span>virtualenv\necho <span class=\"token string\">'export PYENV_ROOT=\"$HOME/.pyenv\"'</span> <span class=\"token operator\">>></span> <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>zshrc\necho <span class=\"token string\">'export PATH=\"$PYENV_ROOT/bin:$PATH\"'</span> <span class=\"token operator\">>></span> <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>zshrc\necho <span class=\"token string\">'eval \"$(pyenv init -)\"'</span> <span class=\"token operator\">>></span> <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>zshrc\necho <span class=\"token string\">'eval \"$(pyenv virtualenv-init -)\"'</span> <span class=\"token operator\">>></span> <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>zshrc\n\n# 不喜写兼容代码，所有代码均向 <span class=\"token number\">3.5</span><span class=\"token operator\">+</span> 靠拢\nv<span class=\"token operator\">=</span><span class=\"token number\">3.5</span><span class=\"token number\">.2</span><span class=\"token operator\">|</span>wget http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>mirrors<span class=\"token punctuation\">.</span>sohu<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>python<span class=\"token operator\">/</span>$v<span class=\"token operator\">/</span>Python<span class=\"token operator\">-</span>$v<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>xz <span class=\"token operator\">-</span><span class=\"token constant\">P</span> <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>pyenv<span class=\"token operator\">/</span>cache<span class=\"token operator\">/</span><span class=\"token punctuation\">;</span>pyenv install $v\nv<span class=\"token operator\">=</span><span class=\"token number\">3.6</span><span class=\"token number\">.0</span><span class=\"token operator\">|</span>wget http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>mirrors<span class=\"token punctuation\">.</span>sohu<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>python<span class=\"token operator\">/</span>$v<span class=\"token operator\">/</span>Python<span class=\"token operator\">-</span>$v<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>xz <span class=\"token operator\">-</span><span class=\"token constant\">P</span> <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>pyenv<span class=\"token operator\">/</span>cache<span class=\"token operator\">/</span><span class=\"token punctuation\">;</span>pyenv install $v\nv<span class=\"token operator\">=</span><span class=\"token number\">2.7</span><span class=\"token number\">.11</span><span class=\"token operator\">|</span>wget http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>mirrors<span class=\"token punctuation\">.</span>sohu<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>python<span class=\"token operator\">/</span>$v<span class=\"token operator\">/</span>Python<span class=\"token operator\">-</span>$v<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>xz <span class=\"token operator\">-</span><span class=\"token constant\">P</span> <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>pyenv<span class=\"token operator\">/</span>cache<span class=\"token operator\">/</span><span class=\"token punctuation\">;</span>pyenv install $v\n\n# 设置 Global Python 为 <span class=\"token number\">2.7</span><span class=\"token number\">.11</span><span class=\"token punctuation\">,</span> 备注：尽量不要把 Py3 设置为全局，否则由于 Homebrew 本身有一些依赖是依赖于 Py2 的，这样容易出现一些奇怪的问题。\npyenv global <span class=\"token number\">2.7</span><span class=\"token number\">.11</span>\npip install <span class=\"token operator\">-</span>i https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>pypi<span class=\"token punctuation\">.</span>doubanio<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>simple requests\n# 下面这个是用于安装基本的代码补全功能\npip install <span class=\"token operator\">-</span>i https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>pypi<span class=\"token punctuation\">.</span>doubanio<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>simple <span class=\"token operator\">--</span>upgrade <span class=\"token string\">\"jedi>=0.9.0\"</span> <span class=\"token string\">\"json-rpc>=1.8.1\"</span> <span class=\"token string\">\"service_factory>=0.1.5\"</span> flake8 pytest autoflake hy\n\npyenv virtualenv <span class=\"token number\">3.5</span><span class=\"token number\">.2</span> py3<span class=\"token operator\">-</span>daily\npyenv activate py3<span class=\"token operator\">-</span>daily\npip install <span class=\"token operator\">-</span>i https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>pypi<span class=\"token punctuation\">.</span>doubanio<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>simple requests\npip install <span class=\"token operator\">-</span>i https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>pypi<span class=\"token punctuation\">.</span>doubanio<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>simple beatutifulsoup4\npip install <span class=\"token operator\">-</span>i https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>pypi<span class=\"token punctuation\">.</span>doubanio<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>simple ipython<span class=\"token punctuation\">[</span>notebook<span class=\"token punctuation\">]</span>\npip install <span class=\"token operator\">-</span>i https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>pypi<span class=\"token punctuation\">.</span>doubanio<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>simple jupyter\n# 下面这个是用于安装基本的代码补全功能\npip install <span class=\"token operator\">-</span>i https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>pypi<span class=\"token punctuation\">.</span>doubanio<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>simple <span class=\"token operator\">--</span>upgrade <span class=\"token string\">\"jedi>=0.9.0\"</span> <span class=\"token string\">\"json-rpc>=1.8.1\"</span> <span class=\"token string\">\"service_factory>=0.1.5\"</span> flake8 pytest autoflake hy\npyenv deactivate\n# pyenv uninstall py3<span class=\"token operator\">-</span>daily\n\n</code></pre>\n<h3 id=\"nvm-以及常用-npm-包\"><a class=\"v-toc-item\" href=\"#nvm-以及常用-npm-包\">#</a> nvm 以及常用 npm 包</h3>\n<pre><code class=\"language-bash\"># 安装 nvm\ncurl <span class=\"token operator\">-</span>o<span class=\"token operator\">-</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>raw<span class=\"token punctuation\">.</span>githubusercontent<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>creationix<span class=\"token operator\">/</span>nvm<span class=\"token operator\">/</span>v0<span class=\"token punctuation\">.</span><span class=\"token number\">32.1</span><span class=\"token operator\">/</span>install<span class=\"token punctuation\">.</span>sh <span class=\"token operator\">|</span> bash\nnvm install <span class=\"token number\">5.12</span><span class=\"token number\">.0</span>\necho <span class=\"token string\">'\\n#alias for cnpm\\nalias cnpm=\"npm --registry=https://registry.npm.taobao.org \\\n  --cache=$HOME/.npm/.cache/cnpm \\\n  --disturl=https://npm.taobao.org/dist \\\n  --userconfig=$HOME/.cnpmrc\"'</span> <span class=\"token operator\">>></span> <span class=\"token operator\">~</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">.zshrc &amp;&amp; source ~</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span>zshrc\nnpm install <span class=\"token operator\">-</span>g vmd\nnpm install <span class=\"token operator\">-</span>g gitbook<span class=\"token operator\">-</span>cli\nnpm install <span class=\"token operator\">-</span>g hexo<span class=\"token operator\">-</span>cli\nnpm install <span class=\"token operator\">-</span>g tern\nnpm install <span class=\"token operator\">-</span>g js<span class=\"token operator\">-</span>beautify\nnpm install <span class=\"token operator\">-</span>g js<span class=\"token operator\">-</span>hint\n</code></pre>\n<h3 id=\"spacemacs-安装以及基本配置\"><a class=\"v-toc-item\" href=\"#spacemacs-安装以及基本配置\">#</a> Spacemacs 安装以及基本配置</h3>\n<pre><code class=\"language-bash\">brew install ag\nbrew install grep\nbrew tap d12frosted<span class=\"token operator\">/</span>emacs<span class=\"token operator\">-</span>plus\nbrew install emacs<span class=\"token operator\">-</span>plus\n# 安装完毕之后，克隆我的配置 repo<span class=\"token punctuation\">,</span> 有一些基本的配置用于解决墙的问题。解决方案来自于子龙山人\ngit clone https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>syl20bnr<span class=\"token operator\">/</span>spacemacs <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>emacs<span class=\"token punctuation\">.</span>d\nmv <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>spacemacs <span class=\"token punctuation\">.</span>spacemacs<span class=\"token punctuation\">.</span>bak\ngit clone https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>twocucao<span class=\"token operator\">/</span>spacemacs<span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">.</span>git <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>spacemacs<span class=\"token punctuation\">.</span>d\n# 输入 emacs 进行初始化，如果你可以正常访问 Github 的话时间在半小时之内。\nemacs\n</code></pre>\n<p>安装 Spacemacs 过程中画面如下：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-d5c8171294ec9f3d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"安装 Spacemacs 过程中画面\"></p>\n<p>安装前，Emacs 长这个样子：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-4e6026d213191939.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"安装前\"></p>\n<p>安装后，Emacs 长这个样子：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-45747c68366ef275.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"安装后.png\"></p>\n<p><strong>在正式进入，请牢牢记住下面几个按键已经功能，以备不时之需</strong></p>\n<ul>\n<li>spc : 跳出命令面板</li>\n<li>spc-spc : 跳出命令列表，可运行命令，也可以查找快捷键</li>\n<li>spc-h-spc : 查找包的用途与定义</li>\n</ul>\n<p>嗯，可以谈下一话题了！</p>\n<h2 id=\"0x01-日常的编辑\"><a class=\"v-toc-item\" href=\"#0x01-日常的编辑\">#</a> 0x01 日常的编辑</h2>\n<h3 id=\"11-文件导航\"><a class=\"v-toc-item\" href=\"#11-文件导航\">#</a> 1.1 文件导航</h3>\n<ul>\n<li>(VIM 流）hjkloOaA zz</li>\n<li>(VIM 流）查找 * /words</li>\n<li>spc-f-j 开发 neotree</li>\n<li>spc-tab 切换到上一个 buffer</li>\n<li>spc-f-f 打开文件 spc-p-f fuzzfind 类似于 ctrlp spc-s-g-p grep 搜索项目 spc-s-a-p ag 搜索项目</li>\n</ul>\n<p>搜索项目如图 (spc-s-a-p ag 搜索项目）:</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-b2ce54f91a91e9d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"按照关键字搜索项目\"></p>\n<blockquote>\n<p>实在是方便至极</p>\n</blockquote>\n<h3 id=\"12-文件编辑\"><a class=\"v-toc-item\" href=\"#12-文件编辑\">#</a> 1.2 文件编辑</h3>\n<p>文件内容编辑</p>\n<ul>\n<li>(VIM 流）u 与 c-r d c 等</li>\n<li>有趣的是查找替换功能也是自带预览的。比如 :%s/foo/bar/g</li>\n</ul>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-e37a81a2a399e5f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"查找替换预览\"></p>\n<p>文件本身编辑</p>\n<ul>\n<li>在 dired mode 下：copy - C , delete - D, new folder - +</li>\n<li>也可以 spc-f-t 在 neotree 下进行编辑</li>\n</ul>\n<blockquote>\n<p>除去这些和 Vim 相似的文件编辑功能之外，甚至窗口管理都和 Vim 一致了，使用 c-w+hjkl 直接跳转。<br>\n强烈建议在读者抽空过一遍基本的 Vimtutor</p>\n</blockquote>\n<h3 id=\"13-markdown-writing\"><a class=\"v-toc-item\" href=\"#13-markdown-writing\">#</a> 1.3 Markdown Writing</h3>\n<ul>\n<li>spc-spc-markdown-generate-to 回车即可生成本文的 Toc(Table Of Content)</li>\n<li>spc-b-i 打开 buffer 的 imenu（类似于 Vim 的 Tagbar 插件），enter 跳转</li>\n</ul>\n<p>搜索项目如图 (spc-b-i 开启 buffer imenu ，enter 跳转）:</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-250852ddc15bd7a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"IMenu\"></p>\n<h2 id=\"0x02-python-编程\"><a class=\"v-toc-item\" href=\"#0x02-python-编程\">#</a> 0x02. Python 编程</h2>\n<h3 id=\"21-代码补全\"><a class=\"v-toc-item\" href=\"#21-代码补全\">#</a> 2.1 代码补全</h3>\n<p>当你按照前面的所有配置走一圈下来，基本上就已经可以完美的进行补全了。<br>\n比如，当我编辑一个 py 文件的时候，</p>\n<pre><code class=\"language-bash\"># 先激活虚拟环境\npyenv activate <span class=\"token number\">3.5</span><span class=\"token number\">.2</span><span class=\"token operator\">/</span>envs<span class=\"token operator\">/</span>py3<span class=\"token operator\">-</span>daily\nemacs py<span class=\"token punctuation\">.</span>py\n</code></pre>\n<p>如图所示，因为 requests,numpy 这种第三方库都可以完美补全，其他自然不在话下。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-7516130bb7fe70c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"代码补全\"></p>\n<p>代码补全还有另一个神器，就是可以内嵌 lisp 的 Snippet 模板 – yasnippet, 由于模板功能基本上和其他编辑器相同，而使用 elisp 语言进行编写动态 Snippet 模板则需要会 elisp, 这以后有机会再学学。</p>\n<h3 id=\"22-代码跳转\"><a class=\"v-toc-item\" href=\"#22-代码跳转\">#</a> 2.2 代码跳转</h3>\n<ul>\n<li>文件代码跳转 spc-spc-helm-imenu 查看文件结构</li>\n<li>文件跳转 在 normal-mode 下，gd 即可跳转到函数定义上，但是不能跨文件跳转。</li>\n</ul>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-4a2b2df1e6be0dfd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"单文件使用 helm_imenu 进行浏览\"></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-3406b060737bffa3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"使用 ag 进行代码搜索\"></p>\n<h3 id=\"23-pytest-测试\"><a class=\"v-toc-item\" href=\"#23-pytest-测试\">#</a> 2.3 pytest 测试</h3>\n<ul>\n<li>spc-m-s-py3-daily enter 选择 py3-daily 虚拟环境</li>\n<li>spc-spc-pytest-all enter 即可运行所有 pytest 测试。</li>\n</ul>\n<p>测试过程：</p>\n<p>运行测试失败，运行测试失败，使用 c-w-j 跳转到下面窗口，对红色标记处 enter, 即可跳转到出错文件行。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-8ef2bac3163f166c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"pytest 运行测试失败\"></p>\n<p>修正运行测试成功，如图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-b90176c2e97df7dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"pytest 运行测试成功\"></p>\n<h2 id=\"0x03-ipython-notebook\"><a class=\"v-toc-item\" href=\"#0x03-ipython-notebook\">#</a> 0x03. IPython Notebook</h2>\n<p>通常情况下我使用 IPython Notebook 都是在 Web 端，因为是 Web 端，实际上大量的 Dom 渲染对浏览器的渲染速度还是有一定的影响的，我还是比较喜欢客户端，因为客户端的快捷键可以定制，而 Web 端的快捷键实在是相当的不方便。</p>\n<p>是不是 IPython Notebook 的 web 端没有好处呢？有的，比如我可以借用外部的 JS 可视化图表对 js 进行可视化呀。</p>\n<p>比如我发在简书上的这篇技术文 <a href=\"http://www.jianshu.com/p/609193efee1a\">IPython Notebook 引入 ECharts 做可视化</a></p>\n<p>但，如果不需要 js 功能的话，还是用客户端舒服一些。</p>\n<h3 id=\"31-ipython-notebook-基本配置\"><a class=\"v-toc-item\" href=\"#31-ipython-notebook-基本配置\">#</a> 3.1 IPython Notebook 基本配置</h3>\n<p>spacemacs 貌似只支持密码访问 IPython Notebook, 那么我们就生成密码。</p>\n<pre><code class=\"language-bash\"># 首先激活 py3<span class=\"token operator\">-</span>daily 环境\npython <span class=\"token operator\">-</span>c <span class=\"token string\">\"from notebook.auth import passwd;print(passwd())\"</span> <span class=\"token operator\">|</span> pbcopy\n# 恩，于是剪切板上就有如下的字符串\nsha1<span class=\"token operator\">:</span><span class=\"token number\">9</span>bf4c48a6b83<span class=\"token operator\">:</span><span class=\"token number\">26</span>bc24a78a1e4aea7baa36874f5e86bafac0dbb9\n# 打开 config 文件取消注释并修改 c<span class=\"token punctuation\">.</span>NotebookApp<span class=\"token punctuation\">.</span>password\nvim <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>jupyter<span class=\"token operator\">/</span>jupyter_notebook_config<span class=\"token punctuation\">.</span>py\nc<span class=\"token punctuation\">.</span>NotebookApp<span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> <span class=\"token string\">'sha1:35543659622f:f9a78f0b20132f3e04aa1d4ed4060f9fd9eb7663'</span>\n</code></pre>\n<h3 id=\"32-emacs-ipython-notebook\"><a class=\"v-toc-item\" href=\"#32-emacs-ipython-notebook\">#</a> 3.2 Emacs IPython Notebook</h3>\n<pre><code class=\"language-bash\"># 首先在终端打开 IPython Notebook\nipython notebook\n</code></pre>\n<p>接着打开 emacs, 输入 spc-a-i-n, 默认端口，然后输入密码即可。首次登陆后还需要在输入一次 spc-a-i-n 即可看到 IPython Notebook 的主界面。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-86a9a546e350994c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"IPYNB 的主界面\"></p>\n<p>光标移到 [New Notebook] 键击 enter 新建 IPython Notebook.</p>\n<p>输入如下代码：</p>\n<pre><code class=\"language-python\"># The <span class=\"token operator\">%</span><span class=\"token operator\">...</span> is an iPython thing<span class=\"token punctuation\">,</span> and is not part <span class=\"token keyword\">of</span> the Python language<span class=\"token punctuation\">.</span>\n# In <span class=\"token keyword\">this</span> <span class=\"token keyword\">case</span> we're just telling the plotting library to draw things on\n# the notebook<span class=\"token punctuation\">,</span> instead <span class=\"token keyword\">of</span> on a separate window<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">%</span>matplotlib inline\n# See all the <span class=\"token string\">\"as ...\"</span> contructs<span class=\"token operator\">?</span> They're just aliasing the <span class=\"token keyword\">package</span> names<span class=\"token punctuation\">.</span>\n# That way we can call methods like plt<span class=\"token punctuation\">.</span><span class=\"token function\">plot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> instead <span class=\"token keyword\">of</span> matplotlib<span class=\"token punctuation\">.</span>pyplot<span class=\"token punctuation\">.</span><span class=\"token function\">plot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> scipy <span class=\"token keyword\">as</span> sp\n<span class=\"token keyword\">import</span> matplotlib <span class=\"token keyword\">as</span> mpl\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>cm <span class=\"token keyword\">as</span> cm\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> time\npd<span class=\"token punctuation\">.</span><span class=\"token function\">set_option</span><span class=\"token punctuation\">(</span><span class=\"token string\">'display.width'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\npd<span class=\"token punctuation\">.</span><span class=\"token function\">set_option</span><span class=\"token punctuation\">(</span><span class=\"token string\">'display.max_columns'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\npd<span class=\"token punctuation\">.</span><span class=\"token function\">set_option</span><span class=\"token punctuation\">(</span><span class=\"token string\">'display.notebook_repr_html'</span><span class=\"token punctuation\">,</span> True<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns\nsns<span class=\"token punctuation\">.</span><span class=\"token function\">set_style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"darkgrid\"</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span><span class=\"token function\">set_context</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"poster\"</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n# Load the example flights dataset and conver to long<span class=\"token operator\">-</span>form\nflights_long <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span><span class=\"token function\">load_dataset</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flights\"</span><span class=\"token punctuation\">)</span>\nflights <span class=\"token operator\">=</span> flights_long<span class=\"token punctuation\">.</span><span class=\"token function\">pivot</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"month\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"year\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"passengers\"</span><span class=\"token punctuation\">)</span>\n\n# Draw a heatmap <span class=\"token keyword\">with</span> the numeric values <span class=\"token keyword\">in</span> each cell\nsns<span class=\"token punctuation\">.</span><span class=\"token function\">heatmap</span><span class=\"token punctuation\">(</span>flights<span class=\"token punctuation\">,</span> annot<span class=\"token operator\">=</span>True<span class=\"token punctuation\">,</span> fmt<span class=\"token operator\">=</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> linewidths<span class=\"token operator\">=</span><span class=\"token number\">.5</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>shift+enter , 咣</p>\n<p>热力图就出来了</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-aec8c9f278f74600.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"热力图\"></p>\n<h2 id=\"0x04-扩展\"><a class=\"v-toc-item\" href=\"#0x04-扩展\">#</a> 0x04. 扩展</h2>\n<p>看完上文，就可以深入文档进行探索了。</p>\n<ul>\n<li>打开 Vim, 输入：help vimtutor 熟悉基本的 Vim 操作。</li>\n<li><a href=\"https://github.com/syl20bnr/spacemacs/tree/master/layers\">Spacemacs Layer 文档</a></li>\n<li><a href=\"http://spacemacs.org/doc/DOCUMENTATION.html\">Spacemacs 文档</a></li>\n<li><a href=\"https://github.com/twocucao/spacemacs.d\">我的 Spacemacs 配置页面</a></li>\n<li><a href=\"https://github.com/emacs-china/Spacemacs-rocks\">Spacemacs 达人子龙山人的教程</a></li>\n</ul>\n<p>ChangeLog:</p>\n<ul>\n<li><strong>2017-01-15 18:53:45</strong> 重修文字</li>\n<li><strong>2017-01-16 12:49:19</strong> 润饰文字，增加可读性，首发简书。</li>\n<li><strong>2018-01-01 12:49:19</strong> 最后弃坑并回归 Vim 与 IDE</li>\n</ul>\n","toc":"<ul class=\"v-article-toc\">\n<li><a href=\"#%E5%86%99%E7%BB%99-pythoner-%E7%9A%84-spacemacs-%E5%85%A5%E9%97%A8%E6%8C%87%E5%8C%97\">写给 Pythoner 的 Spacemacs 入门指北</a>\n<ul>\n<li><a href=\"#0x00-%E5%9F%BA%E6%9C%AC%E8%BD%AF%E4%BB%B6%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85\">0x00 基本软件环境安装</a>\n<ul>\n<li><a href=\"#zsh-%E4%B8%8E-ohmyzsh\">zsh 与 ohmyzsh</a></li>\n<li><a href=\"#pyenv-%E4%B8%8E-pyenv-virtualenv\">pyenv 与 pyenv virtualenv</a></li>\n<li><a href=\"#nvm-%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8-npm-%E5%8C%85\">nvm 以及常用 npm 包</a></li>\n<li><a href=\"#spacemacs-%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE\">Spacemacs 安装以及基本配置</a></li>\n</ul>\n</li>\n<li><a href=\"#0x01-%E6%97%A5%E5%B8%B8%E7%9A%84%E7%BC%96%E8%BE%91\">0x01 日常的编辑</a>\n<ul>\n<li><a href=\"#11-%E6%96%87%E4%BB%B6%E5%AF%BC%E8%88%AA\">1.1 文件导航</a></li>\n<li><a href=\"#12-%E6%96%87%E4%BB%B6%E7%BC%96%E8%BE%91\">1.2 文件编辑</a></li>\n<li><a href=\"#13-markdown-writing\">1.3 Markdown Writing</a></li>\n</ul>\n</li>\n<li><a href=\"#0x02-python-%E7%BC%96%E7%A8%8B\">0x02. Python 编程</a>\n<ul>\n<li><a href=\"#21-%E4%BB%A3%E7%A0%81%E8%A1%A5%E5%85%A8\">2.1 代码补全</a></li>\n<li><a href=\"#22-%E4%BB%A3%E7%A0%81%E8%B7%B3%E8%BD%AC\">2.2 代码跳转</a></li>\n<li><a href=\"#23-pytest-%E6%B5%8B%E8%AF%95\">2.3 pytest 测试</a></li>\n</ul>\n</li>\n<li><a href=\"#0x03-ipython-notebook\">0x03. IPython Notebook</a>\n<ul>\n<li><a href=\"#31-ipython-notebook-%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE\">3.1 IPython Notebook 基本配置</a></li>\n<li><a href=\"#32-emacs-ipython-notebook\">3.2 Emacs IPython Notebook</a></li>\n</ul>\n</li>\n<li><a href=\"#0x04-%E6%89%A9%E5%B1%95\">0x04. 扩展</a></li>\n</ul>\n</li>\n</ul>\n"}},"__N_SSG":true}
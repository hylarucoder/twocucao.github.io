{"pageProps":{"post":{"tags":["Python"],"path":"20160923_IPynb和ECharts.md","title":"IPython Notebook 引入 ECharts 做可视化","slug":"IPython Notebook 引入 ECharts 做可视化","date":"2016-09-23","category":"Python","lastMod":"2020-01-01","description":"这篇文章展示了基本的 Markdown 语法和格式.","thumbnail":"","content":"<h1 id=\"ipython-notebook-引入-echarts-做可视化\"><a class=\"v-toc-item\" href=\"#ipython-notebook-引入-echarts-做可视化\">#</a> IPython Notebook 引入 ECharts 做可视化</h1>\n<h2 id=\"0x01-前言\"><a class=\"v-toc-item\" href=\"#0x01-前言\">#</a> 0x01 前言</h2>\n<p>Python 的开发生态圈有相当多的好用的数据分析挖掘工具。Pandas,Numpy,Scikit-Learn 等等。</p>\n<p>在进行数据分析挖掘的方面，我们选用 IPython Notebook 对数据进行前期的探索和挖掘。以及内部的可视化交流。</p>\n<p>也需要经常新的进行一些可视化来使得探索过程更加的顺利。面对海量的数据可视化，也依照目的使用不同的工具。</p>\n<ul>\n<li>对于后台开发 / 数据挖掘 / 爬虫工程师而言，内部沟通的过程中注重信息交流沟通的快捷和准确，而不需要考虑可视化的美观程度，所以使用 IPython Notebook 配上 Matplotlib 或者是 Seaborn 进行可视化。</li>\n<li>与其他非开发的技术人员交流沟通的时候，这个时候优美的图表就成为了重中之重。</li>\n</ul>\n<blockquote>\n<p>可是 Seaborn Matplotlib 这些库画出来的图，如同那些其貌不扬的高手，包含大量信息，美中不足的就是<strong>不美</strong>。那可不可以使用更加漂亮的图来可视化呢？</p>\n</blockquote>\n<p>有，ECharts<a href=\"http://echarts.baidu.com/examples.html\">案例地址戳这里</a></p>\n<blockquote>\n<p>想拥有 IPython Notebook 的优点上，还能够最大化 IPython Notebook 的美观程度，这就是我们想在 IPython Notebook 中引入 ECharts 作为可视化的初衷。</p>\n</blockquote>\n<blockquote>\n<p>如果你使用过 IPython Notebook，细心的你一定大致了解，核心困难点在于如何在 IPython Notebook 中引入 ECharts.</p>\n</blockquote>\n<p>今天我们使用 IPython NoteBook 来演示一个简单的 ECharts 饼图案例。本文的数据来自大众点评闵行区部分美食店铺。</p>\n<h2 id=\"0x01-代码思路\"><a class=\"v-toc-item\" href=\"#0x01-代码思路\">#</a> 0x01 代码思路</h2>\n<p>IPython 中，我们知道，可以通过 IPython.display 导入 HTML.</p>\n<pre><code class=\"language-python\">from IPython<span class=\"token punctuation\">.</span>display <span class=\"token keyword\">import</span> <span class=\"token constant\">HTML</span>\n<span class=\"token constant\">HTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span>\"\n<span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>这是一小块 <span class=\"token constant\">HTML</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token string\">\"\"</span>\"<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>执行就 IPython Notebook 中看到：</p>\n<pre><code>&lt;div&gt;这是一小块 HTML&lt;/div&gt;\n</code></pre>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-e7646baa6145766b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"显示 HTML\"></p>\n<p>但问题来了，我们知道，在通常的情况下，是不能动态引入 JS 脚本的。因此我们在开发 HTML 静态页面的时候，往往脚本都是在 Head 或者 Body 结束标签之前就写死了。如果要在 IPython 中增加 ECharts, 是不是需要修改一些配置文件，让 IPython Notebook 在 Header 部分引入 ECharts 脚本呢？</p>\n<p>答案是<strong>不需要</strong>.</p>\n<blockquote>\n<p>为何？因为 IPython Notebook 本身自带一个 Js 模块，叫做 RequireJS. 通过这个模块<strong>可以动态引入并执行 JS.</strong></p>\n</blockquote>\n<p>具体原理不详细介绍，但是这个模块为 IPython Notebook 动态引入其他 JS 框架和代码带来了无限的可能性。注意，再次强调，这个模块可以帮助我们<strong>可以动态引入并执行 JS.</strong></p>\n<p>于是通过下面的代码，我们就轻松的将 ECharts 引入到 IPython Notebook 中。</p>\n<pre><code class=\"language-python\">chart_header_html <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\"\n<span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"chart\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"width:800px; height:600px;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n    require<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n         paths<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n            echarts<span class=\"token operator\">:</span> <span class=\"token string\">'//cdn.bootcss.com/echarts/3.2.3/echarts.min'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'echarts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ec</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> myChart <span class=\"token operator\">=</span> ec<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chart'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                    title<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        text<span class=\"token operator\">:</span> <span class=\"token string\">'闵行区美食类人均消费餐馆分布'</span><span class=\"token punctuation\">,</span>\n                        subtext<span class=\"token operator\">:</span> <span class=\"token string\">'数据来自大众点评'</span><span class=\"token punctuation\">,</span>\n                        x<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        trigger<span class=\"token operator\">:</span> <span class=\"token string\">'item'</span><span class=\"token punctuation\">,</span>\n                        formatter<span class=\"token operator\">:</span> <span class=\"token string\">\"{a} &lt;br/>{b} : {c} ({d}%)\"</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        orient<span class=\"token operator\">:</span> <span class=\"token string\">'vertical'</span><span class=\"token punctuation\">,</span>\n                        left<span class=\"token operator\">:</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span>\n                        data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'人均消费不明'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'人均消费 0~50 元'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'人均消费 50~100 元'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'人均消费 100~150 元'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'人均消费 150~200 元'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'人均消费 200 元以上'</span><span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                        <span class=\"token punctuation\">{</span>\n                            name<span class=\"token operator\">:</span> <span class=\"token string\">'店铺比例'</span><span class=\"token punctuation\">,</span>\n                            type<span class=\"token operator\">:</span> <span class=\"token string\">'pie'</span><span class=\"token punctuation\">,</span>\n                            radius<span class=\"token operator\">:</span> <span class=\"token string\">'55%'</span><span class=\"token punctuation\">,</span>\n                            center<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'50%'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'60%'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                            data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n<span class=\"token string\">\"\"</span>\"\nchart_content_html <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\"\n                                <span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> <span class=\"token operator\">%</span>s<span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'人均消费不明'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> <span class=\"token operator\">%</span>s<span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'人均消费 0~50 元'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> <span class=\"token operator\">%</span>s<span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'人均消费 50~100 元'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> <span class=\"token operator\">%</span>s<span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'人均消费 100~150 元'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> <span class=\"token operator\">%</span>s<span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'人均消费 150~200 元'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> <span class=\"token operator\">%</span>s<span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'人均消费 200 元以上'</span><span class=\"token punctuation\">}</span>\n<span class=\"token string\">\"\"</span>\" <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>consume_unknown_restaurant_count<span class=\"token punctuation\">,</span>consume_0_50_restaurant_count<span class=\"token punctuation\">,</span>consume_50_100_restaurant_count<span class=\"token punctuation\">,</span>consume_100_150_restaurant_count<span class=\"token punctuation\">,</span>consume_150_200_restaurant_count<span class=\"token punctuation\">,</span>consume_200_greater_restaurant_count<span class=\"token punctuation\">)</span>\nchart_footer_html <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\"\n                            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                            itemStyle<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                emphasis<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                    shadowBlur<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n                                    shadowOffsetX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                                    shadowColor<span class=\"token operator\">:</span> <span class=\"token string\">'rgba(0, 0, 0, 0.5)'</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n                myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token string\">\"\"</span>\"\n\n<span class=\"token constant\">HTML</span><span class=\"token punctuation\">(</span>\n chart_header_html <span class=\"token operator\">+</span> chart_content_html <span class=\"token operator\">+</span> chart_footer_html\n<span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>看一看代码，首先，配置对应的脚本。引入 requirejs 的配置模块。</p>\n<pre><code class=\"language-javascript\">require<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  paths<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    echarts<span class=\"token operator\">:</span> <span class=\"token string\">\"//cdn.bootcss.com/echarts/3.2.3/echarts.min\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>接着使用如下代码进行引入和执行代码，具体的 Demo 可以参考文章末尾的代码：</p>\n<pre><code class=\"language-javascript\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'echarts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ec</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">//... 图表配置</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//... 获取图表 div</span>\n<span class=\"token comment\">//... 为所获取的图表 DIV 设置</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"0x03-效果\"><a class=\"v-toc-item\" href=\"#0x03-效果\">#</a> 0x03 效果</h2>\n<p>于是，美观漂亮的可视化图就出来了。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/52890-59bffc49212928be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"ECharts 饼图\"></p>\n<h2 id=\"0x04-代码\"><a class=\"v-toc-item\" href=\"#0x04-代码\">#</a> 0x04 代码</h2>\n<p>附上 IPythonNotebook 以及 Excel 表用于大家分析。</p>\n<ul>\n<li><a href=\"https://github.com/twocucao/DataScience/blob/master/project_03_dianpin/simple_stat.ipynb\">对应的 IPythonNotebook</a></li>\n<li><a href=\"https://github.com/twocucao/DataScience/blob/master/project_03_dianpin/%E5%A4%A7%E4%BC%97%E7%82%B9%E8%AF%84%E9%97%B5%E8%A1%8C%E5%8C%BA%E7%BE%8E%E9%A3%9F%E9%A4%90%E5%8E%85%E7%AE%80%E5%8D%95%E7%BB%9F%E8%AE%A1.xlsx\">对应的 Excel 表</a></li>\n</ul>\n","toc":"<ul class=\"v-article-toc\">\n<li><a href=\"#ipython-notebook-%E5%BC%95%E5%85%A5-echarts-%E5%81%9A%E5%8F%AF%E8%A7%86%E5%8C%96\">IPython Notebook 引入 ECharts 做可视化</a>\n<ul>\n<li><a href=\"#0x01-%E5%89%8D%E8%A8%80\">0x01 前言</a></li>\n<li><a href=\"#0x01-%E4%BB%A3%E7%A0%81%E6%80%9D%E8%B7%AF\">0x01 代码思路</a></li>\n<li><a href=\"#0x03-%E6%95%88%E6%9E%9C\">0x03 效果</a></li>\n<li><a href=\"#0x04-%E4%BB%A3%E7%A0%81\">0x04 代码</a></li>\n</ul>\n</li>\n</ul>\n"}},"__N_SSG":true}
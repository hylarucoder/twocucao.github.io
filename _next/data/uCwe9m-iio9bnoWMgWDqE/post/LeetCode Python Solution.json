{"pageProps":{"post":{"tags":["Windows"],"path":"20161221_LeetCodePythonSolution.md","title":"LeetCode Python Solution","slug":"LeetCode Python Solution","date":"2016-12-21","category":"善用佳软","lastMod":"2020-01-01","description":"这篇文章展示了基本的 Markdown 语法和格式.","thumbnail":"","content":"<h2 id=\"前言\"><a class=\"v-toc-item\" href=\"#前言\">#</a> 前言</h2>\n<p>刷刷简单的算法问题，顺手提升一下编程的裸写代码的能力。</p>\n<p>本文为 LeetCode 的 Easy 算法的解法集合。</p>\n<!-- more -->\n<h2 id=\"easy-集合\"><a class=\"v-toc-item\" href=\"#easy-集合\">#</a> Easy 集合</h2>\n<h3 id=\"1-two-sum-294\"><a class=\"v-toc-item\" href=\"#1-two-sum-294\">#</a> 1. Two Sum 29.4%</h3>\n<pre><code class=\"language-python\">\n# 尝试：暴力解决\n# 结果：超时\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">twoSum</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type nums<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>int<span class=\"token punctuation\">]</span>\n        <span class=\"token operator\">:</span>type target<span class=\"token operator\">:</span> int\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>int<span class=\"token punctuation\">]</span>\n        <span class=\"token string\">\"\"</span>\"\n        begin <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        end <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n                <span class=\"token keyword\">if</span> i <span class=\"token operator\">!=</span> j and target <span class=\"token operator\">==</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">]</span>\n\n# 尝试：字典也就是 HashMap 解决\n# 结果：读题不准确，数组不行\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">twoSum</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type nums<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>int<span class=\"token punctuation\">]</span>\n        <span class=\"token operator\">:</span>type target<span class=\"token operator\">:</span> int\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>int<span class=\"token punctuation\">]</span>\n        <span class=\"token string\">\"\"</span>\"\n        nums_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span>num <span class=\"token keyword\">in</span> <span class=\"token function\">enumerate</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n            nums_dict<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i\n        <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> nums<span class=\"token operator\">:</span>\n            item_num_1st <span class=\"token operator\">=</span> nums_dict<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n            item_num_2st <span class=\"token operator\">=</span> nums_dict<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>target<span class=\"token operator\">-</span>num<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> item_num_2st is not None and item_num_1st <span class=\"token operator\">!=</span> item_num_2st<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>item_num_1st<span class=\"token punctuation\">,</span>item_num_2st<span class=\"token punctuation\">]</span>\n# 尝试：其他\n# 结果：其他\n\n</code></pre>\n<h3 id=\"6-zigzag-conversion-258\"><a class=\"v-toc-item\" href=\"#6-zigzag-conversion-258\">#</a> 6. ZigZag Conversion 25.8%</h3>\n<h3 id=\"7-reverse-integer-237-easy\"><a class=\"v-toc-item\" href=\"#7-reverse-integer-237-easy\">#</a> 7 Reverse Integer 23.7% Easy</h3>\n<pre><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type x<span class=\"token operator\">:</span> int\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> int\n        <span class=\"token string\">\"\"</span>\"\n        preffix <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">\"-\"</span> <span class=\"token keyword\">in</span> <span class=\"token function\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n            num <span class=\"token operator\">=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">strip</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            preffix <span class=\"token operator\">=</span> <span class=\"token string\">\"-\"</span>\n        <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n            num <span class=\"token operator\">=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> num <span class=\"token operator\">>=</span> <span class=\"token number\">2147483648</span> or num <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">-</span><span class=\"token number\">2147483647</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">return</span>  <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>preffix<span class=\"token operator\">+</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"8-string-to-integer-atoi-138-easy\"><a class=\"v-toc-item\" href=\"#8-string-to-integer-atoi-138-easy\">#</a> 8 String to Integer (atoi) 13.8% Easy</h3>\n<h3 id=\"9-palindrome-number-340-easy\"><a class=\"v-toc-item\" href=\"#9-palindrome-number-340-easy\">#</a> 9 Palindrome Number 34.0% Easy</h3>\n<pre><code class=\"language-python\"># 使用了额外的存储，亟待优化\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type x<span class=\"token operator\">:</span> int\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> bool\n        <span class=\"token string\">\"\"</span>\"\n        l_x <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> l_x <span class=\"token operator\">==</span> l_x<span class=\"token punctuation\">[</span><span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h3 id=\"13-roman-to-integer-432-easy\"><a class=\"v-toc-item\" href=\"#13-roman-to-integer-432-easy\">#</a> 13 Roman to Integer 43.2% Easy</h3>\n<h3 id=\"14-longest-common-prefix-304-easy\"><a class=\"v-toc-item\" href=\"#14-longest-common-prefix-304-easy\">#</a> 14 Longest Common Prefix 30.4% Easy</h3>\n<pre><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">longestCommonPrefix</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> strs<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type strs<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>str<span class=\"token punctuation\">]</span>\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> str\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>strs<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span>\n        current_clip <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n        len_strs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>_str<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _str <span class=\"token keyword\">in</span> strs<span class=\"token punctuation\">]</span>\n        min_strs_len <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>len_strs<span class=\"token punctuation\">)</span>\n        has_common_flag <span class=\"token operator\">=</span> False\n        <span class=\"token keyword\">for</span> _len <span class=\"token keyword\">in</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span>min_strs_len<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n            cliped_strs_set <span class=\"token operator\">=</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> _str <span class=\"token keyword\">in</span> strs<span class=\"token operator\">:</span>\n                current_clip <span class=\"token operator\">=</span> _str<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token operator\">:</span>_len<span class=\"token punctuation\">]</span>\n                cliped_strs_set<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>current_clip<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>cliped_strs_set<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n                has_common_flag <span class=\"token operator\">=</span> True\n                <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">if</span> has_common_flag<span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> current_clip\n        <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span>\n</code></pre>\n<h3 id=\"19-remove-nth-node-from-end-of-list-320-easy\"><a class=\"v-toc-item\" href=\"#19-remove-nth-node-from-end-of-list-320-easy\">#</a> 19 Remove Nth Node From End of List 32.0% Easy</h3>\n<h3 id=\"20-valid-parentheses-319-easy\"><a class=\"v-toc-item\" href=\"#20-valid-parentheses-319-easy\">#</a> 20 Valid Parentheses 31.9% Easy</h3>\n<h3 id=\"21-merge-two-sorted-lists-377-easy\"><a class=\"v-toc-item\" href=\"#21-merge-two-sorted-lists-377-easy\">#</a> 21 Merge Two Sorted Lists 37.7% Easy</h3>\n<h3 id=\"24-swap-nodes-in-pairs-370-easy\"><a class=\"v-toc-item\" href=\"#24-swap-nodes-in-pairs-370-easy\">#</a> 24 Swap Nodes in Pairs 37.0% Easy</h3>\n<h3 id=\"26-remove-duplicates-from-sorted-array-352-easy\"><a class=\"v-toc-item\" href=\"#26-remove-duplicates-from-sorted-array-352-easy\">#</a> 26 Remove Duplicates from Sorted Array 35.2% Easy</h3>\n<h3 id=\"27-remove-element-367-easy\"><a class=\"v-toc-item\" href=\"#27-remove-element-367-easy\">#</a> 27 Remove Element 36.7% Easy</h3>\n<h3 id=\"28-implement-strstr-268-easy\"><a class=\"v-toc-item\" href=\"#28-implement-strstr-268-easy\">#</a> 28 Implement strStr() 26.8% Easy</h3>\n<pre><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">strStr</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> haystack<span class=\"token punctuation\">,</span> needle<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type haystack<span class=\"token operator\">:</span> str\n        <span class=\"token operator\">:</span>type needle<span class=\"token operator\">:</span> str\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> int\n        <span class=\"token string\">\"\"</span>\"\n        cur <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">try</span><span class=\"token operator\">:</span>\n            cur <span class=\"token operator\">=</span> haystack<span class=\"token punctuation\">.</span><span class=\"token function\">index</span><span class=\"token punctuation\">(</span>needle<span class=\"token punctuation\">)</span>\n        except Exception<span class=\"token operator\">:</span>\n            pass\n        <span class=\"token keyword\">return</span> cur\n</code></pre>\n<h3 id=\"36-valid-sudoku-337-easy\"><a class=\"v-toc-item\" href=\"#36-valid-sudoku-337-easy\">#</a> 36 Valid Sudoku 33.7% Easy</h3>\n<pre><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">isValidSudoku</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> board<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type board<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span>str<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> bool\n        <span class=\"token string\">\"\"</span>\"\n        # 横向\n\n</code></pre>\n<h3 id=\"38-count-and-say-323-easy\"><a class=\"v-toc-item\" href=\"#38-count-and-say-323-easy\">#</a> 38 Count and Say 32.3% Easy</h3>\n<h3 id=\"58-length-of-last-word-310-easy\"><a class=\"v-toc-item\" href=\"#58-length-of-last-word-310-easy\">#</a> 58 Length of Last Word 31.0% Easy</h3>\n<h3 id=\"66-plus-one-367-easy\"><a class=\"v-toc-item\" href=\"#66-plus-one-367-easy\">#</a> 66 Plus One 36.7% Easy</h3>\n<h3 id=\"67-add-binary-302-easy\"><a class=\"v-toc-item\" href=\"#67-add-binary-302-easy\">#</a> 67 Add Binary 30.2% Easy</h3>\n<h3 id=\"70-climbing-stairs-385-easy\"><a class=\"v-toc-item\" href=\"#70-climbing-stairs-385-easy\">#</a> 70 Climbing Stairs 38.5% Easy</h3>\n<h3 id=\"83-remove-duplicates-from-sorted-list-387-easy\"><a class=\"v-toc-item\" href=\"#83-remove-duplicates-from-sorted-list-387-easy\">#</a> 83 Remove Duplicates from Sorted List 38.7% Easy</h3>\n<h3 id=\"88-merge-sorted-array-313-easy\"><a class=\"v-toc-item\" href=\"#88-merge-sorted-array-313-easy\">#</a> 88 Merge Sorted Array 31.3% Easy</h3>\n<h3 id=\"100-same-tree-451-easy\"><a class=\"v-toc-item\" href=\"#100-same-tree-451-easy\">#</a> 100 Same Tree 45.1% Easy</h3>\n<pre><code class=\"language-python\"># Definition <span class=\"token keyword\">for</span> a binary tree node<span class=\"token punctuation\">.</span>\n# <span class=\"token keyword\">class</span> <span class=\"token class-name\">TreeNode</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n#     def <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n#         self<span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> x\n#         self<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> None\n#         self<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> None\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">isSameTree</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type p<span class=\"token operator\">:</span> TreeNode\n        <span class=\"token operator\">:</span>type q<span class=\"token operator\">:</span> TreeNode\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> bool\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token keyword\">if</span> p is None and q is None<span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> True\n        elif p is not None and q is not None<span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">.</span>val <span class=\"token operator\">==</span> q<span class=\"token punctuation\">.</span>val and self<span class=\"token punctuation\">.</span><span class=\"token function\">isSameTree</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span> and  self<span class=\"token punctuation\">.</span><span class=\"token function\">isSameTree</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> False\n\n</code></pre>\n<h3 id=\"101-symmetric-tree-367-easy\"><a class=\"v-toc-item\" href=\"#101-symmetric-tree-367-easy\">#</a> 101 Symmetric Tree 36.7% Easy</h3>\n<h3 id=\"102-binary-tree-level-order-traversal-367-easy\"><a class=\"v-toc-item\" href=\"#102-binary-tree-level-order-traversal-367-easy\">#</a> 102 Binary Tree Level Order Traversal 36.7% Easy</h3>\n<h3 id=\"104-maximum-depth-of-binary-tree-506-easy\"><a class=\"v-toc-item\" href=\"#104-maximum-depth-of-binary-tree-506-easy\">#</a> 104 Maximum Depth of Binary Tree 50.6% Easy</h3>\n<h3 id=\"107-binary-tree-level-order-traversal-ii-375-easy\"><a class=\"v-toc-item\" href=\"#107-binary-tree-level-order-traversal-ii-375-easy\">#</a> 107 Binary Tree Level Order Traversal II 37.5% Easy</h3>\n<h3 id=\"110-balanced-binary-tree-361-easy\"><a class=\"v-toc-item\" href=\"#110-balanced-binary-tree-361-easy\">#</a> 110 Balanced Binary Tree 36.1% Easy</h3>\n<h3 id=\"111-minimum-depth-of-binary-tree-322-easy\"><a class=\"v-toc-item\" href=\"#111-minimum-depth-of-binary-tree-322-easy\">#</a> 111 Minimum Depth of Binary Tree 32.2% Easy</h3>\n<h3 id=\"112-path-sum-328-easy\"><a class=\"v-toc-item\" href=\"#112-path-sum-328-easy\">#</a> 112 Path Sum 32.8% Easy</h3>\n<h3 id=\"118-pascals-triangle-365-easy\"><a class=\"v-toc-item\" href=\"#118-pascals-triangle-365-easy\">#</a> 118 Pascal’s Triangle 36.5% Easy</h3>\n<h3 id=\"119-pascals-triangle-ii-348-easy\"><a class=\"v-toc-item\" href=\"#119-pascals-triangle-ii-348-easy\">#</a> 119 Pascal’s Triangle II 34.8% Easy</h3>\n<h3 id=\"121-best-time-to-buy-and-sell-stock-389-easy\"><a class=\"v-toc-item\" href=\"#121-best-time-to-buy-and-sell-stock-389-easy\">#</a> 121 Best Time to Buy and Sell Stock 38.9% Easy</h3>\n<h3 id=\"125-valid-palindrome-252-easy\"><a class=\"v-toc-item\" href=\"#125-valid-palindrome-252-easy\">#</a> 125 Valid Palindrome 25.2% Easy</h3>\n<h3 id=\"136-single-number-526-easy\"><a class=\"v-toc-item\" href=\"#136-single-number-526-easy\">#</a> 136 Single Number 52.6% Easy</h3>\n<h3 id=\"141-linked-list-cycle-359-easy\"><a class=\"v-toc-item\" href=\"#141-linked-list-cycle-359-easy\">#</a> 141 Linked List Cycle 35.9% Easy</h3>\n<h3 id=\"155-min-stack-260-easy\"><a class=\"v-toc-item\" href=\"#155-min-stack-260-easy\">#</a> 155 Min Stack 26.0% Easy</h3>\n<h3 id=\"157-read-n-characters-given-read4-294-easy\"><a class=\"v-toc-item\" href=\"#157-read-n-characters-given-read4-294-easy\">#</a> 157 Read N Characters Given Read4 29.4% Easy</h3>\n<h3 id=\"160-intersection-of-two-linked-lists-300-easy\"><a class=\"v-toc-item\" href=\"#160-intersection-of-two-linked-lists-300-easy\">#</a> 160 Intersection of Two Linked Lists 30.0% Easy</h3>\n<h3 id=\"165-compare-version-numbers-191-easy\"><a class=\"v-toc-item\" href=\"#165-compare-version-numbers-191-easy\">#</a> 165 Compare Version Numbers 19.1% Easy</h3>\n<h3 id=\"168-excel-sheet-column-title-242-easy\"><a class=\"v-toc-item\" href=\"#168-excel-sheet-column-title-242-easy\">#</a> 168 Excel Sheet Column Title 24.2% Easy</h3>\n<pre><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">titleToNumber</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type s<span class=\"token operator\">:</span> str\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> int\n        <span class=\"token string\">\"\"</span>\"\n        result <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span>c <span class=\"token keyword\">in</span> <span class=\"token function\">enumerate</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n            result <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">26</span> <span class=\"token operator\">**</span> i<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> result\n</code></pre>\n<h3 id=\"169-majority-element-446-easy\"><a class=\"v-toc-item\" href=\"#169-majority-element-446-easy\">#</a> 169 Majority Element 44.6% Easy</h3>\n<pre><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">majorityElement</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type nums<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>int<span class=\"token punctuation\">]</span>\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> int\n        <span class=\"token string\">\"\"</span>\"\n        from collections <span class=\"token keyword\">import</span> Counter\n        <span class=\"token keyword\">return</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">most_common</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n</code></pre>\n<h3 id=\"170-two-sum-iii-data-structure-design-226-easy\"><a class=\"v-toc-item\" href=\"#170-two-sum-iii-data-structure-design-226-easy\">#</a> 170 Two Sum III - Data structure design 22.6% Easy</h3>\n<h3 id=\"171-excel-sheet-column-number-450-easy\"><a class=\"v-toc-item\" href=\"#171-excel-sheet-column-number-450-easy\">#</a> 171 Excel Sheet Column Number 45.0% Easy</h3>\n<h3 id=\"172-factorial-trailing-zeroes-347-easy\"><a class=\"v-toc-item\" href=\"#172-factorial-trailing-zeroes-347-easy\">#</a> 172 Factorial Trailing Zeroes 34.7% Easy</h3>\n<h3 id=\"189-rotate-array-233-easy\"><a class=\"v-toc-item\" href=\"#189-rotate-array-233-easy\">#</a> 189 Rotate Array 23.3% Easy</h3>\n<h3 id=\"190-reverse-bits-295-easy\"><a class=\"v-toc-item\" href=\"#190-reverse-bits-295-easy\">#</a> 190 Reverse Bits 29.5% Easy</h3>\n<pre><code>class Solution:\n    # @param n, an integer\n    # @return an integer\n    def reverseBits(self, n):\n        return int(bin(n).replace(&quot;0b&quot;,&quot;&quot;).zfill(32)[::-1],2)\n</code></pre>\n<h3 id=\"191-number-of-1-bits-384-easy\"><a class=\"v-toc-item\" href=\"#191-number-of-1-bits-384-easy\">#</a> 191 Number of 1 Bits 38.4% Easy</h3>\n<h3 id=\"198-house-robber-372-easy\"><a class=\"v-toc-item\" href=\"#198-house-robber-372-easy\">#</a> 198 House Robber 37.2% Easy</h3>\n<h3 id=\"202-happy-number-390-easy\"><a class=\"v-toc-item\" href=\"#202-happy-number-390-easy\">#</a> 202 Happy Number 39.0% Easy</h3>\n<pre><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">isHappy</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type n<span class=\"token operator\">:</span> int\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> bool\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span><span class=\"token function\">isHappyNum</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    def <span class=\"token function\">isHappyNum</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>result_list<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        result <span class=\"token operator\">=</span> <span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>lambda x <span class=\"token punctuation\">,</span> y <span class=\"token operator\">:</span> x<span class=\"token operator\">+</span> y<span class=\"token punctuation\">,</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>lambda x <span class=\"token operator\">:</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> result <span class=\"token keyword\">in</span> result_list<span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> False\n        <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n            result_list<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span><span class=\"token function\">isHappyNum</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span>result_list<span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h3 id=\"203-remove-linked-list-elements-308-easy\"><a class=\"v-toc-item\" href=\"#203-remove-linked-list-elements-308-easy\">#</a> 203 Remove Linked List Elements 30.8% Easy</h3>\n<h3 id=\"204-count-primes-260-easy\"><a class=\"v-toc-item\" href=\"#204-count-primes-260-easy\">#</a> 204 Count Primes 26.0% Easy</h3>\n<h3 id=\"205-isomorphic-strings-323-easy\"><a class=\"v-toc-item\" href=\"#205-isomorphic-strings-323-easy\">#</a> 205 Isomorphic Strings 32.3% Easy</h3>\n<h3 id=\"206-reverse-linked-list-432-easy\"><a class=\"v-toc-item\" href=\"#206-reverse-linked-list-432-easy\">#</a> 206 Reverse Linked List 43.2% Easy</h3>\n<h3 id=\"217-contains-duplicate-435-easy\"><a class=\"v-toc-item\" href=\"#217-contains-duplicate-435-easy\">#</a> 217 Contains Duplicate 43.5% Easy</h3>\n<pre><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">containsDuplicate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type nums<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>int<span class=\"token punctuation\">]</span>\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> bool\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token keyword\">return</span> nums is not None and <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">1</span> and <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"219-contains-duplicate-ii-313-easy\"><a class=\"v-toc-item\" href=\"#219-contains-duplicate-ii-313-easy\">#</a> 219 Contains Duplicate II 31.3% Easy</h3>\n<h3 id=\"223-rectangle-area-318-easy\"><a class=\"v-toc-item\" href=\"#223-rectangle-area-318-easy\">#</a> 223 Rectangle Area 31.8% Easy</h3>\n<h3 id=\"225-implement-stack-using-queues-310-easy\"><a class=\"v-toc-item\" href=\"#225-implement-stack-using-queues-310-easy\">#</a> 225 Implement Stack using Queues 31.0% Easy</h3>\n<h3 id=\"226-invert-binary-tree-495-easy\"><a class=\"v-toc-item\" href=\"#226-invert-binary-tree-495-easy\">#</a> 226 Invert Binary Tree 49.5% Easy</h3>\n<h3 id=\"231-power-of-two-391-easy\"><a class=\"v-toc-item\" href=\"#231-power-of-two-391-easy\">#</a> 231 Power of Two 39.1% Easy</h3>\n<pre><code>class Solution(object):\n    def isPowerOfTwo(self, n):\n        &quot;&quot;&quot;\n        :type n: int\n        :rtype: bool\n        &quot;&quot;&quot;\n        if n % 2 == 1 and n &gt; 1:\n            return False\n        elif n &lt;= 0:\n            return False\n        elif n in (2,1):\n            return True\n        else:\n            return self.isPowerOfTwo(n / 2)\n</code></pre>\n<h3 id=\"232-implement-queue-using-stacks-349-easy\"><a class=\"v-toc-item\" href=\"#232-implement-queue-using-stacks-349-easy\">#</a> 232 Implement Queue using Stacks 34.9% Easy</h3>\n<h3 id=\"234-palindrome-linked-list-314-easy\"><a class=\"v-toc-item\" href=\"#234-palindrome-linked-list-314-easy\">#</a> 234 Palindrome Linked List 31.4% Easy</h3>\n<h3 id=\"235-lowest-common-ancestor-of-a-binary-search-tree-380-easy\"><a class=\"v-toc-item\" href=\"#235-lowest-common-ancestor-of-a-binary-search-tree-380-easy\">#</a> 235 Lowest Common Ancestor of a Binary Search Tree 38.0% Easy</h3>\n<h3 id=\"237-delete-node-in-a-linked-list-452-easy\"><a class=\"v-toc-item\" href=\"#237-delete-node-in-a-linked-list-452-easy\">#</a> 237 Delete Node in a Linked List 45.2% Easy</h3>\n<pre><code class=\"language-python\"># Definition <span class=\"token keyword\">for</span> singly<span class=\"token operator\">-</span>linked list<span class=\"token punctuation\">.</span>\n# <span class=\"token keyword\">class</span> <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n#     def <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n#         self<span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> x\n#         self<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> None\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">deleteNode</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type node<span class=\"token operator\">:</span> ListNode\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> Do not <span class=\"token keyword\">return</span> anything<span class=\"token punctuation\">,</span> modify node <span class=\"token keyword\">in</span><span class=\"token operator\">-</span>place instead<span class=\"token punctuation\">.</span>\n        这个方法是可以 Get 到 node 点的，但是题目的要求应该不是这个意思\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token keyword\">if</span> node<span class=\"token punctuation\">.</span>next is not None<span class=\"token operator\">:</span>\n            node <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>next\n</code></pre>\n<h3 id=\"242-valid-anagram-446-easy\"><a class=\"v-toc-item\" href=\"#242-valid-anagram-446-easy\">#</a> 242 Valid Anagram 44.6% Easy</h3>\n<pre><code>class Solution(object):\n    def isAnagram(self, s, t):\n        &quot;&quot;&quot;\n        :type s: str\n        :type t: str\n        :rtype: bool\n        &quot;&quot;&quot;\n        from collections import Counter\n        return Counter(s) == Counter(t)\n\n</code></pre>\n<h3 id=\"243-shortest-word-distance-505-easy\"><a class=\"v-toc-item\" href=\"#243-shortest-word-distance-505-easy\">#</a> 243 Shortest Word Distance 50.5% Easy</h3>\n<h3 id=\"246-strobogrammatic-number-387-easy\"><a class=\"v-toc-item\" href=\"#246-strobogrammatic-number-387-easy\">#</a> 246 Strobogrammatic Number 38.7% Easy</h3>\n<h3 id=\"249-group-shifted-strings-381-easy\"><a class=\"v-toc-item\" href=\"#249-group-shifted-strings-381-easy\">#</a> 249 Group Shifted Strings 38.1% Easy</h3>\n<h3 id=\"252-meeting-rooms-452-easy\"><a class=\"v-toc-item\" href=\"#252-meeting-rooms-452-easy\">#</a> 252 Meeting Rooms 45.2% Easy</h3>\n<h3 id=\"257-binary-tree-paths-343-easy\"><a class=\"v-toc-item\" href=\"#257-binary-tree-paths-343-easy\">#</a> 257 Binary Tree Paths 34.3% Easy</h3>\n<h3 id=\"258-add-digits-501-easy\"><a class=\"v-toc-item\" href=\"#258-add-digits-501-easy\">#</a> 258 Add Digits 50.1% Easy</h3>\n<h3 id=\"263-ugly-number-383-easy\"><a class=\"v-toc-item\" href=\"#263-ugly-number-383-easy\">#</a> 263 Ugly Number 38.3% Easy</h3>\n<h3 id=\"266-palindrome-permutation-548-easy\"><a class=\"v-toc-item\" href=\"#266-palindrome-permutation-548-easy\">#</a> 266 Palindrome Permutation 54.8% Easy</h3>\n<h3 id=\"270-closest-binary-search-tree-value-378-easy\"><a class=\"v-toc-item\" href=\"#270-closest-binary-search-tree-value-378-easy\">#</a> 270 Closest Binary Search Tree Value 37.8% Easy</h3>\n<h3 id=\"276-paint-fence-337-easy\"><a class=\"v-toc-item\" href=\"#276-paint-fence-337-easy\">#</a> 276 Paint Fence 33.7% Easy</h3>\n<h3 id=\"278-first-bad-version-242-easy\"><a class=\"v-toc-item\" href=\"#278-first-bad-version-242-easy\">#</a> 278 First Bad Version 24.2% Easy</h3>\n<h3 id=\"283-move-zeroes-475-easy\"><a class=\"v-toc-item\" href=\"#283-move-zeroes-475-easy\">#</a> 283 Move Zeroes 47.5% Easy</h3>\n<pre><code class=\"language-python\">\n# 首先想到的这个答案\n# 然后 leetcode 上面居然还是打印的原来的值，我猜测肯定是用后台进行 id 比对内存地址。好吧，这个方式最好。\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">moveZeroes</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type nums<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>int<span class=\"token punctuation\">]</span>\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> Do not <span class=\"token keyword\">return</span> anything<span class=\"token punctuation\">,</span> modify nums <span class=\"token keyword\">in</span><span class=\"token operator\">-</span>place instead<span class=\"token punctuation\">.</span>\n        <span class=\"token string\">\"\"</span>\"\n        zero_count <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        new_nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>num <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> nums <span class=\"token keyword\">if</span> num <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        new_nums<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>zero_count<span class=\"token punctuation\">)</span>\n        nums <span class=\"token operator\">=</span> new_nums\n\n## 蛋疼，三重排序\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">moveZeroes</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type nums<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>int<span class=\"token punctuation\">]</span>\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> Do not <span class=\"token keyword\">return</span> anything<span class=\"token punctuation\">,</span> modify nums <span class=\"token keyword\">in</span><span class=\"token operator\">-</span>place instead<span class=\"token punctuation\">.</span>\n        <span class=\"token string\">\"\"</span>\"\n        begin_cur <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        end_cur <span class=\"token operator\">=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n                <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> and nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n                    nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h3 id=\"288-unique-word-abbreviation-153-easy\"><a class=\"v-toc-item\" href=\"#288-unique-word-abbreviation-153-easy\">#</a> 288 Unique Word Abbreviation 15.3% Easy</h3>\n<h3 id=\"290-word-pattern-319-easy\"><a class=\"v-toc-item\" href=\"#290-word-pattern-319-easy\">#</a> 290 Word Pattern 31.9% Easy</h3>\n<h3 id=\"292-nim-game-546-easy\"><a class=\"v-toc-item\" href=\"#292-nim-game-546-easy\">#</a> 292 Nim Game 54.6% Easy</h3>\n<h3 id=\"293-flip-game-537-easy\"><a class=\"v-toc-item\" href=\"#293-flip-game-537-easy\">#</a> 293 Flip Game 53.7% Easy</h3>\n<h3 id=\"299-bulls-and-cows-330-easy\"><a class=\"v-toc-item\" href=\"#299-bulls-and-cows-330-easy\">#</a> 299 Bulls and Cows 33.0% Easy</h3>\n<h3 id=\"303-range-sum-query-immutable-261-easy\"><a class=\"v-toc-item\" href=\"#303-range-sum-query-immutable-261-easy\">#</a> 303 Range Sum Query - Immutable 26.1% Easy</h3>\n<h3 id=\"326-power-of-three-391-easy\"><a class=\"v-toc-item\" href=\"#326-power-of-three-391-easy\">#</a> 326 Power of Three 39.1% Easy</h3>\n<h3 id=\"339-nested-list-weight-sum-595-easy\"><a class=\"v-toc-item\" href=\"#339-nested-list-weight-sum-595-easy\">#</a> 339 Nested List Weight Sum 59.5% Easy</h3>\n<h3 id=\"342-power-of-four-372-easy\"><a class=\"v-toc-item\" href=\"#342-power-of-four-372-easy\">#</a> 342 Power of Four 37.2% Easy</h3>\n<h3 id=\"344-reverse-string-574-easy\"><a class=\"v-toc-item\" href=\"#344-reverse-string-574-easy\">#</a> 344 Reverse String 57.4% Easy</h3>\n<pre><code>class Solution(object):\n    def reverseString(self, s):\n        &quot;&quot;&quot;\n        :type s: str\n        :rtype: str\n        &quot;&quot;&quot;\n        return s[::-1]\n</code></pre>\n<h3 id=\"345-reverse-vowels-of-a-string-371-easy\"><a class=\"v-toc-item\" href=\"#345-reverse-vowels-of-a-string-371-easy\">#</a> 345 Reverse Vowels of a String 37.1% Easy</h3>\n<h3 id=\"346-moving-average-from-data-stream-571-easy\"><a class=\"v-toc-item\" href=\"#346-moving-average-from-data-stream-571-easy\">#</a> 346 Moving Average from Data Stream 57.1% Easy</h3>\n<h3 id=\"349-intersection-of-two-arrays-454-easy\"><a class=\"v-toc-item\" href=\"#349-intersection-of-two-arrays-454-easy\">#</a> 349 Intersection of Two Arrays 45.4% Easy</h3>\n<pre><code>class Solution(object):\n    def intersection(self, nums1, nums2):\n        &quot;&quot;&quot;\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: List[int]\n        &quot;&quot;&quot;\n        return list(set(nums1) &amp; set(nums2))\n</code></pre>\n<h3 id=\"350-intersection-of-two-arrays-ii-434-easy\"><a class=\"v-toc-item\" href=\"#350-intersection-of-two-arrays-ii-434-easy\">#</a> 350 Intersection of Two Arrays II 43.4% Easy</h3>\n<h3 id=\"359-logger-rate-limiter-580-easy\"><a class=\"v-toc-item\" href=\"#359-logger-rate-limiter-580-easy\">#</a> 359 Logger Rate Limiter 58.0% Easy</h3>\n<h3 id=\"371-sum-of-two-integers-515-easy\"><a class=\"v-toc-item\" href=\"#371-sum-of-two-integers-515-easy\">#</a> 371 Sum of Two Integers 51.5% Easy</h3>\n<h3 id=\"374-guess-number-higher-or-lower-332-easy\"><a class=\"v-toc-item\" href=\"#374-guess-number-higher-or-lower-332-easy\">#</a> 374 Guess Number Higher or Lower 33.2% Easy</h3>\n<h3 id=\"383-ransom-note-459-easy\"><a class=\"v-toc-item\" href=\"#383-ransom-note-459-easy\">#</a> 383 Ransom Note 45.9% Easy</h3>\n<h3 id=\"387-first-unique-character-in-a-string-451-easy\"><a class=\"v-toc-item\" href=\"#387-first-unique-character-in-a-string-451-easy\">#</a> 387 First Unique Character in a String 45.1% Easy</h3>\n<pre><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">firstUniqChar</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type s<span class=\"token operator\">:</span> str\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> int\n        <span class=\"token string\">\"\"</span>\"\n        flag <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        from collections <span class=\"token keyword\">import</span> Counter\n        uniq_chars_set <span class=\"token operator\">=</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>k <span class=\"token keyword\">for</span> k <span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> v <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span>c <span class=\"token keyword\">in</span> <span class=\"token function\">enumerate</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> c <span class=\"token keyword\">in</span> uniq_chars_set<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">return</span> i\n        <span class=\"token keyword\">return</span> flag\n</code></pre>\n<h3 id=\"389-find-the-difference-503-easy\"><a class=\"v-toc-item\" href=\"#389-find-the-difference-503-easy\">#</a> 389 Find the Difference 50.3% Easy</h3>\n<h3 id=\"396-rotate-function-301-easy\"><a class=\"v-toc-item\" href=\"#396-rotate-function-301-easy\">#</a> 396 Rotate Function 30.1% Easy</h3>\n<h3 id=\"400-nth-digit-306-easy\"><a class=\"v-toc-item\" href=\"#400-nth-digit-306-easy\">#</a> 400 Nth Digit 30.6% Easy</h3>\n<h3 id=\"401-binary-watch-431-easy\"><a class=\"v-toc-item\" href=\"#401-binary-watch-431-easy\">#</a> 401 Binary Watch 43.1% Easy</h3>\n<h3 id=\"404-sum-of-left-leaves-456-easy\"><a class=\"v-toc-item\" href=\"#404-sum-of-left-leaves-456-easy\">#</a> 404 Sum of Left Leaves 45.6% Easy</h3>\n<pre><code># Definition for a binary tree node.\n\n# class TreeNode(object):\n\n#     def __init__(self, x):\n\n#         self.val = x\n\n#         self.left = None\n\n#         self.right = None\n\nclass Solution(object):\n\n    def sumOfLeftLeaves(self, root):\n\n        &quot;&quot;&quot;\n\n        :type root: TreeNode\n\n        :rtype: int\n\n        &quot;&quot;&quot;\n\n        if root is None:\n\n            return 0\n\n        return self.newSumOfLeftLeaves(root.left,-1) + self.newSumOfLeftLeaves(root.right,1)\n\n    def newSumOfLeftLeaves(self,root,flag):\n\n        if root is None:\n\n            return 0\n\n        elif root.left is not None and root.right is not None:\n\n            return self.newSumOfLeftLeaves(root.left,-1) + self.newSumOfLeftLeaves(root.right,1)\n\n        elif root.left is None and root.right is None:\n\n            if flag == -1:\n\n                return root.val + self.newSumOfLeftLeaves(root.right,1)\n\n            else:\n\n                return 0\n\n        elif root.left is None and root.right is not None:\n\n            return self.newSumOfLeftLeaves(root.right,1)\n\n        elif root.left is not None and root.right is None:\n\n            return self.newSumOfLeftLeaves(root.left,-1)\n</code></pre>\n<h3 id=\"405-convert-a-number-to-hexadecimal-406-easy\"><a class=\"v-toc-item\" href=\"#405-convert-a-number-to-hexadecimal-406-easy\">#</a> 405 Convert a Number to Hexadecimal 40.6% Easy</h3>\n<h3 id=\"408-valid-word-abbreviation-272-easy\"><a class=\"v-toc-item\" href=\"#408-valid-word-abbreviation-272-easy\">#</a> 408 Valid Word Abbreviation 27.2% Easy</h3>\n<h3 id=\"409-longest-palindrome-441-easy\"><a class=\"v-toc-item\" href=\"#409-longest-palindrome-441-easy\">#</a> 409 Longest Palindrome 44.1% Easy</h3>\n<pre><code>class Solution(object):\n    def longestPalindrome(self, s):\n        &quot;&quot;&quot;\n        :type s: str\n        :rtype: int\n        &quot;&quot;&quot;\n        from collections import Counter\n        max_len = 0\n        odd_count = 0\n        for _chr,_chrs_len in Counter(s).items():\n            if _chrs_len % 2 == 1:\n                odd_count = 1\n                max_len += _chrs_len - 1\n            else:\n                max_len += _chrs_len\n\n        return max_len + odd_count\n</code></pre>\n<h3 id=\"412-fizz-buzz-580-easy\"><a class=\"v-toc-item\" href=\"#412-fizz-buzz-580-easy\">#</a> 412 Fizz Buzz 58.0% Easy</h3>\n<pre><code>class Solution(object):\n    def fizzBuzz(self, n):\n        &quot;&quot;&quot;\n        :type n: int\n        :rtype: List[str]\n        &quot;&quot;&quot;\n        arr = []\n        for i in range(1,n+1):\n            item = None\n            if i % 3 == 0 and i % 5 == 0:\n                item = &quot;FizzBuzz&quot;\n                arr.append(item)\n                continue\n            if i % 3 == 0:\n                item = &quot;Fizz&quot;\n                arr.append(item)\n                continue\n            if i % 5 == 0:\n                item = &quot;Buzz&quot;\n                arr.append(item)\n                continue\n            arr.append(str(i))\n        return arr\n</code></pre>\n<h3 id=\"414-third-maximum-number-267-easy\"><a class=\"v-toc-item\" href=\"#414-third-maximum-number-267-easy\">#</a> 414 Third Maximum Number 26.7% Easy</h3>\n<h3 id=\"415-add-strings-411-easy\"><a class=\"v-toc-item\" href=\"#415-add-strings-411-easy\">#</a> 415 Add Strings 41.1% Easy</h3>\n<pre><code># 哼，让我不用，我偏偏要用转 int\nclass Solution(object):\n    def addStrings(self, num1, num2):\n        &quot;&quot;&quot;\n        :type num1: str\n        :type num2: str\n        :rtype: str\n        &quot;&quot;&quot;\n        return str(int(num1) + int(num2))\n\n# 我就不用 int 都可以 one line\nclass Solution(object):\n    def addStrings(self, num1, num2):\n        &quot;&quot;&quot;\n        :type num1: str\n        :type num2: str\n        :rtype: str\n        &quot;&quot;&quot;\n        return str(eval(&quot;{} + {}&quot;.format(num1,num2)))\n</code></pre>\n<h3 id=\"422-valid-word-square-362-easy\"><a class=\"v-toc-item\" href=\"#422-valid-word-square-362-easy\">#</a> 422 Valid Word Square 36.2% Easy</h3>\n<h3 id=\"434-number-of-segments-in-a-string-390-easy\"><a class=\"v-toc-item\" href=\"#434-number-of-segments-in-a-string-390-easy\">#</a> 434 Number of Segments in a String 39.0% Easy</h3>\n<h3 id=\"437-path-sum-iii-386-easy\"><a class=\"v-toc-item\" href=\"#437-path-sum-iii-386-easy\">#</a> 437 Path Sum III 38.6% Easy</h3>\n<h3 id=\"438-find-all-anagrams-in-a-string-334-easy\"><a class=\"v-toc-item\" href=\"#438-find-all-anagrams-in-a-string-334-easy\">#</a> 438 Find All Anagrams in a String 33.4% Easy</h3>\n<h3 id=\"441-arranging-coins-362-easy\"><a class=\"v-toc-item\" href=\"#441-arranging-coins-362-easy\">#</a> 441 Arranging Coins 36.2% Easy</h3>\n<h3 id=\"447-number-of-boomerangs-418-easy\"><a class=\"v-toc-item\" href=\"#447-number-of-boomerangs-418-easy\">#</a> 447 Number of Boomerangs 41.8% Easy</h3>\n<h3 id=\"448-find-all-numbers-disappeared-in-an-array-613-easy\"><a class=\"v-toc-item\" href=\"#448-find-all-numbers-disappeared-in-an-array-613-easy\">#</a> 448 Find All Numbers Disappeared in an Array 61.3% Easy</h3>\n<pre><code>class Solution(object):\n    def findDisappearedNumbers(self, nums):\n        &quot;&quot;&quot;\n        :type nums: List[int]\n        :rtype: List[int]\n        &quot;&quot;&quot;\n        len_nums = len(nums)\n        if len_nums &lt; 1:\n            return []\n        l = list(set(range(1,len_nums + 1)) - set(nums))\n        return l\n</code></pre>\n<h3 id=\"453-minimum-moves-to-equal-array-elements-459-easy\"><a class=\"v-toc-item\" href=\"#453-minimum-moves-to-equal-array-elements-459-easy\">#</a> 453 Minimum Moves to Equal Array Elements 45.9% Easy</h3>\n<pre><code>class Solution(object):\n    def minMoves(self, nums):\n        &quot;&quot;&quot;\n        :type nums: List[int]\n        :rtype: int\n        n - 1 个元素 ++ 等同于 1 个元素 --\n        &quot;&quot;&quot;\n        return sum(nums) - len(nums) * min(nums)\n</code></pre>\n<h3 id=\"455-assign-cookies-487-easy\"><a class=\"v-toc-item\" href=\"#455-assign-cookies-487-easy\">#</a> 455 Assign Cookies 48.7% Easy</h3>\n<pre><code class=\"language-python\"># 二叉树？\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">findContentChildren</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type g<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>int<span class=\"token punctuation\">]</span>\n        <span class=\"token operator\">:</span>type s<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>int<span class=\"token punctuation\">]</span>\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> int\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> or <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n        g<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        s<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        satisfied_count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">while</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n            max_cookie <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">while</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n                max_child <span class=\"token operator\">=</span> g<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> max_child <span class=\"token operator\">&lt;=</span> max_cookie<span class=\"token operator\">:</span>\n                    satisfied_count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                    <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">return</span> satisfied_count\n</code></pre>\n<h3 id=\"459-repeated-substring-pattern-396-easy\"><a class=\"v-toc-item\" href=\"#459-repeated-substring-pattern-396-easy\">#</a> 459 Repeated Substring Pattern 39.6% Easy</h3>\n<h3 id=\"461-hamming-distance-748-easy\"><a class=\"v-toc-item\" href=\"#461-hamming-distance-748-easy\">#</a> 461 Hamming Distance 74.8% Easy</h3>\n<pre><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">hammingDistance</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type x<span class=\"token operator\">:</span> int\n        <span class=\"token operator\">:</span>type y<span class=\"token operator\">:</span> int\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> int\n        <span class=\"token string\">\"\"</span>\"\n        ma <span class=\"token operator\">=</span> <span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0b\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">31</span><span class=\"token punctuation\">)</span>\n        ma_len <span class=\"token operator\">=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>ma<span class=\"token punctuation\">)</span>\n        mi <span class=\"token operator\">=</span> <span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0b\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">31</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>mi<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ma<span class=\"token punctuation\">)</span>\n        count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> chr <span class=\"token keyword\">in</span> <span class=\"token function\">enumerate</span><span class=\"token punctuation\">(</span>mi<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> ma<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> chr<span class=\"token operator\">:</span>\n                count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">return</span> count\n</code></pre>\n<h3 id=\"463-island-perimeter-563-easy\"><a class=\"v-toc-item\" href=\"#463-island-perimeter-563-easy\">#</a> 463 Island Perimeter 56.3% Easy</h3>\n<h3 id=\"475-heaters-303-easy\"><a class=\"v-toc-item\" href=\"#475-heaters-303-easy\">#</a> 475 Heaters 30.3% Easy</h3>\n<h3 id=\"566-reshape-the-matrix\"><a class=\"v-toc-item\" href=\"#566-reshape-the-matrix\">#</a> 566. Reshape the Matrix</h3>\n<pre><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">matrixReshape</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        <span class=\"token operator\">:</span>type nums<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span>int<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n        <span class=\"token operator\">:</span>type r<span class=\"token operator\">:</span> int\n        <span class=\"token operator\">:</span>type c<span class=\"token operator\">:</span> int\n        <span class=\"token operator\">:</span>rtype<span class=\"token operator\">:</span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span>int<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n        <span class=\"token string\">\"\"</span>\"\n        row_len <span class=\"token operator\">=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n        col_len <span class=\"token operator\">=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> row_len <span class=\"token operator\">*</span> col_len <span class=\"token operator\">!=</span> r <span class=\"token operator\">*</span> c<span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> nums\n        <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n            new_nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n            cur <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n            <span class=\"token keyword\">for</span> row_nu <span class=\"token keyword\">in</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span>row_len<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n                <span class=\"token keyword\">for</span> col_nu <span class=\"token keyword\">in</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span>col_len<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n                    cur <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                    new_row_nu <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>cur <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// c</span>\n                    new_col_nu <span class=\"token operator\">=</span> cur <span class=\"token operator\">-</span> new_row_nu <span class=\"token operator\">*</span> c <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n                    new_nums<span class=\"token punctuation\">[</span>new_row_nu<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>new_col_nu<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>row_nu<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col_nu<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> new_nums\n</code></pre>\n<h2 id=\"medium-集合\"><a class=\"v-toc-item\" href=\"#medium-集合\">#</a> Medium 集合</h2>\n<h3 id=\"2-add-two-numbers-261-medium\"><a class=\"v-toc-item\" href=\"#2-add-two-numbers-261-medium\">#</a> 2 Add Two Numbers 26.1% Medium</h3>\n<h3 id=\"3-longest-substring-without-repeating-characters-236-medium\"><a class=\"v-toc-item\" href=\"#3-longest-substring-without-repeating-characters-236-medium\">#</a> 3 Longest Substring Without Repeating Characters 23.6% Medium</h3>\n<h3 id=\"5-longest-palindromic-substring-244-medium\"><a class=\"v-toc-item\" href=\"#5-longest-palindromic-substring-244-medium\">#</a> 5 Longest Palindromic Substring 24.4% Medium</h3>\n<h3 id=\"11-container-with-most-water-360-medium\"><a class=\"v-toc-item\" href=\"#11-container-with-most-water-360-medium\">#</a> 11 Container With Most Water 36.0% Medium</h3>\n<h3 id=\"12-integer-to-roman-426-medium\"><a class=\"v-toc-item\" href=\"#12-integer-to-roman-426-medium\">#</a> 12 Integer to Roman 42.6% Medium</h3>\n<h3 id=\"15-3sum-207-medium\"><a class=\"v-toc-item\" href=\"#15-3sum-207-medium\">#</a> 15 3Sum 20.7% Medium</h3>\n<h3 id=\"16-3sum-closest-304-medium\"><a class=\"v-toc-item\" href=\"#16-3sum-closest-304-medium\">#</a> 16 3Sum Closest 30.4% Medium</h3>\n<h3 id=\"17-letter-combinations-of-a-phone-number-321-medium\"><a class=\"v-toc-item\" href=\"#17-letter-combinations-of-a-phone-number-321-medium\">#</a> 17 Letter Combinations of a Phone Number 32.1% Medium</h3>\n<h3 id=\"18-4sum-255-medium\"><a class=\"v-toc-item\" href=\"#18-4sum-255-medium\">#</a> 18 4Sum 25.5% Medium</h3>\n<h3 id=\"22-generate-parentheses-415-medium\"><a class=\"v-toc-item\" href=\"#22-generate-parentheses-415-medium\">#</a> 22 Generate Parentheses 41.5% Medium</h3>\n<h3 id=\"29-divide-two-integers-159-medium\"><a class=\"v-toc-item\" href=\"#29-divide-two-integers-159-medium\">#</a> 29 Divide Two Integers 15.9% Medium</h3>\n<h3 id=\"31-next-permutation-280-medium\"><a class=\"v-toc-item\" href=\"#31-next-permutation-280-medium\">#</a> 31 Next Permutation 28.0% Medium</h3>\n<h3 id=\"34-search-for-a-range-308-medium\"><a class=\"v-toc-item\" href=\"#34-search-for-a-range-308-medium\">#</a> 34 Search for a Range 30.8% Medium</h3>\n<h3 id=\"35-search-insert-position-388-medium\"><a class=\"v-toc-item\" href=\"#35-search-insert-position-388-medium\">#</a> 35 Search Insert Position 38.8% Medium</h3>\n<h3 id=\"39-combination-sum-354-medium\"><a class=\"v-toc-item\" href=\"#39-combination-sum-354-medium\">#</a> 39 Combination Sum 35.4% Medium</h3>\n<h3 id=\"40-combination-sum-ii-310-medium\"><a class=\"v-toc-item\" href=\"#40-combination-sum-ii-310-medium\">#</a> 40 Combination Sum II 31.0% Medium</h3>\n<h3 id=\"43-multiply-strings-258-medium\"><a class=\"v-toc-item\" href=\"#43-multiply-strings-258-medium\">#</a> 43 Multiply Strings 25.8% Medium</h3>\n<h3 id=\"46-permutations-401-medium\"><a class=\"v-toc-item\" href=\"#46-permutations-401-medium\">#</a> 46 Permutations 40.1% Medium</h3>\n<h3 id=\"47-permutations-ii-308-medium\"><a class=\"v-toc-item\" href=\"#47-permutations-ii-308-medium\">#</a> 47 Permutations II 30.8% Medium</h3>\n<h3 id=\"48-rotate-image-369-medium\"><a class=\"v-toc-item\" href=\"#48-rotate-image-369-medium\">#</a> 48 Rotate Image 36.9% Medium</h3>\n<h3 id=\"49-group-anagrams-315-medium\"><a class=\"v-toc-item\" href=\"#49-group-anagrams-315-medium\">#</a> 49 Group Anagrams 31.5% Medium</h3>\n<h3 id=\"50-powx-n-271-medium\"><a class=\"v-toc-item\" href=\"#50-powx-n-271-medium\">#</a> 50 Pow(x, n) 27.1% Medium</h3>\n<h3 id=\"53-maximum-subarray-386-medium\"><a class=\"v-toc-item\" href=\"#53-maximum-subarray-386-medium\">#</a> 53 Maximum Subarray 38.6% Medium</h3>\n<h3 id=\"54-spiral-matrix-244-medium\"><a class=\"v-toc-item\" href=\"#54-spiral-matrix-244-medium\">#</a> 54 Spiral Matrix 24.4% Medium</h3>\n<h3 id=\"55-jump-game-291-medium\"><a class=\"v-toc-item\" href=\"#55-jump-game-291-medium\">#</a> 55 Jump Game 29.1% Medium</h3>\n<h3 id=\"59-spiral-matrix-ii-378-medium\"><a class=\"v-toc-item\" href=\"#59-spiral-matrix-ii-378-medium\">#</a> 59 Spiral Matrix II 37.8% Medium</h3>\n<h3 id=\"60-permutation-sequence-270-medium\"><a class=\"v-toc-item\" href=\"#60-permutation-sequence-270-medium\">#</a> 60 Permutation Sequence 27.0% Medium</h3>\n<h3 id=\"61-rotate-list-240-medium\"><a class=\"v-toc-item\" href=\"#61-rotate-list-240-medium\">#</a> 61 Rotate List 24.0% Medium</h3>\n<h3 id=\"62-unique-paths-390-medium\"><a class=\"v-toc-item\" href=\"#62-unique-paths-390-medium\">#</a> 62 Unique Paths 39.0% Medium</h3>\n<h3 id=\"63-unique-paths-ii-308-medium\"><a class=\"v-toc-item\" href=\"#63-unique-paths-ii-308-medium\">#</a> 63 Unique Paths II 30.8% Medium</h3>\n<h3 id=\"64-minimum-path-sum-370-medium\"><a class=\"v-toc-item\" href=\"#64-minimum-path-sum-370-medium\">#</a> 64 Minimum Path Sum 37.0% Medium</h3>\n<h3 id=\"69-sqrtx-268-medium\"><a class=\"v-toc-item\" href=\"#69-sqrtx-268-medium\">#</a> 69 Sqrt(x) 26.8% Medium</h3>\n<h3 id=\"71-simplify-path-239-medium\"><a class=\"v-toc-item\" href=\"#71-simplify-path-239-medium\">#</a> 71 Simplify Path 23.9% Medium</h3>\n<h3 id=\"73-set-matrix-zeroes-350-medium\"><a class=\"v-toc-item\" href=\"#73-set-matrix-zeroes-350-medium\">#</a> 73 Set Matrix Zeroes 35.0% Medium</h3>\n<h3 id=\"74-search-a-2d-matrix-356-medium\"><a class=\"v-toc-item\" href=\"#74-search-a-2d-matrix-356-medium\">#</a> 74 Search a 2D Matrix 35.6% Medium</h3>\n<h3 id=\"75-sort-colors-365-medium\"><a class=\"v-toc-item\" href=\"#75-sort-colors-365-medium\">#</a> 75 Sort Colors 36.5% Medium</h3>\n<h3 id=\"77-combinations-376-medium\"><a class=\"v-toc-item\" href=\"#77-combinations-376-medium\">#</a> 77 Combinations 37.6% Medium</h3>\n<h3 id=\"78-subsets-362-medium\"><a class=\"v-toc-item\" href=\"#78-subsets-362-medium\">#</a> 78 Subsets 36.2% Medium</h3>\n<h3 id=\"79-word-search-252-medium\"><a class=\"v-toc-item\" href=\"#79-word-search-252-medium\">#</a> 79 Word Search 25.2% Medium</h3>\n<h3 id=\"80-remove-duplicates-from-sorted-array-ii-347-medium\"><a class=\"v-toc-item\" href=\"#80-remove-duplicates-from-sorted-array-ii-347-medium\">#</a> 80 Remove Duplicates from Sorted Array II 34.7% Medium</h3>\n<h3 id=\"81-search-in-rotated-sorted-array-ii-329-medium\"><a class=\"v-toc-item\" href=\"#81-search-in-rotated-sorted-array-ii-329-medium\">#</a> 81 Search in Rotated Sorted Array II 32.9% Medium</h3>\n<h3 id=\"82-remove-duplicates-from-sorted-list-ii-285-medium\"><a class=\"v-toc-item\" href=\"#82-remove-duplicates-from-sorted-list-ii-285-medium\">#</a> 82 Remove Duplicates from Sorted List II 28.5% Medium</h3>\n<h3 id=\"86-partition-list-314-medium\"><a class=\"v-toc-item\" href=\"#86-partition-list-314-medium\">#</a> 86 Partition List 31.4% Medium</h3>\n<h3 id=\"89-gray-code-391-medium\"><a class=\"v-toc-item\" href=\"#89-gray-code-391-medium\">#</a> 89 Gray Code 39.1% Medium</h3>\n<h3 id=\"90-subsets-ii-336-medium\"><a class=\"v-toc-item\" href=\"#90-subsets-ii-336-medium\">#</a> 90 Subsets II 33.6% Medium</h3>\n<h3 id=\"91-decode-ways-188-medium\"><a class=\"v-toc-item\" href=\"#91-decode-ways-188-medium\">#</a> 91 Decode Ways 18.8% Medium</h3>\n<h3 id=\"92-reverse-linked-list-ii-297-medium\"><a class=\"v-toc-item\" href=\"#92-reverse-linked-list-ii-297-medium\">#</a> 92 Reverse Linked List II 29.7% Medium</h3>\n<h3 id=\"93-restore-ip-addresses-257-medium\"><a class=\"v-toc-item\" href=\"#93-restore-ip-addresses-257-medium\">#</a> 93 Restore IP Addresses 25.7% Medium</h3>\n<h3 id=\"94-binary-tree-inorder-traversal-435-medium\"><a class=\"v-toc-item\" href=\"#94-binary-tree-inorder-traversal-435-medium\">#</a> 94 Binary Tree Inorder Traversal 43.5% Medium</h3>\n<h3 id=\"95-unique-binary-search-trees-ii-305-medium\"><a class=\"v-toc-item\" href=\"#95-unique-binary-search-trees-ii-305-medium\">#</a> 95 Unique Binary Search Trees II 30.5% Medium</h3>\n<h3 id=\"96-unique-binary-search-trees-396-medium\"><a class=\"v-toc-item\" href=\"#96-unique-binary-search-trees-396-medium\">#</a> 96 Unique Binary Search Trees 39.6% Medium</h3>\n<h3 id=\"98-validate-binary-search-tree-222-medium\"><a class=\"v-toc-item\" href=\"#98-validate-binary-search-tree-222-medium\">#</a> 98 Validate Binary Search Tree 22.2% Medium</h3>\n<h3 id=\"103-binary-tree-zigzag-level-order-traversal-320-medium\"><a class=\"v-toc-item\" href=\"#103-binary-tree-zigzag-level-order-traversal-320-medium\">#</a> 103 Binary Tree Zigzag Level Order Traversal 32.0% Medium</h3>\n<h3 id=\"105-construct-binary-tree-from-preorder-and-inorder-traversal-306-medium\"><a class=\"v-toc-item\" href=\"#105-construct-binary-tree-from-preorder-and-inorder-traversal-306-medium\">#</a> 105 Construct Binary Tree from Preorder and Inorder Traversal 30.6% Medium</h3>\n<h3 id=\"106-construct-binary-tree-from-inorder-and-postorder-traversal-308-medium\"><a class=\"v-toc-item\" href=\"#106-construct-binary-tree-from-inorder-and-postorder-traversal-308-medium\">#</a> 106 Construct Binary Tree from Inorder and Postorder Traversal 30.8% Medium</h3>\n<h3 id=\"108-convert-sorted-array-to-binary-search-tree-402-medium\"><a class=\"v-toc-item\" href=\"#108-convert-sorted-array-to-binary-search-tree-402-medium\">#</a> 108 Convert Sorted Array to Binary Search Tree 40.2% Medium</h3>\n<h3 id=\"109-convert-sorted-list-to-binary-search-tree-326-medium\"><a class=\"v-toc-item\" href=\"#109-convert-sorted-list-to-binary-search-tree-326-medium\">#</a> 109 Convert Sorted List to Binary Search Tree 32.6% Medium</h3>\n<h3 id=\"113-path-sum-ii-312-medium\"><a class=\"v-toc-item\" href=\"#113-path-sum-ii-312-medium\">#</a> 113 Path Sum II 31.2% Medium</h3>\n<h3 id=\"114-flatten-binary-tree-to-linked-list-334-medium\"><a class=\"v-toc-item\" href=\"#114-flatten-binary-tree-to-linked-list-334-medium\">#</a> 114 Flatten Binary Tree to Linked List 33.4% Medium</h3>\n<h3 id=\"116-populating-next-right-pointers-in-each-node-368-medium\"><a class=\"v-toc-item\" href=\"#116-populating-next-right-pointers-in-each-node-368-medium\">#</a> 116 Populating Next Right Pointers in Each Node 36.8% Medium</h3>\n<h3 id=\"120-triangle-323-medium\"><a class=\"v-toc-item\" href=\"#120-triangle-323-medium\">#</a> 120 Triangle 32.3% Medium</h3>\n<h3 id=\"122-best-time-to-buy-and-sell-stock-ii-453-medium\"><a class=\"v-toc-item\" href=\"#122-best-time-to-buy-and-sell-stock-ii-453-medium\">#</a> 122 Best Time to Buy and Sell Stock II 45.3% Medium</h3>\n<h3 id=\"127-word-ladder-193-medium\"><a class=\"v-toc-item\" href=\"#127-word-ladder-193-medium\">#</a> 127 Word Ladder 19.3% Medium</h3>\n<h3 id=\"129-sum-root-to-leaf-numbers-350-medium\"><a class=\"v-toc-item\" href=\"#129-sum-root-to-leaf-numbers-350-medium\">#</a> 129 Sum Root to Leaf Numbers 35.0% Medium</h3>\n<h3 id=\"130-surrounded-regions-174-medium\"><a class=\"v-toc-item\" href=\"#130-surrounded-regions-174-medium\">#</a> 130 Surrounded Regions 17.4% Medium</h3>\n<h3 id=\"131-palindrome-partitioning-306-medium\"><a class=\"v-toc-item\" href=\"#131-palindrome-partitioning-306-medium\">#</a> 131 Palindrome Partitioning 30.6% Medium</h3>\n<h3 id=\"133-clone-graph-250-medium\"><a class=\"v-toc-item\" href=\"#133-clone-graph-250-medium\">#</a> 133 Clone Graph 25.0% Medium</h3>\n<h3 id=\"134-gas-station-285-medium\"><a class=\"v-toc-item\" href=\"#134-gas-station-285-medium\">#</a> 134 Gas Station 28.5% Medium</h3>\n<h3 id=\"137-single-number-ii-400-medium\"><a class=\"v-toc-item\" href=\"#137-single-number-ii-400-medium\">#</a> 137 Single Number II 40.0% Medium</h3>\n<h3 id=\"139-word-break-280-medium\"><a class=\"v-toc-item\" href=\"#139-word-break-280-medium\">#</a> 139 Word Break 28.0% Medium</h3>\n<h3 id=\"142-linked-list-cycle-ii-312-medium\"><a class=\"v-toc-item\" href=\"#142-linked-list-cycle-ii-312-medium\">#</a> 142 Linked List Cycle II 31.2% Medium</h3>\n<h3 id=\"143-reorder-list-245-medium\"><a class=\"v-toc-item\" href=\"#143-reorder-list-245-medium\">#</a> 143 Reorder List 24.5% Medium</h3>\n<h3 id=\"144-binary-tree-preorder-traversal-428-medium\"><a class=\"v-toc-item\" href=\"#144-binary-tree-preorder-traversal-428-medium\">#</a> 144 Binary Tree Preorder Traversal 42.8% Medium</h3>\n<h3 id=\"147-insertion-sort-list-316-medium\"><a class=\"v-toc-item\" href=\"#147-insertion-sort-list-316-medium\">#</a> 147 Insertion Sort List 31.6% Medium</h3>\n<h3 id=\"148-sort-list-272-medium\"><a class=\"v-toc-item\" href=\"#148-sort-list-272-medium\">#</a> 148 Sort List 27.2% Medium</h3>\n<h3 id=\"150-evaluate-reverse-polish-notation-257-medium\"><a class=\"v-toc-item\" href=\"#150-evaluate-reverse-polish-notation-257-medium\">#</a> 150 Evaluate Reverse Polish Notation 25.7% Medium</h3>\n<h3 id=\"151-reverse-words-in-a-string-157-medium\"><a class=\"v-toc-item\" href=\"#151-reverse-words-in-a-string-157-medium\">#</a> 151 Reverse Words in a String 15.7% Medium</h3>\n<h3 id=\"152-maximum-product-subarray-243-medium\"><a class=\"v-toc-item\" href=\"#152-maximum-product-subarray-243-medium\">#</a> 152 Maximum Product Subarray 24.3% Medium</h3>\n<h3 id=\"153-find-minimum-in-rotated-sorted-array-384-medium\"><a class=\"v-toc-item\" href=\"#153-find-minimum-in-rotated-sorted-array-384-medium\">#</a> 153 Find Minimum in Rotated Sorted Array 38.4% Medium</h3>\n<h3 id=\"156-binary-tree-upside-down-424-medium\"><a class=\"v-toc-item\" href=\"#156-binary-tree-upside-down-424-medium\">#</a> 156 Binary Tree Upside Down 42.4% Medium</h3>\n<h3 id=\"161-one-edit-distance-303-medium\"><a class=\"v-toc-item\" href=\"#161-one-edit-distance-303-medium\">#</a> 161 One Edit Distance 30.3% Medium</h3>\n<h3 id=\"162-find-peak-element-356-medium\"><a class=\"v-toc-item\" href=\"#162-find-peak-element-356-medium\">#</a> 162 Find Peak Element 35.6% Medium</h3>\n<h3 id=\"163-missing-ranges-285-medium\"><a class=\"v-toc-item\" href=\"#163-missing-ranges-285-medium\">#</a> 163 Missing Ranges 28.5% Medium</h3>\n<h3 id=\"166-fraction-to-recurring-decimal-167-medium\"><a class=\"v-toc-item\" href=\"#166-fraction-to-recurring-decimal-167-medium\">#</a> 166 Fraction to Recurring Decimal 16.7% Medium</h3>\n<h3 id=\"167-two-sum-ii-input-array-is-sorted-479-medium\"><a class=\"v-toc-item\" href=\"#167-two-sum-ii-input-array-is-sorted-479-medium\">#</a> 167 Two Sum II - Input array is sorted 47.9% Medium</h3>\n<h3 id=\"173-binary-search-tree-iterator-387-medium\"><a class=\"v-toc-item\" href=\"#173-binary-search-tree-iterator-387-medium\">#</a> 173 Binary Search Tree Iterator 38.7% Medium</h3>\n<h3 id=\"179-largest-number-213-medium\"><a class=\"v-toc-item\" href=\"#179-largest-number-213-medium\">#</a> 179 Largest Number 21.3% Medium</h3>\n<h3 id=\"186-reverse-words-in-a-string-ii-285-medium\"><a class=\"v-toc-item\" href=\"#186-reverse-words-in-a-string-ii-285-medium\">#</a> 186 Reverse Words in a String II 28.5% Medium</h3>\n<h3 id=\"187-repeated-dna-sequences-293-medium\"><a class=\"v-toc-item\" href=\"#187-repeated-dna-sequences-293-medium\">#</a> 187 Repeated DNA Sequences 29.3% Medium</h3>\n<h3 id=\"199-binary-tree-right-side-view-384-medium\"><a class=\"v-toc-item\" href=\"#199-binary-tree-right-side-view-384-medium\">#</a> 199 Binary Tree Right Side View 38.4% Medium</h3>\n<h3 id=\"200-number-of-islands-320-medium\"><a class=\"v-toc-item\" href=\"#200-number-of-islands-320-medium\">#</a> 200 Number of Islands 32.0% Medium</h3>\n<h3 id=\"201-bitwise-and-of-numbers-range-330-medium\"><a class=\"v-toc-item\" href=\"#201-bitwise-and-of-numbers-range-330-medium\">#</a> 201 Bitwise AND of Numbers Range 33.0% Medium</h3>\n<h3 id=\"207-course-schedule-302-medium\"><a class=\"v-toc-item\" href=\"#207-course-schedule-302-medium\">#</a> 207 Course Schedule 30.2% Medium</h3>\n<h3 id=\"208-implement-trie-prefix-tree-256-medium\"><a class=\"v-toc-item\" href=\"#208-implement-trie-prefix-tree-256-medium\">#</a> 208 Implement Trie (Prefix Tree) 25.6% Medium</h3>\n<h3 id=\"209-minimum-size-subarray-sum-284-medium\"><a class=\"v-toc-item\" href=\"#209-minimum-size-subarray-sum-284-medium\">#</a> 209 Minimum Size Subarray Sum 28.4% Medium</h3>\n<h3 id=\"210-course-schedule-ii-253-medium\"><a class=\"v-toc-item\" href=\"#210-course-schedule-ii-253-medium\">#</a> 210 Course Schedule II 25.3% Medium</h3>\n<h3 id=\"211-add-and-search-word-data-structure-design-201-medium\"><a class=\"v-toc-item\" href=\"#211-add-and-search-word-data-structure-design-201-medium\">#</a> 211 Add and Search Word - Data structure design 20.1% Medium</h3>\n<h3 id=\"213-house-robber-ii-329-medium\"><a class=\"v-toc-item\" href=\"#213-house-robber-ii-329-medium\">#</a> 213 House Robber II 32.9% Medium</h3>\n<h3 id=\"215-kth-largest-element-in-an-array-372-medium\"><a class=\"v-toc-item\" href=\"#215-kth-largest-element-in-an-array-372-medium\">#</a> 215 Kth Largest Element in an Array 37.2% Medium</h3>\n<h3 id=\"216-combination-sum-iii-415-medium\"><a class=\"v-toc-item\" href=\"#216-combination-sum-iii-415-medium\">#</a> 216 Combination Sum III 41.5% Medium</h3>\n<h3 id=\"220-contains-duplicate-iii-195-medium\"><a class=\"v-toc-item\" href=\"#220-contains-duplicate-iii-195-medium\">#</a> 220 Contains Duplicate III 19.5% Medium</h3>\n<h3 id=\"221-maximal-square-268-medium\"><a class=\"v-toc-item\" href=\"#221-maximal-square-268-medium\">#</a> 221 Maximal Square 26.8% Medium</h3>\n<h3 id=\"222-count-complete-tree-nodes-269-medium\"><a class=\"v-toc-item\" href=\"#222-count-complete-tree-nodes-269-medium\">#</a> 222 Count Complete Tree Nodes 26.9% Medium</h3>\n<h3 id=\"227-basic-calculator-ii-279-medium\"><a class=\"v-toc-item\" href=\"#227-basic-calculator-ii-279-medium\">#</a> 227 Basic Calculator II 27.9% Medium</h3>\n<h3 id=\"228-summary-ranges-278-medium\"><a class=\"v-toc-item\" href=\"#228-summary-ranges-278-medium\">#</a> 228 Summary Ranges 27.8% Medium</h3>\n<h3 id=\"229-majority-element-ii-276-medium\"><a class=\"v-toc-item\" href=\"#229-majority-element-ii-276-medium\">#</a> 229 Majority Element II 27.6% Medium</h3>\n<h3 id=\"230-kth-smallest-element-in-a-bst-417-medium\"><a class=\"v-toc-item\" href=\"#230-kth-smallest-element-in-a-bst-417-medium\">#</a> 230 Kth Smallest Element in a BST 41.7% Medium</h3>\n<h3 id=\"236-lowest-common-ancestor-of-a-binary-tree-292-medium\"><a class=\"v-toc-item\" href=\"#236-lowest-common-ancestor-of-a-binary-tree-292-medium\">#</a> 236 Lowest Common Ancestor of a Binary Tree 29.2% Medium</h3>\n<h3 id=\"238-product-of-array-except-self-468-medium\"><a class=\"v-toc-item\" href=\"#238-product-of-array-except-self-468-medium\">#</a> 238 Product of Array Except Self 46.8% Medium</h3>\n<h3 id=\"240-search-a-2d-matrix-ii-378-medium\"><a class=\"v-toc-item\" href=\"#240-search-a-2d-matrix-ii-378-medium\">#</a> 240 Search a 2D Matrix II 37.8% Medium</h3>\n<h3 id=\"241-different-ways-to-add-parentheses-409-medium\"><a class=\"v-toc-item\" href=\"#241-different-ways-to-add-parentheses-409-medium\">#</a> 241 Different Ways to Add Parentheses 40.9% Medium</h3>\n<h3 id=\"244-shortest-word-distance-ii-348-medium\"><a class=\"v-toc-item\" href=\"#244-shortest-word-distance-ii-348-medium\">#</a> 244 Shortest Word Distance II 34.8% Medium</h3>\n<h3 id=\"245-shortest-word-distance-iii-492-medium\"><a class=\"v-toc-item\" href=\"#245-shortest-word-distance-iii-492-medium\">#</a> 245 Shortest Word Distance III 49.2% Medium</h3>\n<h3 id=\"247-strobogrammatic-number-ii-380-medium\"><a class=\"v-toc-item\" href=\"#247-strobogrammatic-number-ii-380-medium\">#</a> 247 Strobogrammatic Number II 38.0% Medium</h3>\n<h3 id=\"250-count-univalue-subtrees-400-medium\"><a class=\"v-toc-item\" href=\"#250-count-univalue-subtrees-400-medium\">#</a> 250 Count Univalue Subtrees 40.0% Medium</h3>\n<h3 id=\"251-flatten-2d-vector-385-medium\"><a class=\"v-toc-item\" href=\"#251-flatten-2d-vector-385-medium\">#</a> 251 Flatten 2D Vector 38.5% Medium</h3>\n<h3 id=\"253-meeting-rooms-ii-380-medium\"><a class=\"v-toc-item\" href=\"#253-meeting-rooms-ii-380-medium\">#</a> 253 Meeting Rooms II 38.0% Medium</h3>\n<h3 id=\"254-factor-combinations-400-medium\"><a class=\"v-toc-item\" href=\"#254-factor-combinations-400-medium\">#</a> 254 Factor Combinations 40.0% Medium</h3>\n<h3 id=\"255-verify-preorder-sequence-in-binary-search-tree-387-medium\"><a class=\"v-toc-item\" href=\"#255-verify-preorder-sequence-in-binary-search-tree-387-medium\">#</a> 255 Verify Preorder Sequence in Binary Search Tree 38.7% Medium</h3>\n<h3 id=\"256-paint-house-457-medium\"><a class=\"v-toc-item\" href=\"#256-paint-house-457-medium\">#</a> 256 Paint House 45.7% Medium</h3>\n<h3 id=\"259-3sum-smaller-405-medium\"><a class=\"v-toc-item\" href=\"#259-3sum-smaller-405-medium\">#</a> 259 3Sum Smaller 40.5% Medium</h3>\n<h3 id=\"260-single-number-iii-489-medium\"><a class=\"v-toc-item\" href=\"#260-single-number-iii-489-medium\">#</a> 260 Single Number III 48.9% Medium</h3>\n<h3 id=\"261-graph-valid-tree-363-medium\"><a class=\"v-toc-item\" href=\"#261-graph-valid-tree-363-medium\">#</a> 261 Graph Valid Tree 36.3% Medium</h3>\n<h3 id=\"264-ugly-number-ii-313-medium\"><a class=\"v-toc-item\" href=\"#264-ugly-number-ii-313-medium\">#</a> 264 Ugly Number II 31.3% Medium</h3>\n<h3 id=\"267-palindrome-permutation-ii-308-medium\"><a class=\"v-toc-item\" href=\"#267-palindrome-permutation-ii-308-medium\">#</a> 267 Palindrome Permutation II 30.8% Medium</h3>\n<h3 id=\"268-missing-number-433-medium\"><a class=\"v-toc-item\" href=\"#268-missing-number-433-medium\">#</a> 268 Missing Number 43.3% Medium</h3>\n<h3 id=\"271-encode-and-decode-strings-265-medium\"><a class=\"v-toc-item\" href=\"#271-encode-and-decode-strings-265-medium\">#</a> 271 Encode and Decode Strings 26.5% Medium</h3>\n<h3 id=\"274-h-index-319-medium\"><a class=\"v-toc-item\" href=\"#274-h-index-319-medium\">#</a> 274 H-Index 31.9% Medium</h3>\n<h3 id=\"275-h-index-ii-335-medium\"><a class=\"v-toc-item\" href=\"#275-h-index-ii-335-medium\">#</a> 275 H-Index II 33.5% Medium</h3>\n<h3 id=\"277-find-the-celebrity-354-medium\"><a class=\"v-toc-item\" href=\"#277-find-the-celebrity-354-medium\">#</a> 277 Find the Celebrity 35.4% Medium</h3>\n<h3 id=\"279-perfect-squares-347-medium\"><a class=\"v-toc-item\" href=\"#279-perfect-squares-347-medium\">#</a> 279 Perfect Squares 34.7% Medium</h3>\n<h3 id=\"280-wiggle-sort-545-medium\"><a class=\"v-toc-item\" href=\"#280-wiggle-sort-545-medium\">#</a> 280 Wiggle Sort 54.5% Medium</h3>\n<h3 id=\"281-zigzag-iterator-479-medium\"><a class=\"v-toc-item\" href=\"#281-zigzag-iterator-479-medium\">#</a> 281 Zigzag Iterator 47.9% Medium</h3>\n<h3 id=\"284-peeking-iterator-350-medium\"><a class=\"v-toc-item\" href=\"#284-peeking-iterator-350-medium\">#</a> 284 Peeking Iterator 35.0% Medium</h3>\n<h3 id=\"285-inorder-successor-in-bst-362-medium\"><a class=\"v-toc-item\" href=\"#285-inorder-successor-in-bst-362-medium\">#</a> 285 Inorder Successor in BST 36.2% Medium</h3>\n<h3 id=\"286-walls-and-gates-420-medium\"><a class=\"v-toc-item\" href=\"#286-walls-and-gates-420-medium\">#</a> 286 Walls and Gates 42.0% Medium</h3>\n<h3 id=\"289-game-of-life-362-medium\"><a class=\"v-toc-item\" href=\"#289-game-of-life-362-medium\">#</a> 289 Game of Life 36.2% Medium</h3>\n<h3 id=\"294-flip-game-ii-449-medium\"><a class=\"v-toc-item\" href=\"#294-flip-game-ii-449-medium\">#</a> 294 Flip Game II 44.9% Medium</h3>\n<h3 id=\"298-binary-tree-longest-consecutive-sequence-397-medium\"><a class=\"v-toc-item\" href=\"#298-binary-tree-longest-consecutive-sequence-397-medium\">#</a> 298 Binary Tree Longest Consecutive Sequence 39.7% Medium</h3>\n<h3 id=\"300-longest-increasing-subsequence-372-medium\"><a class=\"v-toc-item\" href=\"#300-longest-increasing-subsequence-372-medium\">#</a> 300 Longest Increasing Subsequence 37.2% Medium</h3>\n<h3 id=\"304-range-sum-query-2d-immutable-227-medium\"><a class=\"v-toc-item\" href=\"#304-range-sum-query-2d-immutable-227-medium\">#</a> 304 Range Sum Query 2D - Immutable 22.7% Medium</h3>\n<h3 id=\"306-additive-number-271-medium\"><a class=\"v-toc-item\" href=\"#306-additive-number-271-medium\">#</a> 306 Additive Number 27.1% Medium</h3>\n<h3 id=\"307-range-sum-query-mutable-185-medium\"><a class=\"v-toc-item\" href=\"#307-range-sum-query-mutable-185-medium\">#</a> 307 Range Sum Query - Mutable 18.5% Medium</h3>\n<h3 id=\"309-best-time-to-buy-and-sell-stock-with-cooldown-394-medium\"><a class=\"v-toc-item\" href=\"#309-best-time-to-buy-and-sell-stock-with-cooldown-394-medium\">#</a> 309 Best Time to Buy and Sell Stock with Cooldown 39.4% Medium</h3>\n<h3 id=\"310-minimum-height-trees-283-medium\"><a class=\"v-toc-item\" href=\"#310-minimum-height-trees-283-medium\">#</a> 310 Minimum Height Trees 28.3% Medium</h3>\n<h3 id=\"311-sparse-matrix-multiplication-504-medium\"><a class=\"v-toc-item\" href=\"#311-sparse-matrix-multiplication-504-medium\">#</a> 311 Sparse Matrix Multiplication 50.4% Medium</h3>\n<h3 id=\"313-super-ugly-number-368-medium\"><a class=\"v-toc-item\" href=\"#313-super-ugly-number-368-medium\">#</a> 313 Super Ugly Number 36.8% Medium</h3>\n<h3 id=\"314-binary-tree-vertical-order-traversal-349-medium\"><a class=\"v-toc-item\" href=\"#314-binary-tree-vertical-order-traversal-349-medium\">#</a> 314 Binary Tree Vertical Order Traversal 34.9% Medium</h3>\n<h3 id=\"318-maximum-product-of-word-lengths-419-medium\"><a class=\"v-toc-item\" href=\"#318-maximum-product-of-word-lengths-419-medium\">#</a> 318 Maximum Product of Word Lengths 41.9% Medium</h3>\n<h3 id=\"319-bulb-switcher-418-medium\"><a class=\"v-toc-item\" href=\"#319-bulb-switcher-418-medium\">#</a> 319 Bulb Switcher 41.8% Medium</h3>\n<h3 id=\"320-generalized-abbreviation-430-medium\"><a class=\"v-toc-item\" href=\"#320-generalized-abbreviation-430-medium\">#</a> 320 Generalized Abbreviation 43.0% Medium</h3>\n<h3 id=\"322-coin-change-259-medium\"><a class=\"v-toc-item\" href=\"#322-coin-change-259-medium\">#</a> 322 Coin Change 25.9% Medium</h3>\n<h3 id=\"323-number-of-connected-components-in-an-undirected-graph-462-medium\"><a class=\"v-toc-item\" href=\"#323-number-of-connected-components-in-an-undirected-graph-462-medium\">#</a> 323 Number of Connected Components in an Undirected Graph 46.2% Medium</h3>\n<h3 id=\"324-wiggle-sort-ii-250-medium\"><a class=\"v-toc-item\" href=\"#324-wiggle-sort-ii-250-medium\">#</a> 324 Wiggle Sort II 25.0% Medium</h3>\n<h3 id=\"325-maximum-size-subarray-sum-equals-k-414-medium\"><a class=\"v-toc-item\" href=\"#325-maximum-size-subarray-sum-equals-k-414-medium\">#</a> 325 Maximum Size Subarray Sum Equals k 41.4% Medium</h3>\n<h3 id=\"328-odd-even-linked-list-416-medium\"><a class=\"v-toc-item\" href=\"#328-odd-even-linked-list-416-medium\">#</a> 328 Odd Even Linked List 41.6% Medium</h3>\n<h3 id=\"331-verify-preorder-serialization-of-a-binary-tree-349-medium\"><a class=\"v-toc-item\" href=\"#331-verify-preorder-serialization-of-a-binary-tree-349-medium\">#</a> 331 Verify Preorder Serialization of a Binary Tree 34.9% Medium</h3>\n<h3 id=\"332-reconstruct-itinerary-277-medium\"><a class=\"v-toc-item\" href=\"#332-reconstruct-itinerary-277-medium\">#</a> 332 Reconstruct Itinerary 27.7% Medium</h3>\n<h3 id=\"333-largest-bst-subtree-296-medium\"><a class=\"v-toc-item\" href=\"#333-largest-bst-subtree-296-medium\">#</a> 333 Largest BST Subtree 29.6% Medium</h3>\n<h3 id=\"334-increasing-triplet-subsequence-376-medium\"><a class=\"v-toc-item\" href=\"#334-increasing-triplet-subsequence-376-medium\">#</a> 334 Increasing Triplet Subsequence 37.6% Medium</h3>\n<h3 id=\"337-house-robber-iii-413-medium\"><a class=\"v-toc-item\" href=\"#337-house-robber-iii-413-medium\">#</a> 337 House Robber III 41.3% Medium</h3>\n<h3 id=\"338-counting-bits-593-medium\"><a class=\"v-toc-item\" href=\"#338-counting-bits-593-medium\">#</a> 338 Counting Bits 59.3% Medium</h3>\n<h3 id=\"341-flatten-nested-list-iterator-382-medium\"><a class=\"v-toc-item\" href=\"#341-flatten-nested-list-iterator-382-medium\">#</a> 341 Flatten Nested List Iterator 38.2% Medium</h3>\n<h3 id=\"343-integer-break-446-medium\"><a class=\"v-toc-item\" href=\"#343-integer-break-446-medium\">#</a> 343 Integer Break 44.6% Medium</h3>\n<h3 id=\"347-top-k-frequent-elements-456-medium\"><a class=\"v-toc-item\" href=\"#347-top-k-frequent-elements-456-medium\">#</a> 347 Top K Frequent Elements 45.6% Medium</h3>\n<h3 id=\"348-design-tic-tac-toe-450-medium\"><a class=\"v-toc-item\" href=\"#348-design-tic-tac-toe-450-medium\">#</a> 348 Design Tic-Tac-Toe 45.0% Medium</h3>\n<h3 id=\"351-android-unlock-patterns-423-medium\"><a class=\"v-toc-item\" href=\"#351-android-unlock-patterns-423-medium\">#</a> 351 Android Unlock Patterns 42.3% Medium</h3>\n<h3 id=\"353-design-snake-game-251-medium\"><a class=\"v-toc-item\" href=\"#353-design-snake-game-251-medium\">#</a> 353 Design Snake Game 25.1% Medium</h3>\n<h3 id=\"355-design-twitter-241-medium\"><a class=\"v-toc-item\" href=\"#355-design-twitter-241-medium\">#</a> 355 Design Twitter 24.1% Medium</h3>\n<h3 id=\"356-line-reflection-297-medium\"><a class=\"v-toc-item\" href=\"#356-line-reflection-297-medium\">#</a> 356 Line Reflection 29.7% Medium</h3>\n<h3 id=\"357-count-numbers-with-unique-digits-448-medium\"><a class=\"v-toc-item\" href=\"#357-count-numbers-with-unique-digits-448-medium\">#</a> 357 Count Numbers with Unique Digits 44.8% Medium</h3>\n<h3 id=\"360-sort-transformed-array-430-medium\"><a class=\"v-toc-item\" href=\"#360-sort-transformed-array-430-medium\">#</a> 360 Sort Transformed Array 43.0% Medium</h3>\n<h3 id=\"361-bomb-enemy-378-medium\"><a class=\"v-toc-item\" href=\"#361-bomb-enemy-378-medium\">#</a> 361 Bomb Enemy 37.8% Medium</h3>\n<h3 id=\"362-design-hit-counter-524-medium\"><a class=\"v-toc-item\" href=\"#362-design-hit-counter-524-medium\">#</a> 362 Design Hit Counter 52.4% Medium</h3>\n<h3 id=\"364-nested-list-weight-sum-ii-502-medium\"><a class=\"v-toc-item\" href=\"#364-nested-list-weight-sum-ii-502-medium\">#</a> 364 Nested List Weight Sum II 50.2% Medium</h3>\n<h3 id=\"365-water-and-jug-problem-259-medium\"><a class=\"v-toc-item\" href=\"#365-water-and-jug-problem-259-medium\">#</a> 365 Water and Jug Problem 25.9% Medium</h3>\n<h3 id=\"366-find-leaves-of-binary-tree-567-medium\"><a class=\"v-toc-item\" href=\"#366-find-leaves-of-binary-tree-567-medium\">#</a> 366 Find Leaves of Binary Tree 56.7% Medium</h3>\n<h3 id=\"367-valid-perfect-square-372-medium\"><a class=\"v-toc-item\" href=\"#367-valid-perfect-square-372-medium\">#</a> 367 Valid Perfect Square 37.2% Medium</h3>\n<h3 id=\"368-largest-divisible-subset-327-medium\"><a class=\"v-toc-item\" href=\"#368-largest-divisible-subset-327-medium\">#</a> 368 Largest Divisible Subset 32.7% Medium</h3>\n<h3 id=\"369-plus-one-linked-list-522-medium\"><a class=\"v-toc-item\" href=\"#369-plus-one-linked-list-522-medium\">#</a> 369 Plus One Linked List 52.2% Medium</h3>\n<h3 id=\"370-range-addition-528-medium\"><a class=\"v-toc-item\" href=\"#370-range-addition-528-medium\">#</a> 370 Range Addition 52.8% Medium</h3>\n<h3 id=\"372-super-pow-329-medium\"><a class=\"v-toc-item\" href=\"#372-super-pow-329-medium\">#</a> 372 Super Pow 32.9% Medium</h3>\n<h3 id=\"373-find-k-pairs-with-smallest-sums-295-medium\"><a class=\"v-toc-item\" href=\"#373-find-k-pairs-with-smallest-sums-295-medium\">#</a> 373 Find K Pairs with Smallest Sums 29.5% Medium</h3>\n<h3 id=\"375-guess-number-higher-or-lower-ii-347-medium\"><a class=\"v-toc-item\" href=\"#375-guess-number-higher-or-lower-ii-347-medium\">#</a> 375 Guess Number Higher or Lower II 34.7% Medium</h3>\n<h3 id=\"376-wiggle-subsequence-343-medium\"><a class=\"v-toc-item\" href=\"#376-wiggle-subsequence-343-medium\">#</a> 376 Wiggle Subsequence 34.3% Medium</h3>\n<h3 id=\"377-combination-sum-iv-415-medium\"><a class=\"v-toc-item\" href=\"#377-combination-sum-iv-415-medium\">#</a> 377 Combination Sum IV 41.5% Medium</h3>\n<h3 id=\"378-kth-smallest-element-in-a-sorted-matrix-429-medium\"><a class=\"v-toc-item\" href=\"#378-kth-smallest-element-in-a-sorted-matrix-429-medium\">#</a> 378 Kth Smallest Element in a Sorted Matrix 42.9% Medium</h3>\n<h3 id=\"379-design-phone-directory-291-medium\"><a class=\"v-toc-item\" href=\"#379-design-phone-directory-291-medium\">#</a> 379 Design Phone Directory 29.1% Medium</h3>\n<h3 id=\"382-linked-list-random-node-461-medium\"><a class=\"v-toc-item\" href=\"#382-linked-list-random-node-461-medium\">#</a> 382 Linked List Random Node 46.1% Medium</h3>\n<h3 id=\"384-shuffle-an-array-447-medium\"><a class=\"v-toc-item\" href=\"#384-shuffle-an-array-447-medium\">#</a> 384 Shuffle an Array 44.7% Medium</h3>\n<h3 id=\"385-mini-parser-294-medium\"><a class=\"v-toc-item\" href=\"#385-mini-parser-294-medium\">#</a> 385 Mini Parser 29.4% Medium</h3>\n<h3 id=\"386-lexicographical-numbers-390-medium\"><a class=\"v-toc-item\" href=\"#386-lexicographical-numbers-390-medium\">#</a> 386 Lexicographical Numbers 39.0% Medium</h3>\n<h3 id=\"388-longest-absolute-file-path-344-medium\"><a class=\"v-toc-item\" href=\"#388-longest-absolute-file-path-344-medium\">#</a> 388 Longest Absolute File Path 34.4% Medium</h3>\n<h3 id=\"390-elimination-game-374-medium\"><a class=\"v-toc-item\" href=\"#390-elimination-game-374-medium\">#</a> 390 Elimination Game 37.4% Medium</h3>\n<h3 id=\"392-is-subsequence-441-medium\"><a class=\"v-toc-item\" href=\"#392-is-subsequence-441-medium\">#</a> 392 Is Subsequence 44.1% Medium</h3>\n<h3 id=\"393-utf-8-validation-352-medium\"><a class=\"v-toc-item\" href=\"#393-utf-8-validation-352-medium\">#</a> 393 UTF-8 Validation 35.2% Medium</h3>\n<h3 id=\"394-decode-string-397-medium\"><a class=\"v-toc-item\" href=\"#394-decode-string-397-medium\">#</a> 394 Decode String 39.7% Medium</h3>\n<h3 id=\"395-longest-substring-with-at-least-k-repeating-characters-353-medium\"><a class=\"v-toc-item\" href=\"#395-longest-substring-with-at-least-k-repeating-characters-353-medium\">#</a> 395 Longest Substring with At Least K Repeating Characters 35.3% Medium</h3>\n<h3 id=\"397-integer-replacement-289-medium\"><a class=\"v-toc-item\" href=\"#397-integer-replacement-289-medium\">#</a> 397 Integer Replacement 28.9% Medium</h3>\n<h3 id=\"398-random-pick-index-390-medium\"><a class=\"v-toc-item\" href=\"#398-random-pick-index-390-medium\">#</a> 398 Random Pick Index 39.0% Medium</h3>\n<h3 id=\"399-evaluate-division-392-medium\"><a class=\"v-toc-item\" href=\"#399-evaluate-division-392-medium\">#</a> 399 Evaluate Division 39.2% Medium</h3>\n<h3 id=\"402-remove-k-digits-259-medium\"><a class=\"v-toc-item\" href=\"#402-remove-k-digits-259-medium\">#</a> 402 Remove K Digits 25.9% Medium</h3>\n<h3 id=\"406-queue-reconstruction-by-height-541-medium\"><a class=\"v-toc-item\" href=\"#406-queue-reconstruction-by-height-541-medium\">#</a> 406 Queue Reconstruction by Height 54.1% Medium</h3>\n<h3 id=\"413-arithmetic-slices-542-medium\"><a class=\"v-toc-item\" href=\"#413-arithmetic-slices-542-medium\">#</a> 413 Arithmetic Slices 54.2% Medium</h3>\n<h3 id=\"416-partition-equal-subset-sum-372-medium\"><a class=\"v-toc-item\" href=\"#416-partition-equal-subset-sum-372-medium\">#</a> 416 Partition Equal Subset Sum 37.2% Medium</h3>\n<h3 id=\"417-pacific-atlantic-water-flow-327-medium\"><a class=\"v-toc-item\" href=\"#417-pacific-atlantic-water-flow-327-medium\">#</a> 417 Pacific Atlantic Water Flow 32.7% Medium</h3>\n<h3 id=\"418-sentence-screen-fitting-269-medium\"><a class=\"v-toc-item\" href=\"#418-sentence-screen-fitting-269-medium\">#</a> 418 Sentence Screen Fitting 26.9% Medium</h3>\n<h3 id=\"419-battleships-in-a-board-598-medium\"><a class=\"v-toc-item\" href=\"#419-battleships-in-a-board-598-medium\">#</a> 419 Battleships in a Board 59.8% Medium</h3>\n<h3 id=\"421-maximum-xor-of-two-numbers-in-an-array-406-medium\"><a class=\"v-toc-item\" href=\"#421-maximum-xor-of-two-numbers-in-an-array-406-medium\">#</a> 421 Maximum XOR of Two Numbers in an Array 40.6% Medium</h3>\n<h3 id=\"423-reconstruct-original-digits-from-english-417-medium\"><a class=\"v-toc-item\" href=\"#423-reconstruct-original-digits-from-english-417-medium\">#</a> 423 Reconstruct Original Digits from English 41.7% Medium</h3>\n<h3 id=\"424-longest-repeating-character-replacement-396-medium\"><a class=\"v-toc-item\" href=\"#424-longest-repeating-character-replacement-396-medium\">#</a> 424 Longest Repeating Character Replacement 39.6% Medium</h3>\n<h3 id=\"435-non-overlapping-intervals-398-medium\"><a class=\"v-toc-item\" href=\"#435-non-overlapping-intervals-398-medium\">#</a> 435 Non-overlapping Intervals 39.8% Medium</h3>\n<h3 id=\"436-find-right-interval-419-medium\"><a class=\"v-toc-item\" href=\"#436-find-right-interval-419-medium\">#</a> 436 Find Right Interval 41.9% Medium</h3>\n<h3 id=\"439-ternary-expression-parser-493-medium\"><a class=\"v-toc-item\" href=\"#439-ternary-expression-parser-493-medium\">#</a> 439 Ternary Expression Parser 49.3% Medium</h3>\n<h3 id=\"442-find-all-duplicates-in-an-array-456-medium\"><a class=\"v-toc-item\" href=\"#442-find-all-duplicates-in-an-array-456-medium\">#</a> 442 Find All Duplicates in an Array 45.6% Medium</h3>\n<h3 id=\"444-sequence-reconstruction-201-medium\"><a class=\"v-toc-item\" href=\"#444-sequence-reconstruction-201-medium\">#</a> 444 Sequence Reconstruction 20.1% Medium</h3>\n<h3 id=\"445-add-two-numbers-ii-445-medium\"><a class=\"v-toc-item\" href=\"#445-add-two-numbers-ii-445-medium\">#</a> 445 Add Two Numbers II 44.5% Medium</h3>\n<h3 id=\"449-serialize-and-deserialize-bst-401-medium\"><a class=\"v-toc-item\" href=\"#449-serialize-and-deserialize-bst-401-medium\">#</a> 449 Serialize and Deserialize BST 40.1% Medium</h3>\n<h3 id=\"450-delete-node-in-a-bst-324-medium\"><a class=\"v-toc-item\" href=\"#450-delete-node-in-a-bst-324-medium\">#</a> 450 Delete Node in a BST 32.4% Medium</h3>\n<h3 id=\"451-sort-characters-by-frequency-503-medium\"><a class=\"v-toc-item\" href=\"#451-sort-characters-by-frequency-503-medium\">#</a> 451 Sort Characters By Frequency 50.3% Medium</h3>\n<h3 id=\"452-minimum-number-of-arrows-to-burst-balloons-419-medium\"><a class=\"v-toc-item\" href=\"#452-minimum-number-of-arrows-to-burst-balloons-419-medium\">#</a> 452 Minimum Number of Arrows to Burst Balloons 41.9% Medium</h3>\n<h3 id=\"454-4sum-ii-412-medium\"><a class=\"v-toc-item\" href=\"#454-4sum-ii-412-medium\">#</a> 454 4Sum II 41.2% Medium</h3>\n<h3 id=\"456-132-pattern-273-medium\"><a class=\"v-toc-item\" href=\"#456-132-pattern-273-medium\">#</a> 456 132 Pattern 27.3% Medium</h3>\n<h3 id=\"462-minimum-moves-to-equal-array-elements-ii-503-medium\"><a class=\"v-toc-item\" href=\"#462-minimum-moves-to-equal-array-elements-ii-503-medium\">#</a> 462 Minimum Moves to Equal Array Elements II 50.3% Medium</h3>\n<h3 id=\"464-can-i-win-214-medium\"><a class=\"v-toc-item\" href=\"#464-can-i-win-214-medium\">#</a> 464 Can I Win 21.4% Medium</h3>\n<h3 id=\"467-unique-substrings-in-wraparound-string-284-medium\"><a class=\"v-toc-item\" href=\"#467-unique-substrings-in-wraparound-string-284-medium\">#</a> 467 Unique Substrings in Wraparound String 28.4% Medium</h3>\n<h3 id=\"468-validate-ip-address-218-medium\"><a class=\"v-toc-item\" href=\"#468-validate-ip-address-218-medium\">#</a> 468 Validate IP Address 21.8% Medium</h3>\n<h3 id=\"469-convex-polygon-246-medium\"><a class=\"v-toc-item\" href=\"#469-convex-polygon-246-medium\">#</a> 469 Convex Polygon 24.6% Medium</h3>\n<h3 id=\"473-matchsticks-to-square-275-medium\"><a class=\"v-toc-item\" href=\"#473-matchsticks-to-square-275-medium\">#</a> 473 Matchsticks to Square 27.5% Medium</h3>\n<h3 id=\"474-ones-and-zeroes-327-medium\"><a class=\"v-toc-item\" href=\"#474-ones-and-zeroes-327-medium\">#</a> 474 Ones and Zeroes 32.7% Medium</h3>\n<h3 id=\"477-total-hamming-distance-401-medium\"><a class=\"v-toc-item\" href=\"#477-total-hamming-distance-401-medium\">#</a> 477 Total Hamming Distance 40.1% Medium</h3>\n<h2 id=\"hard-集合\"><a class=\"v-toc-item\" href=\"#hard-集合\">#</a> Hard 集合</h2>\n<h3 id=\"4-median-of-two-sorted-arrays-207-hard\"><a class=\"v-toc-item\" href=\"#4-median-of-two-sorted-arrays-207-hard\">#</a> 4 Median of Two Sorted Arrays 20.7% Hard</h3>\n<h3 id=\"10-regular-expression-matching-234-hard\"><a class=\"v-toc-item\" href=\"#10-regular-expression-matching-234-hard\">#</a> 10 Regular Expression Matching 23.4% Hard</h3>\n<h3 id=\"23-merge-k-sorted-lists-257-hard\"><a class=\"v-toc-item\" href=\"#23-merge-k-sorted-lists-257-hard\">#</a> 23 Merge k Sorted Lists 25.7% Hard</h3>\n<h3 id=\"25-reverse-nodes-in-k-group-296-hard\"><a class=\"v-toc-item\" href=\"#25-reverse-nodes-in-k-group-296-hard\">#</a> 25 Reverse Nodes in k-Group 29.6% Hard</h3>\n<h3 id=\"30-substring-with-concatenation-of-all-words-216-hard\"><a class=\"v-toc-item\" href=\"#30-substring-with-concatenation-of-all-words-216-hard\">#</a> 30 Substring with Concatenation of All Words 21.6% Hard</h3>\n<h3 id=\"32-longest-valid-parentheses-230-hard\"><a class=\"v-toc-item\" href=\"#32-longest-valid-parentheses-230-hard\">#</a> 32 Longest Valid Parentheses 23.0% Hard</h3>\n<h3 id=\"33-search-in-rotated-sorted-array-318-hard\"><a class=\"v-toc-item\" href=\"#33-search-in-rotated-sorted-array-318-hard\">#</a> 33 Search in Rotated Sorted Array 31.8% Hard</h3>\n<h3 id=\"37-sudoku-solver-278-hard\"><a class=\"v-toc-item\" href=\"#37-sudoku-solver-278-hard\">#</a> 37 Sudoku Solver 27.8% Hard</h3>\n<h3 id=\"41-first-missing-positive-249-hard\"><a class=\"v-toc-item\" href=\"#41-first-missing-positive-249-hard\">#</a> 41 First Missing Positive 24.9% Hard</h3>\n<h3 id=\"42-trapping-rain-water-351-hard\"><a class=\"v-toc-item\" href=\"#42-trapping-rain-water-351-hard\">#</a> 42 Trapping Rain Water 35.1% Hard</h3>\n<h3 id=\"44-wildcard-matching-189-hard\"><a class=\"v-toc-item\" href=\"#44-wildcard-matching-189-hard\">#</a> 44 Wildcard Matching 18.9% Hard</h3>\n<h3 id=\"45-jump-game-ii-260-hard\"><a class=\"v-toc-item\" href=\"#45-jump-game-ii-260-hard\">#</a> 45 Jump Game II 26.0% Hard</h3>\n<h3 id=\"51-n-queens-288-hard\"><a class=\"v-toc-item\" href=\"#51-n-queens-288-hard\">#</a> 51 N-Queens 28.8% Hard</h3>\n<h3 id=\"52-n-queens-ii-425-hard\"><a class=\"v-toc-item\" href=\"#52-n-queens-ii-425-hard\">#</a> 52 N-Queens II 42.5% Hard</h3>\n<h3 id=\"56-merge-intervals-282-hard\"><a class=\"v-toc-item\" href=\"#56-merge-intervals-282-hard\">#</a> 56 Merge Intervals 28.2% Hard</h3>\n<h3 id=\"57-insert-interval-262-hard\"><a class=\"v-toc-item\" href=\"#57-insert-interval-262-hard\">#</a> 57 Insert Interval 26.2% Hard</h3>\n<h3 id=\"65-valid-number-126-hard\"><a class=\"v-toc-item\" href=\"#65-valid-number-126-hard\">#</a> 65 Valid Number 12.6% Hard</h3>\n<h3 id=\"68-text-justification-179-hard\"><a class=\"v-toc-item\" href=\"#68-text-justification-179-hard\">#</a> 68 Text Justification 17.9% Hard</h3>\n<h3 id=\"72-edit-distance-305-hard\"><a class=\"v-toc-item\" href=\"#72-edit-distance-305-hard\">#</a> 72 Edit Distance 30.5% Hard</h3>\n<h3 id=\"76-minimum-window-substring-236-hard\"><a class=\"v-toc-item\" href=\"#76-minimum-window-substring-236-hard\">#</a> 76 Minimum Window Substring 23.6% Hard</h3>\n<h3 id=\"84-largest-rectangle-in-histogram-255-hard\"><a class=\"v-toc-item\" href=\"#84-largest-rectangle-in-histogram-255-hard\">#</a> 84 Largest Rectangle in Histogram 25.5% Hard</h3>\n<h3 id=\"85-maximal-rectangle-258-hard\"><a class=\"v-toc-item\" href=\"#85-maximal-rectangle-258-hard\">#</a> 85 Maximal Rectangle 25.8% Hard</h3>\n<h3 id=\"87-scramble-string-281-hard\"><a class=\"v-toc-item\" href=\"#87-scramble-string-281-hard\">#</a> 87 Scramble String 28.1% Hard</h3>\n<h3 id=\"97-interleaving-string-239-hard\"><a class=\"v-toc-item\" href=\"#97-interleaving-string-239-hard\">#</a> 97 Interleaving String 23.9% Hard</h3>\n<h3 id=\"99-recover-binary-search-tree-286-hard\"><a class=\"v-toc-item\" href=\"#99-recover-binary-search-tree-286-hard\">#</a> 99 Recover Binary Search Tree 28.6% Hard</h3>\n<h3 id=\"115-distinct-subsequences-305-hard\"><a class=\"v-toc-item\" href=\"#115-distinct-subsequences-305-hard\">#</a> 115 Distinct Subsequences 30.5% Hard</h3>\n<h3 id=\"117-populating-next-right-pointers-in-each-node-ii-334-hard\"><a class=\"v-toc-item\" href=\"#117-populating-next-right-pointers-in-each-node-ii-334-hard\">#</a> 117 Populating Next Right Pointers in Each Node II 33.4% Hard</h3>\n<h3 id=\"123-best-time-to-buy-and-sell-stock-iii-281-hard\"><a class=\"v-toc-item\" href=\"#123-best-time-to-buy-and-sell-stock-iii-281-hard\">#</a> 123 Best Time to Buy and Sell Stock III 28.1% Hard</h3>\n<h3 id=\"124-binary-tree-maximum-path-sum-249-hard\"><a class=\"v-toc-item\" href=\"#124-binary-tree-maximum-path-sum-249-hard\">#</a> 124 Binary Tree Maximum Path Sum 24.9% Hard</h3>\n<h3 id=\"126-word-ladder-ii-136-hard\"><a class=\"v-toc-item\" href=\"#126-word-ladder-ii-136-hard\">#</a> 126 Word Ladder II 13.6% Hard</h3>\n<h3 id=\"128-longest-consecutive-sequence-351-hard\"><a class=\"v-toc-item\" href=\"#128-longest-consecutive-sequence-351-hard\">#</a> 128 Longest Consecutive Sequence 35.1% Hard</h3>\n<h3 id=\"132-palindrome-partitioning-ii-233-hard\"><a class=\"v-toc-item\" href=\"#132-palindrome-partitioning-ii-233-hard\">#</a> 132 Palindrome Partitioning II 23.3% Hard</h3>\n<h3 id=\"135-candy-238-hard\"><a class=\"v-toc-item\" href=\"#135-candy-238-hard\">#</a> 135 Candy 23.8% Hard</h3>\n<h3 id=\"138-copy-list-with-random-pointer-265-hard\"><a class=\"v-toc-item\" href=\"#138-copy-list-with-random-pointer-265-hard\">#</a> 138 Copy List with Random Pointer 26.5% Hard</h3>\n<h3 id=\"140-word-break-ii-220-hard\"><a class=\"v-toc-item\" href=\"#140-word-break-ii-220-hard\">#</a> 140 Word Break II 22.0% Hard</h3>\n<h3 id=\"145-binary-tree-postorder-traversal-382-hard\"><a class=\"v-toc-item\" href=\"#145-binary-tree-postorder-traversal-382-hard\">#</a> 145 Binary Tree Postorder Traversal 38.2% Hard</h3>\n<h3 id=\"146-lru-cache-160-hard\"><a class=\"v-toc-item\" href=\"#146-lru-cache-160-hard\">#</a> 146 LRU Cache 16.0% Hard</h3>\n<h3 id=\"149-max-points-on-a-line-155-hard\"><a class=\"v-toc-item\" href=\"#149-max-points-on-a-line-155-hard\">#</a> 149 Max Points on a Line 15.5% Hard</h3>\n<h3 id=\"154-find-minimum-in-rotated-sorted-array-ii-360-hard\"><a class=\"v-toc-item\" href=\"#154-find-minimum-in-rotated-sorted-array-ii-360-hard\">#</a> 154 Find Minimum in Rotated Sorted Array II 36.0% Hard</h3>\n<h3 id=\"158-read-n-characters-given-read4-ii-call-multiple-times-242-hard\"><a class=\"v-toc-item\" href=\"#158-read-n-characters-given-read4-ii-call-multiple-times-242-hard\">#</a> 158 Read N Characters Given Read4 II - Call multiple times 24.2% Hard</h3>\n<h3 id=\"159-longest-substring-with-at-most-two-distinct-characters-393-hard\"><a class=\"v-toc-item\" href=\"#159-longest-substring-with-at-most-two-distinct-characters-393-hard\">#</a> 159 Longest Substring with At Most Two Distinct Characters 39.3% Hard</h3>\n<h3 id=\"164-maximum-gap-285-hard\"><a class=\"v-toc-item\" href=\"#164-maximum-gap-285-hard\">#</a> 164 Maximum Gap 28.5% Hard</h3>\n<h3 id=\"174-dungeon-game-228-hard\"><a class=\"v-toc-item\" href=\"#174-dungeon-game-228-hard\">#</a> 174 Dungeon Game 22.8% Hard</h3>\n<h3 id=\"188-best-time-to-buy-and-sell-stock-iv-237-hard\"><a class=\"v-toc-item\" href=\"#188-best-time-to-buy-and-sell-stock-iv-237-hard\">#</a> 188 Best Time to Buy and Sell Stock IV 23.7% Hard</h3>\n<h3 id=\"212-word-search-ii-221-hard\"><a class=\"v-toc-item\" href=\"#212-word-search-ii-221-hard\">#</a> 212 Word Search II 22.1% Hard</h3>\n<h3 id=\"214-shortest-palindrome-227-hard\"><a class=\"v-toc-item\" href=\"#214-shortest-palindrome-227-hard\">#</a> 214 Shortest Palindrome 22.7% Hard</h3>\n<h3 id=\"218-the-skyline-problem-253-hard\"><a class=\"v-toc-item\" href=\"#218-the-skyline-problem-253-hard\">#</a> 218 The Skyline Problem 25.3% Hard</h3>\n<h3 id=\"224-basic-calculator-253-hard\"><a class=\"v-toc-item\" href=\"#224-basic-calculator-253-hard\">#</a> 224 Basic Calculator 25.3% Hard</h3>\n<h3 id=\"233-number-of-digit-one-272-hard\"><a class=\"v-toc-item\" href=\"#233-number-of-digit-one-272-hard\">#</a> 233 Number of Digit One 27.2% Hard</h3>\n<h3 id=\"239-sliding-window-maximum-312-hard\"><a class=\"v-toc-item\" href=\"#239-sliding-window-maximum-312-hard\">#</a> 239 Sliding Window Maximum 31.2% Hard</h3>\n<h3 id=\"248-strobogrammatic-number-iii-302-hard\"><a class=\"v-toc-item\" href=\"#248-strobogrammatic-number-iii-302-hard\">#</a> 248 Strobogrammatic Number III 30.2% Hard</h3>\n<h3 id=\"265-paint-house-ii-370-hard\"><a class=\"v-toc-item\" href=\"#265-paint-house-ii-370-hard\">#</a> 265 Paint House II 37.0% Hard</h3>\n<h3 id=\"269-alien-dictionary-225-hard\"><a class=\"v-toc-item\" href=\"#269-alien-dictionary-225-hard\">#</a> 269 Alien Dictionary 22.5% Hard</h3>\n<h3 id=\"272-closest-binary-search-tree-value-ii-372-hard\"><a class=\"v-toc-item\" href=\"#272-closest-binary-search-tree-value-ii-372-hard\">#</a> 272 Closest Binary Search Tree Value II 37.2% Hard</h3>\n<h3 id=\"273-integer-to-english-words-209-hard\"><a class=\"v-toc-item\" href=\"#273-integer-to-english-words-209-hard\">#</a> 273 Integer to English Words 20.9% Hard</h3>\n<h3 id=\"282-expression-add-operators-283-hard\"><a class=\"v-toc-item\" href=\"#282-expression-add-operators-283-hard\">#</a> 282 Expression Add Operators 28.3% Hard</h3>\n<h3 id=\"287-find-the-duplicate-number-416-hard\"><a class=\"v-toc-item\" href=\"#287-find-the-duplicate-number-416-hard\">#</a> 287 Find the Duplicate Number 41.6% Hard</h3>\n<h3 id=\"291-word-pattern-ii-374-hard\"><a class=\"v-toc-item\" href=\"#291-word-pattern-ii-374-hard\">#</a> 291 Word Pattern II 37.4% Hard</h3>\n<h3 id=\"295-find-median-from-data-stream-232-hard\"><a class=\"v-toc-item\" href=\"#295-find-median-from-data-stream-232-hard\">#</a> 295 Find Median from Data Stream 23.2% Hard</h3>\n<h3 id=\"296-best-meeting-point-500-hard\"><a class=\"v-toc-item\" href=\"#296-best-meeting-point-500-hard\">#</a> 296 Best Meeting Point 50.0% Hard</h3>\n<h3 id=\"297-serialize-and-deserialize-binary-tree-313-hard\"><a class=\"v-toc-item\" href=\"#297-serialize-and-deserialize-binary-tree-313-hard\">#</a> 297 Serialize and Deserialize Binary Tree 31.3% Hard</h3>\n<h3 id=\"301-remove-invalid-parentheses-345-hard\"><a class=\"v-toc-item\" href=\"#301-remove-invalid-parentheses-345-hard\">#</a> 301 Remove Invalid Parentheses 34.5% Hard</h3>\n<h3 id=\"302-smallest-rectangle-enclosing-black-pixels-433-hard\"><a class=\"v-toc-item\" href=\"#302-smallest-rectangle-enclosing-black-pixels-433-hard\">#</a> 302 Smallest Rectangle Enclosing Black Pixels 43.3% Hard</h3>\n<h3 id=\"305-number-of-islands-ii-379-hard\"><a class=\"v-toc-item\" href=\"#305-number-of-islands-ii-379-hard\">#</a> 305 Number of Islands II 37.9% Hard</h3>\n<h3 id=\"308-range-sum-query-2d-mutable-199-hard\"><a class=\"v-toc-item\" href=\"#308-range-sum-query-2d-mutable-199-hard\">#</a> 308 Range Sum Query 2D - Mutable 19.9% Hard</h3>\n<h3 id=\"312-burst-balloons-414-hard\"><a class=\"v-toc-item\" href=\"#312-burst-balloons-414-hard\">#</a> 312 Burst Balloons 41.4% Hard</h3>\n<h3 id=\"315-count-of-smaller-numbers-after-self-334-hard\"><a class=\"v-toc-item\" href=\"#315-count-of-smaller-numbers-after-self-334-hard\">#</a> 315 Count of Smaller Numbers After Self 33.4% Hard</h3>\n<h3 id=\"316-remove-duplicate-letters-283-hard\"><a class=\"v-toc-item\" href=\"#316-remove-duplicate-letters-283-hard\">#</a> 316 Remove Duplicate Letters 28.3% Hard</h3>\n<h3 id=\"317-shortest-distance-from-all-buildings-332-hard\"><a class=\"v-toc-item\" href=\"#317-shortest-distance-from-all-buildings-332-hard\">#</a> 317 Shortest Distance from All Buildings 33.2% Hard</h3>\n<h3 id=\"321-create-maximum-number-238-hard\"><a class=\"v-toc-item\" href=\"#321-create-maximum-number-238-hard\">#</a> 321 Create Maximum Number 23.8% Hard</h3>\n<h3 id=\"327-count-of-range-sum-286-hard\"><a class=\"v-toc-item\" href=\"#327-count-of-range-sum-286-hard\">#</a> 327 Count of Range Sum 28.6% Hard</h3>\n<h3 id=\"329-longest-increasing-path-in-a-matrix-351-hard\"><a class=\"v-toc-item\" href=\"#329-longest-increasing-path-in-a-matrix-351-hard\">#</a> 329 Longest Increasing Path in a Matrix 35.1% Hard</h3>\n<h3 id=\"330-patching-array-313-hard\"><a class=\"v-toc-item\" href=\"#330-patching-array-313-hard\">#</a> 330 Patching Array 31.3% Hard</h3>\n<h3 id=\"335-self-crossing-237-hard\"><a class=\"v-toc-item\" href=\"#335-self-crossing-237-hard\">#</a> 335 Self Crossing 23.7% Hard</h3>\n<h3 id=\"336-palindrome-pairs-243-hard\"><a class=\"v-toc-item\" href=\"#336-palindrome-pairs-243-hard\">#</a> 336 Palindrome Pairs 24.3% Hard</h3>\n<h3 id=\"340-longest-substring-with-at-most-k-distinct-characters-386-hard\"><a class=\"v-toc-item\" href=\"#340-longest-substring-with-at-most-k-distinct-characters-386-hard\">#</a> 340 Longest Substring with At Most K Distinct Characters 38.6% Hard</h3>\n<h3 id=\"352-data-stream-as-disjoint-intervals-387-hard\"><a class=\"v-toc-item\" href=\"#352-data-stream-as-disjoint-intervals-387-hard\">#</a> 352 Data Stream as Disjoint Intervals 38.7% Hard</h3>\n<h3 id=\"354-russian-doll-envelopes-314-hard\"><a class=\"v-toc-item\" href=\"#354-russian-doll-envelopes-314-hard\">#</a> 354 Russian Doll Envelopes 31.4% Hard</h3>\n<h3 id=\"358-rearrange-string-k-distance-apart-317-hard\"><a class=\"v-toc-item\" href=\"#358-rearrange-string-k-distance-apart-317-hard\">#</a> 358 Rearrange String k Distance Apart 31.7% Hard</h3>\n<h3 id=\"363-max-sum-of-rectangle-no-larger-than-k-320-hard\"><a class=\"v-toc-item\" href=\"#363-max-sum-of-rectangle-no-larger-than-k-320-hard\">#</a> 363 Max Sum of Rectangle No Larger Than K 32.0% Hard</h3>\n<h3 id=\"380-insert-delete-getrandom-o1-380-hard\"><a class=\"v-toc-item\" href=\"#380-insert-delete-getrandom-o1-380-hard\">#</a> 380 Insert Delete GetRandom O(1) 38.0% Hard</h3>\n<h3 id=\"381-insert-delete-getrandom-o1-duplicates-allowed-277-hard\"><a class=\"v-toc-item\" href=\"#381-insert-delete-getrandom-o1-duplicates-allowed-277-hard\">#</a> 381 Insert Delete GetRandom O(1) - Duplicates allowed 27.7% Hard</h3>\n<h3 id=\"391-perfect-rectangle-233-hard\"><a class=\"v-toc-item\" href=\"#391-perfect-rectangle-233-hard\">#</a> 391 Perfect Rectangle 23.3% Hard</h3>\n<h3 id=\"403-frog-jump-302-hard\"><a class=\"v-toc-item\" href=\"#403-frog-jump-302-hard\">#</a> 403 Frog Jump 30.2% Hard</h3>\n<h3 id=\"407-trapping-rain-water-ii-350-hard\"><a class=\"v-toc-item\" href=\"#407-trapping-rain-water-ii-350-hard\">#</a> 407 Trapping Rain Water II 35.0% Hard</h3>\n<h3 id=\"410-split-array-largest-sum-311-hard\"><a class=\"v-toc-item\" href=\"#410-split-array-largest-sum-311-hard\">#</a> 410 Split Array Largest Sum 31.1% Hard</h3>\n<h3 id=\"411-minimum-unique-word-abbreviation-309-hard\"><a class=\"v-toc-item\" href=\"#411-minimum-unique-word-abbreviation-309-hard\">#</a> 411 Minimum Unique Word Abbreviation 30.9% Hard</h3>\n<h3 id=\"420-strong-password-checker-215-hard\"><a class=\"v-toc-item\" href=\"#420-strong-password-checker-215-hard\">#</a> 420 Strong Password Checker 21.5% Hard</h3>\n<h3 id=\"425-word-squares-420-hard\"><a class=\"v-toc-item\" href=\"#425-word-squares-420-hard\">#</a> 425 Word Squares 42.0% Hard</h3>\n<h3 id=\"432-all-oone-data-structure-284-hard\"><a class=\"v-toc-item\" href=\"#432-all-oone-data-structure-284-hard\">#</a> 432 All O`one Data Structure 28.4% Hard</h3>\n<h3 id=\"440-k-th-smallest-in-lexicographical-order-214-hard\"><a class=\"v-toc-item\" href=\"#440-k-th-smallest-in-lexicographical-order-214-hard\">#</a> 440 K-th Smallest in Lexicographical Order 21.4% Hard</h3>\n<h3 id=\"446-arithmetic-slices-ii-subsequence-220-hard\"><a class=\"v-toc-item\" href=\"#446-arithmetic-slices-ii-subsequence-220-hard\">#</a> 446 Arithmetic Slices II - Subsequence 22.0% Hard</h3>\n<h3 id=\"465-optimal-account-balancing-275-hard\"><a class=\"v-toc-item\" href=\"#465-optimal-account-balancing-275-hard\">#</a> 465 Optimal Account Balancing 27.5% Hard</h3>\n<h3 id=\"466-count-the-repetitions-246-hard\"><a class=\"v-toc-item\" href=\"#466-count-the-repetitions-246-hard\">#</a> 466 Count The Repetitions 24.6% Hard</h3>\n<h3 id=\"471-encode-string-with-shortest-length-459-hard\"><a class=\"v-toc-item\" href=\"#471-encode-string-with-shortest-length-459-hard\">#</a> 471 Encode String with Shortest Length 45.9% Hard</h3>\n<h3 id=\"472-concatenated-words-282-hard\"><a class=\"v-toc-item\" href=\"#472-concatenated-words-282-hard\">#</a> 472 Concatenated Words 28.2% Hard</h3>\n","toc":"<ul class=\"v-article-toc\">\n<li>\n<ul>\n<li><a href=\"#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li><a href=\"#easy-%E9%9B%86%E5%90%88\">Easy 集合</a>\n<ul>\n<li><a href=\"#1-two-sum-294\">1. Two Sum 29.4%</a></li>\n<li><a href=\"#6-zigzag-conversion-258\">6. ZigZag Conversion 25.8%</a></li>\n<li><a href=\"#7-reverse-integer-237-easy\">7 Reverse Integer 23.7% Easy</a></li>\n<li><a href=\"#8-string-to-integer-atoi-138-easy\">8 String to Integer (atoi) 13.8% Easy</a></li>\n<li><a href=\"#9-palindrome-number-340-easy\">9 Palindrome Number 34.0% Easy</a></li>\n<li><a href=\"#13-roman-to-integer-432-easy\">13 Roman to Integer 43.2% Easy</a></li>\n<li><a href=\"#14-longest-common-prefix-304-easy\">14 Longest Common Prefix 30.4% Easy</a></li>\n<li><a href=\"#19-remove-nth-node-from-end-of-list-320-easy\">19 Remove Nth Node From End of List 32.0% Easy</a></li>\n<li><a href=\"#20-valid-parentheses-319-easy\">20 Valid Parentheses 31.9% Easy</a></li>\n<li><a href=\"#21-merge-two-sorted-lists-377-easy\">21 Merge Two Sorted Lists 37.7% Easy</a></li>\n<li><a href=\"#24-swap-nodes-in-pairs-370-easy\">24 Swap Nodes in Pairs 37.0% Easy</a></li>\n<li><a href=\"#26-remove-duplicates-from-sorted-array-352-easy\">26 Remove Duplicates from Sorted Array 35.2% Easy</a></li>\n<li><a href=\"#27-remove-element-367-easy\">27 Remove Element 36.7% Easy</a></li>\n<li><a href=\"#28-implement-strstr-268-easy\">28 Implement strStr() 26.8% Easy</a></li>\n<li><a href=\"#36-valid-sudoku-337-easy\">36 Valid Sudoku 33.7% Easy</a></li>\n<li><a href=\"#38-count-and-say-323-easy\">38 Count and Say 32.3% Easy</a></li>\n<li><a href=\"#58-length-of-last-word-310-easy\">58 Length of Last Word 31.0% Easy</a></li>\n<li><a href=\"#66-plus-one-367-easy\">66 Plus One 36.7% Easy</a></li>\n<li><a href=\"#67-add-binary-302-easy\">67 Add Binary 30.2% Easy</a></li>\n<li><a href=\"#70-climbing-stairs-385-easy\">70 Climbing Stairs 38.5% Easy</a></li>\n<li><a href=\"#83-remove-duplicates-from-sorted-list-387-easy\">83 Remove Duplicates from Sorted List 38.7% Easy</a></li>\n<li><a href=\"#88-merge-sorted-array-313-easy\">88 Merge Sorted Array 31.3% Easy</a></li>\n<li><a href=\"#100-same-tree-451-easy\">100 Same Tree 45.1% Easy</a></li>\n<li><a href=\"#101-symmetric-tree-367-easy\">101 Symmetric Tree 36.7% Easy</a></li>\n<li><a href=\"#102-binary-tree-level-order-traversal-367-easy\">102 Binary Tree Level Order Traversal 36.7% Easy</a></li>\n<li><a href=\"#104-maximum-depth-of-binary-tree-506-easy\">104 Maximum Depth of Binary Tree 50.6% Easy</a></li>\n<li><a href=\"#107-binary-tree-level-order-traversal-ii-375-easy\">107 Binary Tree Level Order Traversal II 37.5% Easy</a></li>\n<li><a href=\"#110-balanced-binary-tree-361-easy\">110 Balanced Binary Tree 36.1% Easy</a></li>\n<li><a href=\"#111-minimum-depth-of-binary-tree-322-easy\">111 Minimum Depth of Binary Tree 32.2% Easy</a></li>\n<li><a href=\"#112-path-sum-328-easy\">112 Path Sum 32.8% Easy</a></li>\n<li><a href=\"#118-pascals-triangle-365-easy\">118 Pascal’s Triangle 36.5% Easy</a></li>\n<li><a href=\"#119-pascals-triangle-ii-348-easy\">119 Pascal’s Triangle II 34.8% Easy</a></li>\n<li><a href=\"#121-best-time-to-buy-and-sell-stock-389-easy\">121 Best Time to Buy and Sell Stock 38.9% Easy</a></li>\n<li><a href=\"#125-valid-palindrome-252-easy\">125 Valid Palindrome 25.2% Easy</a></li>\n<li><a href=\"#136-single-number-526-easy\">136 Single Number 52.6% Easy</a></li>\n<li><a href=\"#141-linked-list-cycle-359-easy\">141 Linked List Cycle 35.9% Easy</a></li>\n<li><a href=\"#155-min-stack-260-easy\">155 Min Stack 26.0% Easy</a></li>\n<li><a href=\"#157-read-n-characters-given-read4-294-easy\">157 Read N Characters Given Read4 29.4% Easy</a></li>\n<li><a href=\"#160-intersection-of-two-linked-lists-300-easy\">160 Intersection of Two Linked Lists 30.0% Easy</a></li>\n<li><a href=\"#165-compare-version-numbers-191-easy\">165 Compare Version Numbers 19.1% Easy</a></li>\n<li><a href=\"#168-excel-sheet-column-title-242-easy\">168 Excel Sheet Column Title 24.2% Easy</a></li>\n<li><a href=\"#169-majority-element-446-easy\">169 Majority Element 44.6% Easy</a></li>\n<li><a href=\"#170-two-sum-iii-data-structure-design-226-easy\">170 Two Sum III - Data structure design 22.6% Easy</a></li>\n<li><a href=\"#171-excel-sheet-column-number-450-easy\">171 Excel Sheet Column Number 45.0% Easy</a></li>\n<li><a href=\"#172-factorial-trailing-zeroes-347-easy\">172 Factorial Trailing Zeroes 34.7% Easy</a></li>\n<li><a href=\"#189-rotate-array-233-easy\">189 Rotate Array 23.3% Easy</a></li>\n<li><a href=\"#190-reverse-bits-295-easy\">190 Reverse Bits 29.5% Easy</a></li>\n<li><a href=\"#191-number-of-1-bits-384-easy\">191 Number of 1 Bits 38.4% Easy</a></li>\n<li><a href=\"#198-house-robber-372-easy\">198 House Robber 37.2% Easy</a></li>\n<li><a href=\"#202-happy-number-390-easy\">202 Happy Number 39.0% Easy</a></li>\n<li><a href=\"#203-remove-linked-list-elements-308-easy\">203 Remove Linked List Elements 30.8% Easy</a></li>\n<li><a href=\"#204-count-primes-260-easy\">204 Count Primes 26.0% Easy</a></li>\n<li><a href=\"#205-isomorphic-strings-323-easy\">205 Isomorphic Strings 32.3% Easy</a></li>\n<li><a href=\"#206-reverse-linked-list-432-easy\">206 Reverse Linked List 43.2% Easy</a></li>\n<li><a href=\"#217-contains-duplicate-435-easy\">217 Contains Duplicate 43.5% Easy</a></li>\n<li><a href=\"#219-contains-duplicate-ii-313-easy\">219 Contains Duplicate II 31.3% Easy</a></li>\n<li><a href=\"#223-rectangle-area-318-easy\">223 Rectangle Area 31.8% Easy</a></li>\n<li><a href=\"#225-implement-stack-using-queues-310-easy\">225 Implement Stack using Queues 31.0% Easy</a></li>\n<li><a href=\"#226-invert-binary-tree-495-easy\">226 Invert Binary Tree 49.5% Easy</a></li>\n<li><a href=\"#231-power-of-two-391-easy\">231 Power of Two 39.1% Easy</a></li>\n<li><a href=\"#232-implement-queue-using-stacks-349-easy\">232 Implement Queue using Stacks 34.9% Easy</a></li>\n<li><a href=\"#234-palindrome-linked-list-314-easy\">234 Palindrome Linked List 31.4% Easy</a></li>\n<li><a href=\"#235-lowest-common-ancestor-of-a-binary-search-tree-380-easy\">235 Lowest Common Ancestor of a Binary Search Tree 38.0% Easy</a></li>\n<li><a href=\"#237-delete-node-in-a-linked-list-452-easy\">237 Delete Node in a Linked List 45.2% Easy</a></li>\n<li><a href=\"#242-valid-anagram-446-easy\">242 Valid Anagram 44.6% Easy</a></li>\n<li><a href=\"#243-shortest-word-distance-505-easy\">243 Shortest Word Distance 50.5% Easy</a></li>\n<li><a href=\"#246-strobogrammatic-number-387-easy\">246 Strobogrammatic Number 38.7% Easy</a></li>\n<li><a href=\"#249-group-shifted-strings-381-easy\">249 Group Shifted Strings 38.1% Easy</a></li>\n<li><a href=\"#252-meeting-rooms-452-easy\">252 Meeting Rooms 45.2% Easy</a></li>\n<li><a href=\"#257-binary-tree-paths-343-easy\">257 Binary Tree Paths 34.3% Easy</a></li>\n<li><a href=\"#258-add-digits-501-easy\">258 Add Digits 50.1% Easy</a></li>\n<li><a href=\"#263-ugly-number-383-easy\">263 Ugly Number 38.3% Easy</a></li>\n<li><a href=\"#266-palindrome-permutation-548-easy\">266 Palindrome Permutation 54.8% Easy</a></li>\n<li><a href=\"#270-closest-binary-search-tree-value-378-easy\">270 Closest Binary Search Tree Value 37.8% Easy</a></li>\n<li><a href=\"#276-paint-fence-337-easy\">276 Paint Fence 33.7% Easy</a></li>\n<li><a href=\"#278-first-bad-version-242-easy\">278 First Bad Version 24.2% Easy</a></li>\n<li><a href=\"#283-move-zeroes-475-easy\">283 Move Zeroes 47.5% Easy</a></li>\n<li><a href=\"#288-unique-word-abbreviation-153-easy\">288 Unique Word Abbreviation 15.3% Easy</a></li>\n<li><a href=\"#290-word-pattern-319-easy\">290 Word Pattern 31.9% Easy</a></li>\n<li><a href=\"#292-nim-game-546-easy\">292 Nim Game 54.6% Easy</a></li>\n<li><a href=\"#293-flip-game-537-easy\">293 Flip Game 53.7% Easy</a></li>\n<li><a href=\"#299-bulls-and-cows-330-easy\">299 Bulls and Cows 33.0% Easy</a></li>\n<li><a href=\"#303-range-sum-query-immutable-261-easy\">303 Range Sum Query - Immutable 26.1% Easy</a></li>\n<li><a href=\"#326-power-of-three-391-easy\">326 Power of Three 39.1% Easy</a></li>\n<li><a href=\"#339-nested-list-weight-sum-595-easy\">339 Nested List Weight Sum 59.5% Easy</a></li>\n<li><a href=\"#342-power-of-four-372-easy\">342 Power of Four 37.2% Easy</a></li>\n<li><a href=\"#344-reverse-string-574-easy\">344 Reverse String 57.4% Easy</a></li>\n<li><a href=\"#345-reverse-vowels-of-a-string-371-easy\">345 Reverse Vowels of a String 37.1% Easy</a></li>\n<li><a href=\"#346-moving-average-from-data-stream-571-easy\">346 Moving Average from Data Stream 57.1% Easy</a></li>\n<li><a href=\"#349-intersection-of-two-arrays-454-easy\">349 Intersection of Two Arrays 45.4% Easy</a></li>\n<li><a href=\"#350-intersection-of-two-arrays-ii-434-easy\">350 Intersection of Two Arrays II 43.4% Easy</a></li>\n<li><a href=\"#359-logger-rate-limiter-580-easy\">359 Logger Rate Limiter 58.0% Easy</a></li>\n<li><a href=\"#371-sum-of-two-integers-515-easy\">371 Sum of Two Integers 51.5% Easy</a></li>\n<li><a href=\"#374-guess-number-higher-or-lower-332-easy\">374 Guess Number Higher or Lower 33.2% Easy</a></li>\n<li><a href=\"#383-ransom-note-459-easy\">383 Ransom Note 45.9% Easy</a></li>\n<li><a href=\"#387-first-unique-character-in-a-string-451-easy\">387 First Unique Character in a String 45.1% Easy</a></li>\n<li><a href=\"#389-find-the-difference-503-easy\">389 Find the Difference 50.3% Easy</a></li>\n<li><a href=\"#396-rotate-function-301-easy\">396 Rotate Function 30.1% Easy</a></li>\n<li><a href=\"#400-nth-digit-306-easy\">400 Nth Digit 30.6% Easy</a></li>\n<li><a href=\"#401-binary-watch-431-easy\">401 Binary Watch 43.1% Easy</a></li>\n<li><a href=\"#404-sum-of-left-leaves-456-easy\">404 Sum of Left Leaves 45.6% Easy</a></li>\n<li><a href=\"#405-convert-a-number-to-hexadecimal-406-easy\">405 Convert a Number to Hexadecimal 40.6% Easy</a></li>\n<li><a href=\"#408-valid-word-abbreviation-272-easy\">408 Valid Word Abbreviation 27.2% Easy</a></li>\n<li><a href=\"#409-longest-palindrome-441-easy\">409 Longest Palindrome 44.1% Easy</a></li>\n<li><a href=\"#412-fizz-buzz-580-easy\">412 Fizz Buzz 58.0% Easy</a></li>\n<li><a href=\"#414-third-maximum-number-267-easy\">414 Third Maximum Number 26.7% Easy</a></li>\n<li><a href=\"#415-add-strings-411-easy\">415 Add Strings 41.1% Easy</a></li>\n<li><a href=\"#422-valid-word-square-362-easy\">422 Valid Word Square 36.2% Easy</a></li>\n<li><a href=\"#434-number-of-segments-in-a-string-390-easy\">434 Number of Segments in a String 39.0% Easy</a></li>\n<li><a href=\"#437-path-sum-iii-386-easy\">437 Path Sum III 38.6% Easy</a></li>\n<li><a href=\"#438-find-all-anagrams-in-a-string-334-easy\">438 Find All Anagrams in a String 33.4% Easy</a></li>\n<li><a href=\"#441-arranging-coins-362-easy\">441 Arranging Coins 36.2% Easy</a></li>\n<li><a href=\"#447-number-of-boomerangs-418-easy\">447 Number of Boomerangs 41.8% Easy</a></li>\n<li><a href=\"#448-find-all-numbers-disappeared-in-an-array-613-easy\">448 Find All Numbers Disappeared in an Array 61.3% Easy</a></li>\n<li><a href=\"#453-minimum-moves-to-equal-array-elements-459-easy\">453 Minimum Moves to Equal Array Elements 45.9% Easy</a></li>\n<li><a href=\"#455-assign-cookies-487-easy\">455 Assign Cookies 48.7% Easy</a></li>\n<li><a href=\"#459-repeated-substring-pattern-396-easy\">459 Repeated Substring Pattern 39.6% Easy</a></li>\n<li><a href=\"#461-hamming-distance-748-easy\">461 Hamming Distance 74.8% Easy</a></li>\n<li><a href=\"#463-island-perimeter-563-easy\">463 Island Perimeter 56.3% Easy</a></li>\n<li><a href=\"#475-heaters-303-easy\">475 Heaters 30.3% Easy</a></li>\n<li><a href=\"#566-reshape-the-matrix\">566. Reshape the Matrix</a></li>\n</ul>\n</li>\n<li><a href=\"#medium-%E9%9B%86%E5%90%88\">Medium 集合</a>\n<ul>\n<li><a href=\"#2-add-two-numbers-261-medium\">2 Add Two Numbers 26.1% Medium</a></li>\n<li><a href=\"#3-longest-substring-without-repeating-characters-236-medium\">3 Longest Substring Without Repeating Characters 23.6% Medium</a></li>\n<li><a href=\"#5-longest-palindromic-substring-244-medium\">5 Longest Palindromic Substring 24.4% Medium</a></li>\n<li><a href=\"#11-container-with-most-water-360-medium\">11 Container With Most Water 36.0% Medium</a></li>\n<li><a href=\"#12-integer-to-roman-426-medium\">12 Integer to Roman 42.6% Medium</a></li>\n<li><a href=\"#15-3sum-207-medium\">15 3Sum 20.7% Medium</a></li>\n<li><a href=\"#16-3sum-closest-304-medium\">16 3Sum Closest 30.4% Medium</a></li>\n<li><a href=\"#17-letter-combinations-of-a-phone-number-321-medium\">17 Letter Combinations of a Phone Number 32.1% Medium</a></li>\n<li><a href=\"#18-4sum-255-medium\">18 4Sum 25.5% Medium</a></li>\n<li><a href=\"#22-generate-parentheses-415-medium\">22 Generate Parentheses 41.5% Medium</a></li>\n<li><a href=\"#29-divide-two-integers-159-medium\">29 Divide Two Integers 15.9% Medium</a></li>\n<li><a href=\"#31-next-permutation-280-medium\">31 Next Permutation 28.0% Medium</a></li>\n<li><a href=\"#34-search-for-a-range-308-medium\">34 Search for a Range 30.8% Medium</a></li>\n<li><a href=\"#35-search-insert-position-388-medium\">35 Search Insert Position 38.8% Medium</a></li>\n<li><a href=\"#39-combination-sum-354-medium\">39 Combination Sum 35.4% Medium</a></li>\n<li><a href=\"#40-combination-sum-ii-310-medium\">40 Combination Sum II 31.0% Medium</a></li>\n<li><a href=\"#43-multiply-strings-258-medium\">43 Multiply Strings 25.8% Medium</a></li>\n<li><a href=\"#46-permutations-401-medium\">46 Permutations 40.1% Medium</a></li>\n<li><a href=\"#47-permutations-ii-308-medium\">47 Permutations II 30.8% Medium</a></li>\n<li><a href=\"#48-rotate-image-369-medium\">48 Rotate Image 36.9% Medium</a></li>\n<li><a href=\"#49-group-anagrams-315-medium\">49 Group Anagrams 31.5% Medium</a></li>\n<li><a href=\"#50-powx-n-271-medium\">50 Pow(x, n) 27.1% Medium</a></li>\n<li><a href=\"#53-maximum-subarray-386-medium\">53 Maximum Subarray 38.6% Medium</a></li>\n<li><a href=\"#54-spiral-matrix-244-medium\">54 Spiral Matrix 24.4% Medium</a></li>\n<li><a href=\"#55-jump-game-291-medium\">55 Jump Game 29.1% Medium</a></li>\n<li><a href=\"#59-spiral-matrix-ii-378-medium\">59 Spiral Matrix II 37.8% Medium</a></li>\n<li><a href=\"#60-permutation-sequence-270-medium\">60 Permutation Sequence 27.0% Medium</a></li>\n<li><a href=\"#61-rotate-list-240-medium\">61 Rotate List 24.0% Medium</a></li>\n<li><a href=\"#62-unique-paths-390-medium\">62 Unique Paths 39.0% Medium</a></li>\n<li><a href=\"#63-unique-paths-ii-308-medium\">63 Unique Paths II 30.8% Medium</a></li>\n<li><a href=\"#64-minimum-path-sum-370-medium\">64 Minimum Path Sum 37.0% Medium</a></li>\n<li><a href=\"#69-sqrtx-268-medium\">69 Sqrt(x) 26.8% Medium</a></li>\n<li><a href=\"#71-simplify-path-239-medium\">71 Simplify Path 23.9% Medium</a></li>\n<li><a href=\"#73-set-matrix-zeroes-350-medium\">73 Set Matrix Zeroes 35.0% Medium</a></li>\n<li><a href=\"#74-search-a-2d-matrix-356-medium\">74 Search a 2D Matrix 35.6% Medium</a></li>\n<li><a href=\"#75-sort-colors-365-medium\">75 Sort Colors 36.5% Medium</a></li>\n<li><a href=\"#77-combinations-376-medium\">77 Combinations 37.6% Medium</a></li>\n<li><a href=\"#78-subsets-362-medium\">78 Subsets 36.2% Medium</a></li>\n<li><a href=\"#79-word-search-252-medium\">79 Word Search 25.2% Medium</a></li>\n<li><a href=\"#80-remove-duplicates-from-sorted-array-ii-347-medium\">80 Remove Duplicates from Sorted Array II 34.7% Medium</a></li>\n<li><a href=\"#81-search-in-rotated-sorted-array-ii-329-medium\">81 Search in Rotated Sorted Array II 32.9% Medium</a></li>\n<li><a href=\"#82-remove-duplicates-from-sorted-list-ii-285-medium\">82 Remove Duplicates from Sorted List II 28.5% Medium</a></li>\n<li><a href=\"#86-partition-list-314-medium\">86 Partition List 31.4% Medium</a></li>\n<li><a href=\"#89-gray-code-391-medium\">89 Gray Code 39.1% Medium</a></li>\n<li><a href=\"#90-subsets-ii-336-medium\">90 Subsets II 33.6% Medium</a></li>\n<li><a href=\"#91-decode-ways-188-medium\">91 Decode Ways 18.8% Medium</a></li>\n<li><a href=\"#92-reverse-linked-list-ii-297-medium\">92 Reverse Linked List II 29.7% Medium</a></li>\n<li><a href=\"#93-restore-ip-addresses-257-medium\">93 Restore IP Addresses 25.7% Medium</a></li>\n<li><a href=\"#94-binary-tree-inorder-traversal-435-medium\">94 Binary Tree Inorder Traversal 43.5% Medium</a></li>\n<li><a href=\"#95-unique-binary-search-trees-ii-305-medium\">95 Unique Binary Search Trees II 30.5% Medium</a></li>\n<li><a href=\"#96-unique-binary-search-trees-396-medium\">96 Unique Binary Search Trees 39.6% Medium</a></li>\n<li><a href=\"#98-validate-binary-search-tree-222-medium\">98 Validate Binary Search Tree 22.2% Medium</a></li>\n<li><a href=\"#103-binary-tree-zigzag-level-order-traversal-320-medium\">103 Binary Tree Zigzag Level Order Traversal 32.0% Medium</a></li>\n<li><a href=\"#105-construct-binary-tree-from-preorder-and-inorder-traversal-306-medium\">105 Construct Binary Tree from Preorder and Inorder Traversal 30.6% Medium</a></li>\n<li><a href=\"#106-construct-binary-tree-from-inorder-and-postorder-traversal-308-medium\">106 Construct Binary Tree from Inorder and Postorder Traversal 30.8% Medium</a></li>\n<li><a href=\"#108-convert-sorted-array-to-binary-search-tree-402-medium\">108 Convert Sorted Array to Binary Search Tree 40.2% Medium</a></li>\n<li><a href=\"#109-convert-sorted-list-to-binary-search-tree-326-medium\">109 Convert Sorted List to Binary Search Tree 32.6% Medium</a></li>\n<li><a href=\"#113-path-sum-ii-312-medium\">113 Path Sum II 31.2% Medium</a></li>\n<li><a href=\"#114-flatten-binary-tree-to-linked-list-334-medium\">114 Flatten Binary Tree to Linked List 33.4% Medium</a></li>\n<li><a href=\"#116-populating-next-right-pointers-in-each-node-368-medium\">116 Populating Next Right Pointers in Each Node 36.8% Medium</a></li>\n<li><a href=\"#120-triangle-323-medium\">120 Triangle 32.3% Medium</a></li>\n<li><a href=\"#122-best-time-to-buy-and-sell-stock-ii-453-medium\">122 Best Time to Buy and Sell Stock II 45.3% Medium</a></li>\n<li><a href=\"#127-word-ladder-193-medium\">127 Word Ladder 19.3% Medium</a></li>\n<li><a href=\"#129-sum-root-to-leaf-numbers-350-medium\">129 Sum Root to Leaf Numbers 35.0% Medium</a></li>\n<li><a href=\"#130-surrounded-regions-174-medium\">130 Surrounded Regions 17.4% Medium</a></li>\n<li><a href=\"#131-palindrome-partitioning-306-medium\">131 Palindrome Partitioning 30.6% Medium</a></li>\n<li><a href=\"#133-clone-graph-250-medium\">133 Clone Graph 25.0% Medium</a></li>\n<li><a href=\"#134-gas-station-285-medium\">134 Gas Station 28.5% Medium</a></li>\n<li><a href=\"#137-single-number-ii-400-medium\">137 Single Number II 40.0% Medium</a></li>\n<li><a href=\"#139-word-break-280-medium\">139 Word Break 28.0% Medium</a></li>\n<li><a href=\"#142-linked-list-cycle-ii-312-medium\">142 Linked List Cycle II 31.2% Medium</a></li>\n<li><a href=\"#143-reorder-list-245-medium\">143 Reorder List 24.5% Medium</a></li>\n<li><a href=\"#144-binary-tree-preorder-traversal-428-medium\">144 Binary Tree Preorder Traversal 42.8% Medium</a></li>\n<li><a href=\"#147-insertion-sort-list-316-medium\">147 Insertion Sort List 31.6% Medium</a></li>\n<li><a href=\"#148-sort-list-272-medium\">148 Sort List 27.2% Medium</a></li>\n<li><a href=\"#150-evaluate-reverse-polish-notation-257-medium\">150 Evaluate Reverse Polish Notation 25.7% Medium</a></li>\n<li><a href=\"#151-reverse-words-in-a-string-157-medium\">151 Reverse Words in a String 15.7% Medium</a></li>\n<li><a href=\"#152-maximum-product-subarray-243-medium\">152 Maximum Product Subarray 24.3% Medium</a></li>\n<li><a href=\"#153-find-minimum-in-rotated-sorted-array-384-medium\">153 Find Minimum in Rotated Sorted Array 38.4% Medium</a></li>\n<li><a href=\"#156-binary-tree-upside-down-424-medium\">156 Binary Tree Upside Down 42.4% Medium</a></li>\n<li><a href=\"#161-one-edit-distance-303-medium\">161 One Edit Distance 30.3% Medium</a></li>\n<li><a href=\"#162-find-peak-element-356-medium\">162 Find Peak Element 35.6% Medium</a></li>\n<li><a href=\"#163-missing-ranges-285-medium\">163 Missing Ranges 28.5% Medium</a></li>\n<li><a href=\"#166-fraction-to-recurring-decimal-167-medium\">166 Fraction to Recurring Decimal 16.7% Medium</a></li>\n<li><a href=\"#167-two-sum-ii-input-array-is-sorted-479-medium\">167 Two Sum II - Input array is sorted 47.9% Medium</a></li>\n<li><a href=\"#173-binary-search-tree-iterator-387-medium\">173 Binary Search Tree Iterator 38.7% Medium</a></li>\n<li><a href=\"#179-largest-number-213-medium\">179 Largest Number 21.3% Medium</a></li>\n<li><a href=\"#186-reverse-words-in-a-string-ii-285-medium\">186 Reverse Words in a String II 28.5% Medium</a></li>\n<li><a href=\"#187-repeated-dna-sequences-293-medium\">187 Repeated DNA Sequences 29.3% Medium</a></li>\n<li><a href=\"#199-binary-tree-right-side-view-384-medium\">199 Binary Tree Right Side View 38.4% Medium</a></li>\n<li><a href=\"#200-number-of-islands-320-medium\">200 Number of Islands 32.0% Medium</a></li>\n<li><a href=\"#201-bitwise-and-of-numbers-range-330-medium\">201 Bitwise AND of Numbers Range 33.0% Medium</a></li>\n<li><a href=\"#207-course-schedule-302-medium\">207 Course Schedule 30.2% Medium</a></li>\n<li><a href=\"#208-implement-trie-prefix-tree-256-medium\">208 Implement Trie (Prefix Tree) 25.6% Medium</a></li>\n<li><a href=\"#209-minimum-size-subarray-sum-284-medium\">209 Minimum Size Subarray Sum 28.4% Medium</a></li>\n<li><a href=\"#210-course-schedule-ii-253-medium\">210 Course Schedule II 25.3% Medium</a></li>\n<li><a href=\"#211-add-and-search-word-data-structure-design-201-medium\">211 Add and Search Word - Data structure design 20.1% Medium</a></li>\n<li><a href=\"#213-house-robber-ii-329-medium\">213 House Robber II 32.9% Medium</a></li>\n<li><a href=\"#215-kth-largest-element-in-an-array-372-medium\">215 Kth Largest Element in an Array 37.2% Medium</a></li>\n<li><a href=\"#216-combination-sum-iii-415-medium\">216 Combination Sum III 41.5% Medium</a></li>\n<li><a href=\"#220-contains-duplicate-iii-195-medium\">220 Contains Duplicate III 19.5% Medium</a></li>\n<li><a href=\"#221-maximal-square-268-medium\">221 Maximal Square 26.8% Medium</a></li>\n<li><a href=\"#222-count-complete-tree-nodes-269-medium\">222 Count Complete Tree Nodes 26.9% Medium</a></li>\n<li><a href=\"#227-basic-calculator-ii-279-medium\">227 Basic Calculator II 27.9% Medium</a></li>\n<li><a href=\"#228-summary-ranges-278-medium\">228 Summary Ranges 27.8% Medium</a></li>\n<li><a href=\"#229-majority-element-ii-276-medium\">229 Majority Element II 27.6% Medium</a></li>\n<li><a href=\"#230-kth-smallest-element-in-a-bst-417-medium\">230 Kth Smallest Element in a BST 41.7% Medium</a></li>\n<li><a href=\"#236-lowest-common-ancestor-of-a-binary-tree-292-medium\">236 Lowest Common Ancestor of a Binary Tree 29.2% Medium</a></li>\n<li><a href=\"#238-product-of-array-except-self-468-medium\">238 Product of Array Except Self 46.8% Medium</a></li>\n<li><a href=\"#240-search-a-2d-matrix-ii-378-medium\">240 Search a 2D Matrix II 37.8% Medium</a></li>\n<li><a href=\"#241-different-ways-to-add-parentheses-409-medium\">241 Different Ways to Add Parentheses 40.9% Medium</a></li>\n<li><a href=\"#244-shortest-word-distance-ii-348-medium\">244 Shortest Word Distance II 34.8% Medium</a></li>\n<li><a href=\"#245-shortest-word-distance-iii-492-medium\">245 Shortest Word Distance III 49.2% Medium</a></li>\n<li><a href=\"#247-strobogrammatic-number-ii-380-medium\">247 Strobogrammatic Number II 38.0% Medium</a></li>\n<li><a href=\"#250-count-univalue-subtrees-400-medium\">250 Count Univalue Subtrees 40.0% Medium</a></li>\n<li><a href=\"#251-flatten-2d-vector-385-medium\">251 Flatten 2D Vector 38.5% Medium</a></li>\n<li><a href=\"#253-meeting-rooms-ii-380-medium\">253 Meeting Rooms II 38.0% Medium</a></li>\n<li><a href=\"#254-factor-combinations-400-medium\">254 Factor Combinations 40.0% Medium</a></li>\n<li><a href=\"#255-verify-preorder-sequence-in-binary-search-tree-387-medium\">255 Verify Preorder Sequence in Binary Search Tree 38.7% Medium</a></li>\n<li><a href=\"#256-paint-house-457-medium\">256 Paint House 45.7% Medium</a></li>\n<li><a href=\"#259-3sum-smaller-405-medium\">259 3Sum Smaller 40.5% Medium</a></li>\n<li><a href=\"#260-single-number-iii-489-medium\">260 Single Number III 48.9% Medium</a></li>\n<li><a href=\"#261-graph-valid-tree-363-medium\">261 Graph Valid Tree 36.3% Medium</a></li>\n<li><a href=\"#264-ugly-number-ii-313-medium\">264 Ugly Number II 31.3% Medium</a></li>\n<li><a href=\"#267-palindrome-permutation-ii-308-medium\">267 Palindrome Permutation II 30.8% Medium</a></li>\n<li><a href=\"#268-missing-number-433-medium\">268 Missing Number 43.3% Medium</a></li>\n<li><a href=\"#271-encode-and-decode-strings-265-medium\">271 Encode and Decode Strings 26.5% Medium</a></li>\n<li><a href=\"#274-h-index-319-medium\">274 H-Index 31.9% Medium</a></li>\n<li><a href=\"#275-h-index-ii-335-medium\">275 H-Index II 33.5% Medium</a></li>\n<li><a href=\"#277-find-the-celebrity-354-medium\">277 Find the Celebrity 35.4% Medium</a></li>\n<li><a href=\"#279-perfect-squares-347-medium\">279 Perfect Squares 34.7% Medium</a></li>\n<li><a href=\"#280-wiggle-sort-545-medium\">280 Wiggle Sort 54.5% Medium</a></li>\n<li><a href=\"#281-zigzag-iterator-479-medium\">281 Zigzag Iterator 47.9% Medium</a></li>\n<li><a href=\"#284-peeking-iterator-350-medium\">284 Peeking Iterator 35.0% Medium</a></li>\n<li><a href=\"#285-inorder-successor-in-bst-362-medium\">285 Inorder Successor in BST 36.2% Medium</a></li>\n<li><a href=\"#286-walls-and-gates-420-medium\">286 Walls and Gates 42.0% Medium</a></li>\n<li><a href=\"#289-game-of-life-362-medium\">289 Game of Life 36.2% Medium</a></li>\n<li><a href=\"#294-flip-game-ii-449-medium\">294 Flip Game II 44.9% Medium</a></li>\n<li><a href=\"#298-binary-tree-longest-consecutive-sequence-397-medium\">298 Binary Tree Longest Consecutive Sequence 39.7% Medium</a></li>\n<li><a href=\"#300-longest-increasing-subsequence-372-medium\">300 Longest Increasing Subsequence 37.2% Medium</a></li>\n<li><a href=\"#304-range-sum-query-2d-immutable-227-medium\">304 Range Sum Query 2D - Immutable 22.7% Medium</a></li>\n<li><a href=\"#306-additive-number-271-medium\">306 Additive Number 27.1% Medium</a></li>\n<li><a href=\"#307-range-sum-query-mutable-185-medium\">307 Range Sum Query - Mutable 18.5% Medium</a></li>\n<li><a href=\"#309-best-time-to-buy-and-sell-stock-with-cooldown-394-medium\">309 Best Time to Buy and Sell Stock with Cooldown 39.4% Medium</a></li>\n<li><a href=\"#310-minimum-height-trees-283-medium\">310 Minimum Height Trees 28.3% Medium</a></li>\n<li><a href=\"#311-sparse-matrix-multiplication-504-medium\">311 Sparse Matrix Multiplication 50.4% Medium</a></li>\n<li><a href=\"#313-super-ugly-number-368-medium\">313 Super Ugly Number 36.8% Medium</a></li>\n<li><a href=\"#314-binary-tree-vertical-order-traversal-349-medium\">314 Binary Tree Vertical Order Traversal 34.9% Medium</a></li>\n<li><a href=\"#318-maximum-product-of-word-lengths-419-medium\">318 Maximum Product of Word Lengths 41.9% Medium</a></li>\n<li><a href=\"#319-bulb-switcher-418-medium\">319 Bulb Switcher 41.8% Medium</a></li>\n<li><a href=\"#320-generalized-abbreviation-430-medium\">320 Generalized Abbreviation 43.0% Medium</a></li>\n<li><a href=\"#322-coin-change-259-medium\">322 Coin Change 25.9% Medium</a></li>\n<li><a href=\"#323-number-of-connected-components-in-an-undirected-graph-462-medium\">323 Number of Connected Components in an Undirected Graph 46.2% Medium</a></li>\n<li><a href=\"#324-wiggle-sort-ii-250-medium\">324 Wiggle Sort II 25.0% Medium</a></li>\n<li><a href=\"#325-maximum-size-subarray-sum-equals-k-414-medium\">325 Maximum Size Subarray Sum Equals k 41.4% Medium</a></li>\n<li><a href=\"#328-odd-even-linked-list-416-medium\">328 Odd Even Linked List 41.6% Medium</a></li>\n<li><a href=\"#331-verify-preorder-serialization-of-a-binary-tree-349-medium\">331 Verify Preorder Serialization of a Binary Tree 34.9% Medium</a></li>\n<li><a href=\"#332-reconstruct-itinerary-277-medium\">332 Reconstruct Itinerary 27.7% Medium</a></li>\n<li><a href=\"#333-largest-bst-subtree-296-medium\">333 Largest BST Subtree 29.6% Medium</a></li>\n<li><a href=\"#334-increasing-triplet-subsequence-376-medium\">334 Increasing Triplet Subsequence 37.6% Medium</a></li>\n<li><a href=\"#337-house-robber-iii-413-medium\">337 House Robber III 41.3% Medium</a></li>\n<li><a href=\"#338-counting-bits-593-medium\">338 Counting Bits 59.3% Medium</a></li>\n<li><a href=\"#341-flatten-nested-list-iterator-382-medium\">341 Flatten Nested List Iterator 38.2% Medium</a></li>\n<li><a href=\"#343-integer-break-446-medium\">343 Integer Break 44.6% Medium</a></li>\n<li><a href=\"#347-top-k-frequent-elements-456-medium\">347 Top K Frequent Elements 45.6% Medium</a></li>\n<li><a href=\"#348-design-tic-tac-toe-450-medium\">348 Design Tic-Tac-Toe 45.0% Medium</a></li>\n<li><a href=\"#351-android-unlock-patterns-423-medium\">351 Android Unlock Patterns 42.3% Medium</a></li>\n<li><a href=\"#353-design-snake-game-251-medium\">353 Design Snake Game 25.1% Medium</a></li>\n<li><a href=\"#355-design-twitter-241-medium\">355 Design Twitter 24.1% Medium</a></li>\n<li><a href=\"#356-line-reflection-297-medium\">356 Line Reflection 29.7% Medium</a></li>\n<li><a href=\"#357-count-numbers-with-unique-digits-448-medium\">357 Count Numbers with Unique Digits 44.8% Medium</a></li>\n<li><a href=\"#360-sort-transformed-array-430-medium\">360 Sort Transformed Array 43.0% Medium</a></li>\n<li><a href=\"#361-bomb-enemy-378-medium\">361 Bomb Enemy 37.8% Medium</a></li>\n<li><a href=\"#362-design-hit-counter-524-medium\">362 Design Hit Counter 52.4% Medium</a></li>\n<li><a href=\"#364-nested-list-weight-sum-ii-502-medium\">364 Nested List Weight Sum II 50.2% Medium</a></li>\n<li><a href=\"#365-water-and-jug-problem-259-medium\">365 Water and Jug Problem 25.9% Medium</a></li>\n<li><a href=\"#366-find-leaves-of-binary-tree-567-medium\">366 Find Leaves of Binary Tree 56.7% Medium</a></li>\n<li><a href=\"#367-valid-perfect-square-372-medium\">367 Valid Perfect Square 37.2% Medium</a></li>\n<li><a href=\"#368-largest-divisible-subset-327-medium\">368 Largest Divisible Subset 32.7% Medium</a></li>\n<li><a href=\"#369-plus-one-linked-list-522-medium\">369 Plus One Linked List 52.2% Medium</a></li>\n<li><a href=\"#370-range-addition-528-medium\">370 Range Addition 52.8% Medium</a></li>\n<li><a href=\"#372-super-pow-329-medium\">372 Super Pow 32.9% Medium</a></li>\n<li><a href=\"#373-find-k-pairs-with-smallest-sums-295-medium\">373 Find K Pairs with Smallest Sums 29.5% Medium</a></li>\n<li><a href=\"#375-guess-number-higher-or-lower-ii-347-medium\">375 Guess Number Higher or Lower II 34.7% Medium</a></li>\n<li><a href=\"#376-wiggle-subsequence-343-medium\">376 Wiggle Subsequence 34.3% Medium</a></li>\n<li><a href=\"#377-combination-sum-iv-415-medium\">377 Combination Sum IV 41.5% Medium</a></li>\n<li><a href=\"#378-kth-smallest-element-in-a-sorted-matrix-429-medium\">378 Kth Smallest Element in a Sorted Matrix 42.9% Medium</a></li>\n<li><a href=\"#379-design-phone-directory-291-medium\">379 Design Phone Directory 29.1% Medium</a></li>\n<li><a href=\"#382-linked-list-random-node-461-medium\">382 Linked List Random Node 46.1% Medium</a></li>\n<li><a href=\"#384-shuffle-an-array-447-medium\">384 Shuffle an Array 44.7% Medium</a></li>\n<li><a href=\"#385-mini-parser-294-medium\">385 Mini Parser 29.4% Medium</a></li>\n<li><a href=\"#386-lexicographical-numbers-390-medium\">386 Lexicographical Numbers 39.0% Medium</a></li>\n<li><a href=\"#388-longest-absolute-file-path-344-medium\">388 Longest Absolute File Path 34.4% Medium</a></li>\n<li><a href=\"#390-elimination-game-374-medium\">390 Elimination Game 37.4% Medium</a></li>\n<li><a href=\"#392-is-subsequence-441-medium\">392 Is Subsequence 44.1% Medium</a></li>\n<li><a href=\"#393-utf-8-validation-352-medium\">393 UTF-8 Validation 35.2% Medium</a></li>\n<li><a href=\"#394-decode-string-397-medium\">394 Decode String 39.7% Medium</a></li>\n<li><a href=\"#395-longest-substring-with-at-least-k-repeating-characters-353-medium\">395 Longest Substring with At Least K Repeating Characters 35.3% Medium</a></li>\n<li><a href=\"#397-integer-replacement-289-medium\">397 Integer Replacement 28.9% Medium</a></li>\n<li><a href=\"#398-random-pick-index-390-medium\">398 Random Pick Index 39.0% Medium</a></li>\n<li><a href=\"#399-evaluate-division-392-medium\">399 Evaluate Division 39.2% Medium</a></li>\n<li><a href=\"#402-remove-k-digits-259-medium\">402 Remove K Digits 25.9% Medium</a></li>\n<li><a href=\"#406-queue-reconstruction-by-height-541-medium\">406 Queue Reconstruction by Height 54.1% Medium</a></li>\n<li><a href=\"#413-arithmetic-slices-542-medium\">413 Arithmetic Slices 54.2% Medium</a></li>\n<li><a href=\"#416-partition-equal-subset-sum-372-medium\">416 Partition Equal Subset Sum 37.2% Medium</a></li>\n<li><a href=\"#417-pacific-atlantic-water-flow-327-medium\">417 Pacific Atlantic Water Flow 32.7% Medium</a></li>\n<li><a href=\"#418-sentence-screen-fitting-269-medium\">418 Sentence Screen Fitting 26.9% Medium</a></li>\n<li><a href=\"#419-battleships-in-a-board-598-medium\">419 Battleships in a Board 59.8% Medium</a></li>\n<li><a href=\"#421-maximum-xor-of-two-numbers-in-an-array-406-medium\">421 Maximum XOR of Two Numbers in an Array 40.6% Medium</a></li>\n<li><a href=\"#423-reconstruct-original-digits-from-english-417-medium\">423 Reconstruct Original Digits from English 41.7% Medium</a></li>\n<li><a href=\"#424-longest-repeating-character-replacement-396-medium\">424 Longest Repeating Character Replacement 39.6% Medium</a></li>\n<li><a href=\"#435-non-overlapping-intervals-398-medium\">435 Non-overlapping Intervals 39.8% Medium</a></li>\n<li><a href=\"#436-find-right-interval-419-medium\">436 Find Right Interval 41.9% Medium</a></li>\n<li><a href=\"#439-ternary-expression-parser-493-medium\">439 Ternary Expression Parser 49.3% Medium</a></li>\n<li><a href=\"#442-find-all-duplicates-in-an-array-456-medium\">442 Find All Duplicates in an Array 45.6% Medium</a></li>\n<li><a href=\"#444-sequence-reconstruction-201-medium\">444 Sequence Reconstruction 20.1% Medium</a></li>\n<li><a href=\"#445-add-two-numbers-ii-445-medium\">445 Add Two Numbers II 44.5% Medium</a></li>\n<li><a href=\"#449-serialize-and-deserialize-bst-401-medium\">449 Serialize and Deserialize BST 40.1% Medium</a></li>\n<li><a href=\"#450-delete-node-in-a-bst-324-medium\">450 Delete Node in a BST 32.4% Medium</a></li>\n<li><a href=\"#451-sort-characters-by-frequency-503-medium\">451 Sort Characters By Frequency 50.3% Medium</a></li>\n<li><a href=\"#452-minimum-number-of-arrows-to-burst-balloons-419-medium\">452 Minimum Number of Arrows to Burst Balloons 41.9% Medium</a></li>\n<li><a href=\"#454-4sum-ii-412-medium\">454 4Sum II 41.2% Medium</a></li>\n<li><a href=\"#456-132-pattern-273-medium\">456 132 Pattern 27.3% Medium</a></li>\n<li><a href=\"#462-minimum-moves-to-equal-array-elements-ii-503-medium\">462 Minimum Moves to Equal Array Elements II 50.3% Medium</a></li>\n<li><a href=\"#464-can-i-win-214-medium\">464 Can I Win 21.4% Medium</a></li>\n<li><a href=\"#467-unique-substrings-in-wraparound-string-284-medium\">467 Unique Substrings in Wraparound String 28.4% Medium</a></li>\n<li><a href=\"#468-validate-ip-address-218-medium\">468 Validate IP Address 21.8% Medium</a></li>\n<li><a href=\"#469-convex-polygon-246-medium\">469 Convex Polygon 24.6% Medium</a></li>\n<li><a href=\"#473-matchsticks-to-square-275-medium\">473 Matchsticks to Square 27.5% Medium</a></li>\n<li><a href=\"#474-ones-and-zeroes-327-medium\">474 Ones and Zeroes 32.7% Medium</a></li>\n<li><a href=\"#477-total-hamming-distance-401-medium\">477 Total Hamming Distance 40.1% Medium</a></li>\n</ul>\n</li>\n<li><a href=\"#hard-%E9%9B%86%E5%90%88\">Hard 集合</a>\n<ul>\n<li><a href=\"#4-median-of-two-sorted-arrays-207-hard\">4 Median of Two Sorted Arrays 20.7% Hard</a></li>\n<li><a href=\"#10-regular-expression-matching-234-hard\">10 Regular Expression Matching 23.4% Hard</a></li>\n<li><a href=\"#23-merge-k-sorted-lists-257-hard\">23 Merge k Sorted Lists 25.7% Hard</a></li>\n<li><a href=\"#25-reverse-nodes-in-k-group-296-hard\">25 Reverse Nodes in k-Group 29.6% Hard</a></li>\n<li><a href=\"#30-substring-with-concatenation-of-all-words-216-hard\">30 Substring with Concatenation of All Words 21.6% Hard</a></li>\n<li><a href=\"#32-longest-valid-parentheses-230-hard\">32 Longest Valid Parentheses 23.0% Hard</a></li>\n<li><a href=\"#33-search-in-rotated-sorted-array-318-hard\">33 Search in Rotated Sorted Array 31.8% Hard</a></li>\n<li><a href=\"#37-sudoku-solver-278-hard\">37 Sudoku Solver 27.8% Hard</a></li>\n<li><a href=\"#41-first-missing-positive-249-hard\">41 First Missing Positive 24.9% Hard</a></li>\n<li><a href=\"#42-trapping-rain-water-351-hard\">42 Trapping Rain Water 35.1% Hard</a></li>\n<li><a href=\"#44-wildcard-matching-189-hard\">44 Wildcard Matching 18.9% Hard</a></li>\n<li><a href=\"#45-jump-game-ii-260-hard\">45 Jump Game II 26.0% Hard</a></li>\n<li><a href=\"#51-n-queens-288-hard\">51 N-Queens 28.8% Hard</a></li>\n<li><a href=\"#52-n-queens-ii-425-hard\">52 N-Queens II 42.5% Hard</a></li>\n<li><a href=\"#56-merge-intervals-282-hard\">56 Merge Intervals 28.2% Hard</a></li>\n<li><a href=\"#57-insert-interval-262-hard\">57 Insert Interval 26.2% Hard</a></li>\n<li><a href=\"#65-valid-number-126-hard\">65 Valid Number 12.6% Hard</a></li>\n<li><a href=\"#68-text-justification-179-hard\">68 Text Justification 17.9% Hard</a></li>\n<li><a href=\"#72-edit-distance-305-hard\">72 Edit Distance 30.5% Hard</a></li>\n<li><a href=\"#76-minimum-window-substring-236-hard\">76 Minimum Window Substring 23.6% Hard</a></li>\n<li><a href=\"#84-largest-rectangle-in-histogram-255-hard\">84 Largest Rectangle in Histogram 25.5% Hard</a></li>\n<li><a href=\"#85-maximal-rectangle-258-hard\">85 Maximal Rectangle 25.8% Hard</a></li>\n<li><a href=\"#87-scramble-string-281-hard\">87 Scramble String 28.1% Hard</a></li>\n<li><a href=\"#97-interleaving-string-239-hard\">97 Interleaving String 23.9% Hard</a></li>\n<li><a href=\"#99-recover-binary-search-tree-286-hard\">99 Recover Binary Search Tree 28.6% Hard</a></li>\n<li><a href=\"#115-distinct-subsequences-305-hard\">115 Distinct Subsequences 30.5% Hard</a></li>\n<li><a href=\"#117-populating-next-right-pointers-in-each-node-ii-334-hard\">117 Populating Next Right Pointers in Each Node II 33.4% Hard</a></li>\n<li><a href=\"#123-best-time-to-buy-and-sell-stock-iii-281-hard\">123 Best Time to Buy and Sell Stock III 28.1% Hard</a></li>\n<li><a href=\"#124-binary-tree-maximum-path-sum-249-hard\">124 Binary Tree Maximum Path Sum 24.9% Hard</a></li>\n<li><a href=\"#126-word-ladder-ii-136-hard\">126 Word Ladder II 13.6% Hard</a></li>\n<li><a href=\"#128-longest-consecutive-sequence-351-hard\">128 Longest Consecutive Sequence 35.1% Hard</a></li>\n<li><a href=\"#132-palindrome-partitioning-ii-233-hard\">132 Palindrome Partitioning II 23.3% Hard</a></li>\n<li><a href=\"#135-candy-238-hard\">135 Candy 23.8% Hard</a></li>\n<li><a href=\"#138-copy-list-with-random-pointer-265-hard\">138 Copy List with Random Pointer 26.5% Hard</a></li>\n<li><a href=\"#140-word-break-ii-220-hard\">140 Word Break II 22.0% Hard</a></li>\n<li><a href=\"#145-binary-tree-postorder-traversal-382-hard\">145 Binary Tree Postorder Traversal 38.2% Hard</a></li>\n<li><a href=\"#146-lru-cache-160-hard\">146 LRU Cache 16.0% Hard</a></li>\n<li><a href=\"#149-max-points-on-a-line-155-hard\">149 Max Points on a Line 15.5% Hard</a></li>\n<li><a href=\"#154-find-minimum-in-rotated-sorted-array-ii-360-hard\">154 Find Minimum in Rotated Sorted Array II 36.0% Hard</a></li>\n<li><a href=\"#158-read-n-characters-given-read4-ii-call-multiple-times-242-hard\">158 Read N Characters Given Read4 II - Call multiple times 24.2% Hard</a></li>\n<li><a href=\"#159-longest-substring-with-at-most-two-distinct-characters-393-hard\">159 Longest Substring with At Most Two Distinct Characters 39.3% Hard</a></li>\n<li><a href=\"#164-maximum-gap-285-hard\">164 Maximum Gap 28.5% Hard</a></li>\n<li><a href=\"#174-dungeon-game-228-hard\">174 Dungeon Game 22.8% Hard</a></li>\n<li><a href=\"#188-best-time-to-buy-and-sell-stock-iv-237-hard\">188 Best Time to Buy and Sell Stock IV 23.7% Hard</a></li>\n<li><a href=\"#212-word-search-ii-221-hard\">212 Word Search II 22.1% Hard</a></li>\n<li><a href=\"#214-shortest-palindrome-227-hard\">214 Shortest Palindrome 22.7% Hard</a></li>\n<li><a href=\"#218-the-skyline-problem-253-hard\">218 The Skyline Problem 25.3% Hard</a></li>\n<li><a href=\"#224-basic-calculator-253-hard\">224 Basic Calculator 25.3% Hard</a></li>\n<li><a href=\"#233-number-of-digit-one-272-hard\">233 Number of Digit One 27.2% Hard</a></li>\n<li><a href=\"#239-sliding-window-maximum-312-hard\">239 Sliding Window Maximum 31.2% Hard</a></li>\n<li><a href=\"#248-strobogrammatic-number-iii-302-hard\">248 Strobogrammatic Number III 30.2% Hard</a></li>\n<li><a href=\"#265-paint-house-ii-370-hard\">265 Paint House II 37.0% Hard</a></li>\n<li><a href=\"#269-alien-dictionary-225-hard\">269 Alien Dictionary 22.5% Hard</a></li>\n<li><a href=\"#272-closest-binary-search-tree-value-ii-372-hard\">272 Closest Binary Search Tree Value II 37.2% Hard</a></li>\n<li><a href=\"#273-integer-to-english-words-209-hard\">273 Integer to English Words 20.9% Hard</a></li>\n<li><a href=\"#282-expression-add-operators-283-hard\">282 Expression Add Operators 28.3% Hard</a></li>\n<li><a href=\"#287-find-the-duplicate-number-416-hard\">287 Find the Duplicate Number 41.6% Hard</a></li>\n<li><a href=\"#291-word-pattern-ii-374-hard\">291 Word Pattern II 37.4% Hard</a></li>\n<li><a href=\"#295-find-median-from-data-stream-232-hard\">295 Find Median from Data Stream 23.2% Hard</a></li>\n<li><a href=\"#296-best-meeting-point-500-hard\">296 Best Meeting Point 50.0% Hard</a></li>\n<li><a href=\"#297-serialize-and-deserialize-binary-tree-313-hard\">297 Serialize and Deserialize Binary Tree 31.3% Hard</a></li>\n<li><a href=\"#301-remove-invalid-parentheses-345-hard\">301 Remove Invalid Parentheses 34.5% Hard</a></li>\n<li><a href=\"#302-smallest-rectangle-enclosing-black-pixels-433-hard\">302 Smallest Rectangle Enclosing Black Pixels 43.3% Hard</a></li>\n<li><a href=\"#305-number-of-islands-ii-379-hard\">305 Number of Islands II 37.9% Hard</a></li>\n<li><a href=\"#308-range-sum-query-2d-mutable-199-hard\">308 Range Sum Query 2D - Mutable 19.9% Hard</a></li>\n<li><a href=\"#312-burst-balloons-414-hard\">312 Burst Balloons 41.4% Hard</a></li>\n<li><a href=\"#315-count-of-smaller-numbers-after-self-334-hard\">315 Count of Smaller Numbers After Self 33.4% Hard</a></li>\n<li><a href=\"#316-remove-duplicate-letters-283-hard\">316 Remove Duplicate Letters 28.3% Hard</a></li>\n<li><a href=\"#317-shortest-distance-from-all-buildings-332-hard\">317 Shortest Distance from All Buildings 33.2% Hard</a></li>\n<li><a href=\"#321-create-maximum-number-238-hard\">321 Create Maximum Number 23.8% Hard</a></li>\n<li><a href=\"#327-count-of-range-sum-286-hard\">327 Count of Range Sum 28.6% Hard</a></li>\n<li><a href=\"#329-longest-increasing-path-in-a-matrix-351-hard\">329 Longest Increasing Path in a Matrix 35.1% Hard</a></li>\n<li><a href=\"#330-patching-array-313-hard\">330 Patching Array 31.3% Hard</a></li>\n<li><a href=\"#335-self-crossing-237-hard\">335 Self Crossing 23.7% Hard</a></li>\n<li><a href=\"#336-palindrome-pairs-243-hard\">336 Palindrome Pairs 24.3% Hard</a></li>\n<li><a href=\"#340-longest-substring-with-at-most-k-distinct-characters-386-hard\">340 Longest Substring with At Most K Distinct Characters 38.6% Hard</a></li>\n<li><a href=\"#352-data-stream-as-disjoint-intervals-387-hard\">352 Data Stream as Disjoint Intervals 38.7% Hard</a></li>\n<li><a href=\"#354-russian-doll-envelopes-314-hard\">354 Russian Doll Envelopes 31.4% Hard</a></li>\n<li><a href=\"#358-rearrange-string-k-distance-apart-317-hard\">358 Rearrange String k Distance Apart 31.7% Hard</a></li>\n<li><a href=\"#363-max-sum-of-rectangle-no-larger-than-k-320-hard\">363 Max Sum of Rectangle No Larger Than K 32.0% Hard</a></li>\n<li><a href=\"#380-insert-delete-getrandom-o1-380-hard\">380 Insert Delete GetRandom O(1) 38.0% Hard</a></li>\n<li><a href=\"#381-insert-delete-getrandom-o1-duplicates-allowed-277-hard\">381 Insert Delete GetRandom O(1) - Duplicates allowed 27.7% Hard</a></li>\n<li><a href=\"#391-perfect-rectangle-233-hard\">391 Perfect Rectangle 23.3% Hard</a></li>\n<li><a href=\"#403-frog-jump-302-hard\">403 Frog Jump 30.2% Hard</a></li>\n<li><a href=\"#407-trapping-rain-water-ii-350-hard\">407 Trapping Rain Water II 35.0% Hard</a></li>\n<li><a href=\"#410-split-array-largest-sum-311-hard\">410 Split Array Largest Sum 31.1% Hard</a></li>\n<li><a href=\"#411-minimum-unique-word-abbreviation-309-hard\">411 Minimum Unique Word Abbreviation 30.9% Hard</a></li>\n<li><a href=\"#420-strong-password-checker-215-hard\">420 Strong Password Checker 21.5% Hard</a></li>\n<li><a href=\"#425-word-squares-420-hard\">425 Word Squares 42.0% Hard</a></li>\n<li><a href=\"#432-all-oone-data-structure-284-hard\">432 All O`one Data Structure 28.4% Hard</a></li>\n<li><a href=\"#440-k-th-smallest-in-lexicographical-order-214-hard\">440 K-th Smallest in Lexicographical Order 21.4% Hard</a></li>\n<li><a href=\"#446-arithmetic-slices-ii-subsequence-220-hard\">446 Arithmetic Slices II - Subsequence 22.0% Hard</a></li>\n<li><a href=\"#465-optimal-account-balancing-275-hard\">465 Optimal Account Balancing 27.5% Hard</a></li>\n<li><a href=\"#466-count-the-repetitions-246-hard\">466 Count The Repetitions 24.6% Hard</a></li>\n<li><a href=\"#471-encode-string-with-shortest-length-459-hard\">471 Encode String with Shortest Length 45.9% Hard</a></li>\n<li><a href=\"#472-concatenated-words-282-hard\">472 Concatenated Words 28.2% Hard</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"}},"__N_SSG":true}
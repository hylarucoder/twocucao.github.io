{"pageProps":{"post":{"tags":["PostgreSQL"],"path":"20170105_PostgreSQLCheatSheet.md","title":"PostgreSQL CheatSheat","slug":"PostgreSQL CheatSheat","date":"2017-01-05","category":"DevOps","lastMod":"2020-01-01","description":"这篇文章展示了基本的 Markdown 语法和格式.","thumbnail":"","content":"<h2 id=\"0x00-前言\"><a class=\"v-toc-item\" href=\"#0x00-前言\">#</a> 0x00 前言</h2>\n<p>本文为 Cheatsheet 类型文章，用于记录我在日常编程中经常使用的 PostgreSQL 相关和命令。</p>\n<p>PostGIS 相关的资料参考文章 <a href=\"/2016/10/05/UbuntuCheatsheet/\">Geo Processing With Python</a></p>\n<ul>\n<li>安装与基本配置</li>\n<li>PostgreSQL 配套工具</li>\n<li>PostgreSQL SQL 常用代码片段</li>\n<li>Python Driver : psycopg2 , 与两个 ORM ( Django ORM / SQLAlchemy )</li>\n</ul>\n<p>不定期更新。</p>\n<!-- more -->\n<h2 id=\"0x01-安装配置基本-shell-命令\"><a class=\"v-toc-item\" href=\"#0x01-安装配置基本-shell-命令\">#</a> 0x01 安装，配置，基本 shell 命令</h2>\n<h3 id=\"安装\"><a class=\"v-toc-item\" href=\"#安装\">#</a> 安装</h3>\n<h3 id=\"配置\"><a class=\"v-toc-item\" href=\"#配置\">#</a> 配置</h3>\n<h3 id=\"基本-shell-命令\"><a class=\"v-toc-item\" href=\"#基本-shell-命令\">#</a> 基本 Shell 命令</h3>\n<pre><code># 开启关闭\npg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start\npg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log stop\npg_ctl -D /usr/local/var/postgres start\npg_ctl -D /usr/local/var/postgres stop -s -m fast\n</code></pre>\n<h3 id=\"数据的导入导出\"><a class=\"v-toc-item\" href=\"#数据的导入导出\">#</a> 数据的导入导出</h3>\n<pre><code class=\"language-bash\">pg_dump <span class=\"token operator\">-</span><span class=\"token constant\">C</span> <span class=\"token operator\">-</span>Fp <span class=\"token operator\">-</span>f dump<span class=\"token punctuation\">.</span>sql <span class=\"token operator\">-</span><span class=\"token constant\">U</span> twocucao <span class=\"token constant\">QCS</span> <span class=\"token operator\">-</span>h <span class=\"token number\">192.168</span><span class=\"token number\">.2</span><span class=\"token number\">.175</span>\npg_dump <span class=\"token operator\">-</span><span class=\"token constant\">C</span> <span class=\"token operator\">-</span>Fp <span class=\"token operator\">-</span>f <span class=\"token number\">20160602</span><span class=\"token operator\">-</span><span class=\"token number\">150144</span><span class=\"token operator\">-</span>dump<span class=\"token punctuation\">.</span>sql <span class=\"token operator\">-</span><span class=\"token constant\">U</span> twocucao <span class=\"token constant\">QCS</span> <span class=\"token operator\">--</span>column<span class=\"token operator\">-</span>inserts <span class=\"token operator\">--</span>data<span class=\"token operator\">-</span>only <span class=\"token operator\">--</span>table<span class=\"token operator\">=</span>users_table <span class=\"token operator\">-</span>h <span class=\"token number\">192.168</span><span class=\"token number\">.2</span><span class=\"token number\">.175</span>\n# 插入数据\npsql <span class=\"token operator\">-</span><span class=\"token constant\">U</span> twocucao <span class=\"token operator\">-</span>d <span class=\"token constant\">QCS</span> <span class=\"token operator\">-</span>a <span class=\"token operator\">-</span>f insert_doc_ids<span class=\"token punctuation\">.</span>sql <span class=\"token operator\">-</span>h <span class=\"token number\">192.168</span><span class=\"token number\">.2</span><span class=\"token number\">.175</span>\npg_restore <span class=\"token operator\">--</span>verbose <span class=\"token operator\">--</span>clean <span class=\"token operator\">--</span>no<span class=\"token operator\">-</span>acl <span class=\"token operator\">--</span>no<span class=\"token operator\">-</span>owner <span class=\"token operator\">-</span>h localhost example<span class=\"token punctuation\">.</span>dump\n</code></pre>\n<h2 id=\"0x02-postgresql-配套工具\"><a class=\"v-toc-item\" href=\"#0x02-postgresql-配套工具\">#</a> 0x02 PostgreSQL 配套工具</h2>\n<ul>\n<li>JetBrain 的 Datagrip 作为 编写大段 SQL 语句的 IDE</li>\n<li>通过网络或者 Dash 查看文档</li>\n<li>PostgreSQL 官方自带工具</li>\n</ul>\n<h2 id=\"0x03-postgresql-sql-常用代码\"><a class=\"v-toc-item\" href=\"#0x03-postgresql-sql-常用代码\">#</a> 0x03 PostgreSQL SQL 常用代码</h2>\n<h3 id=\"31-postgresql-相关\"><a class=\"v-toc-item\" href=\"#31-postgresql-相关\">#</a> 3.1 PostgreSQL 相关</h3>\n<pre><code class=\"language-sql\"><span class=\"token operator\">--</span> 强行中断连接到此数据库的 session\n<span class=\"token constant\">SELECT</span>\n    <span class=\"token function\">pg_terminate_backend</span><span class=\"token punctuation\">(</span>pid<span class=\"token punctuation\">)</span>\n<span class=\"token constant\">FROM</span>\n    pg_stat_activity\n<span class=\"token constant\">WHERE</span>\n    <span class=\"token operator\">--</span> don't kill my own connection<span class=\"token operator\">!</span>\n    pid <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span> <span class=\"token function\">pg_backend_pid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">--</span> don't kill the connections to other databases\n    <span class=\"token constant\">AND</span> datname <span class=\"token operator\">=</span> <span class=\"token string\">'demoweb'</span> <span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"32-dcl-data-control-languge\"><a class=\"v-toc-item\" href=\"#32-dcl-data-control-languge\">#</a> 3.2 DCL ( Data Control Languge )</h3>\n<pre><code class=\"language-sql\"><span class=\"token operator\">--</span> 创建只读用户\n\\c demoweb\n<span class=\"token constant\">CREATE</span> <span class=\"token constant\">ROLE</span> ro_user <span class=\"token constant\">WITH</span> <span class=\"token constant\">LOGIN</span> <span class=\"token constant\">ENCRYPTED</span> <span class=\"token constant\">PASSWORD</span> <span class=\"token string\">'xxx123456'</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">CONNECT</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">DATABASE</span> demoweb <span class=\"token constant\">TO</span> ro_user<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">--</span> This assumes you're actually connected to mydb<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">USAGE</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">SCHEMA</span> <span class=\"token keyword\">public</span> <span class=\"token constant\">TO</span> ro_user<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">ALL</span> <span class=\"token constant\">TABLES</span> <span class=\"token constant\">IN</span> <span class=\"token constant\">SCHEMA</span> <span class=\"token keyword\">public</span> <span class=\"token constant\">TO</span> ro_user<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">ALL</span> <span class=\"token constant\">SEQUENCES</span> <span class=\"token constant\">IN</span> <span class=\"token constant\">SCHEMA</span> <span class=\"token keyword\">public</span> <span class=\"token constant\">TO</span> ro_user<span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">--</span> <span class=\"token function\">撤销数据库连接</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token constant\">REVOKE</span> <span class=\"token constant\">CONNECT</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">DATABASE</span> demoweb <span class=\"token constant\">FROM</span> <span class=\"token constant\">PUBLIC</span><span class=\"token punctuation\">,</span> demoweb<span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"33-ddl-data-definition-language\"><a class=\"v-toc-item\" href=\"#33-ddl-data-definition-language\">#</a> 3.3 DDL ( Data Definition Language )</h3>\n<p>CREATE<br>\nALTER<br>\nDROP<br>\nTRUNCATE<br>\nCOMMENT<br>\nRENAME</p>\n<h3 id=\"34-dml-data-manipulation-languge\"><a class=\"v-toc-item\" href=\"#34-dml-data-manipulation-languge\">#</a> 3.4 DML ( Data Manipulation Languge )</h3>\n<p>SELECT<br>\nINSERT<br>\nUPDATE<br>\nDELETE<br>\nMERGE<br>\nCALL<br>\nEXPLAIN PLAN<br>\nLOCK TABLE</p>\n<h3 id=\"35-tcl-transaction-control-languge\"><a class=\"v-toc-item\" href=\"#35-tcl-transaction-control-languge\">#</a> 3.5 TCL ( Transaction Control Languge )</h3>\n<h2 id=\"0x04-常用代码片段\"><a class=\"v-toc-item\" href=\"#0x04-常用代码片段\">#</a> 0x04. 常用代码片段</h2>\n<h3 id=\"41-tips-and-hacks\"><a class=\"v-toc-item\" href=\"#41-tips-and-hacks\">#</a> 4.1. Tips And Hacks</h3>\n<h4 id=\"recursive-query\"><a class=\"v-toc-item\" href=\"#recursive-query\">#</a> Recursive Query</h4>\n<pre><code class=\"language-bash\"><span class=\"token constant\">WITH</span> <span class=\"token function\">cte_name</span><span class=\"token punctuation\">(</span>\n    CTE_query_definition <span class=\"token operator\">--</span> non<span class=\"token operator\">-</span>recursive term\n    <span class=\"token constant\">UNION</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">ALL</span><span class=\"token punctuation\">]</span>\n    CTE_query_definition <span class=\"token operator\">--</span> recursive term\n<span class=\"token punctuation\">)</span> <span class=\"token constant\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token constant\">FROM</span> cte_name<span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"42-大数据量运算技巧\"><a class=\"v-toc-item\" href=\"#42-大数据量运算技巧\">#</a> 4.2. 大数据量运算技巧</h3>\n<h3 id=\"43-备份还原技巧\"><a class=\"v-toc-item\" href=\"#43-备份还原技巧\">#</a> 4.3 备份还原技巧</h3>\n<pre><code class=\"language-bash\"># 需要备份的机器\n<span class=\"token constant\">DB_NAME</span><span class=\"token operator\">=</span><span class=\"token string\">'xxxdb'</span>\n<span class=\"token constant\">DUMP_DB_FILE</span><span class=\"token operator\">=</span><span class=\"token string\">'latest_dump.sql.gz'</span>\nsudo <span class=\"token operator\">-</span>u postgres pg_dump $<span class=\"token constant\">DB_NAME</span> <span class=\"token operator\">|</span> gzip <span class=\"token operator\">-</span><span class=\"token number\">9</span> <span class=\"token operator\">></span> $<span class=\"token constant\">DUMP_DB_FILE</span>\n<span class=\"token constant\">TARGET_HOSTNAME</span><span class=\"token operator\">=</span><span class=\"token string\">'xxx.org'</span>\n<span class=\"token constant\">TARGET_PATH</span><span class=\"token operator\">=</span><span class=\"token string\">'/webapps/'</span>\nscp $<span class=\"token constant\">DUMP_DB_FILE</span> root@$<span class=\"token constant\">TARGET_HOSTNAME</span><span class=\"token operator\">:</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">webapps</span><span class=\"token regex-delimiter\">/</span></span>\n\n# 需要还原的机器\n<span class=\"token constant\">DB_NAME</span><span class=\"token operator\">=</span><span class=\"token string\">'xxxdb'</span>\n<span class=\"token constant\">DUMP_DB_FILE</span><span class=\"token operator\">=</span><span class=\"token string\">'latest_dump.sql.gz'</span>\nsudo <span class=\"token operator\">-</span>u postgres dropdb $<span class=\"token constant\">DB_NAME</span>\nsudo <span class=\"token operator\">-</span>u postgres createdb $<span class=\"token constant\">DB_NAME</span>\ngunzip <span class=\"token operator\">&lt;</span> $<span class=\"token constant\">DUMP_DB_FILE</span> <span class=\"token operator\">|</span> sudo <span class=\"token operator\">-</span>u postgres psql $<span class=\"token constant\">DB_NAME</span>\n</code></pre>\n<h2 id=\"0x05-并发优化技巧\"><a class=\"v-toc-item\" href=\"#0x05-并发优化技巧\">#</a> 0x05. 并发优化技巧</h2>\n<blockquote>\n<p>优化技巧请参考我关于 MySQL 的一片文章。</p>\n</blockquote>\n<h3 id=\"51-acid\"><a class=\"v-toc-item\" href=\"#51-acid\">#</a> 5.1 ACID</h3>\n<ul>\n<li>Atomicity : 行不行，给个准话</li>\n<li>Consistency : 完成时候，数据保持一致（多版本并发控制）</li>\n<li>Isolation : 事务与事务之间是隔离的。即一事务无法查看另一个事务正在修改的数据（默认，如果不默认这玩意，则隔离程度是可以设置的）</li>\n<li>Durablity : 就是存下来了。</li>\n</ul>\n<h4 id=\"多版本并发控制模型\"><a class=\"v-toc-item\" href=\"#多版本并发控制模型\">#</a> 多版本并发控制模型</h4>\n<ul>\n<li>Each query sees only transactions completed before it started</li>\n<li>On query start, PostgreSQL records:\n<ul>\n<li>the transaction counter</li>\n<li>all transaction id’s that are in-process</li>\n</ul>\n</li>\n<li>In a multi-statement transaction, a transaction’s own previous queries are also visible</li>\n<li>The above assumes the default read committed isolation level</li>\n</ul>\n<p>使用 MVCC 多版本并发控制比锁定模型的主要优点是在 MVCC 里， 对检索（读）数据的锁要求与写数据的锁要求不冲突， 所以读不会阻塞写，而写也从不阻塞读。<br>\n在数据库里也有表和行级别的锁定机制， 用于给那些无法轻松接受 MVCC 行为的应用。 不过，恰当地使用 MVCC 总会提供比锁更好地性能。</p>\n<h3 id=\"52-ddl-事务\"><a class=\"v-toc-item\" href=\"#52-ddl-事务\">#</a> 5.2 DDL 事务</h3>\n<p>DDL 可以多条放在一起，然后直接 DDL, 据说可以在 sharding 时候用…</p>\n<h3 id=\"53-事务使用\"><a class=\"v-toc-item\" href=\"#53-事务使用\">#</a> 5.3 事务使用</h3>\n<pre><code class=\"language-sql\">begin<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">--</span> insert_somethings<span class=\"token punctuation\">;</span>\nsavepoint my_savepoint01<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">--</span> wrong ops\nrollback to my_savepoint01<span class=\"token punctuation\">;</span>\ncommit<span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"54-事务隔离级别\"><a class=\"v-toc-item\" href=\"#54-事务隔离级别\">#</a> 5.4 事务隔离级别</h3>\n<ul>\n<li>\n<p>READ UNCOMMITED</p>\n</li>\n<li>\n<p>READ COMMITED</p>\n</li>\n<li>\n<p>REPEATABLE READ</p>\n</li>\n<li>\n<p>SEARLIZABLE</p>\n</li>\n<li>\n<p>脏读 : 和程序的并发一致 默认是不可能的。</p>\n</li>\n<li>\n<p>不可重复读 : 一个事物重新读取前面读过的数，但是发现被改过了。能读原来则是可重复读。读新的，则是不可重复读。</p>\n</li>\n<li>\n<p>幻读 : （举一个为赋新词强说愁的例子）比如，先 count 一下，然后依照 count 值遍历 cursor, 结果发现数量发生变化。</p>\n</li>\n</ul>\n<p>读已提交，是默认。在这里，脏读（不会）、不可重复读（可能）、幻读（可能）。</p>\n<h3 id=\"55-锁机制\"><a class=\"v-toc-item\" href=\"#55-锁机制\">#</a> 5.5 锁机制</h3>\n<ul>\n<li>表级锁模式</li>\n<li>行级锁模式</li>\n</ul>\n<h3 id=\"56-死锁\"><a class=\"v-toc-item\" href=\"#56-死锁\">#</a> 5.6 死锁</h3>\n<p>死锁的典型案例就是：</p>\n<ol>\n<li>当你找你爸要钱的时候，你爸说，要是你妈给你钱，我就给你钱。</li>\n<li>当你找你妈要钱的时候，你妈说，要是你爸给你钱，我就给你钱。</li>\n</ol>\n<p>死锁的四个必要条件：</p>\n<ul>\n<li>互斥条件</li>\n<li>请求和保持条件</li>\n<li>不剥夺条件</li>\n<li>环路等待条件</li>\n</ul>\n<p>避免死锁的方式，一般是按照顺序来。</p>\n<p>当然，数据库可以自动检测出死锁，但是由于捕获死锁需要一定的代价。可能会导致应用程序过久地持有排他锁。</p>\n<blockquote>\n<p>慎用排他锁。</p>\n</blockquote>\n<h2 id=\"0x07-踩坑集\"><a class=\"v-toc-item\" href=\"#0x07-踩坑集\">#</a> 0x07. 踩坑集</h2>\n<ul>\n<li>序列问题</li>\n</ul>\n","toc":"<ul class=\"v-article-toc\">\n<li>\n<ul>\n<li><a href=\"#0x00-%E5%89%8D%E8%A8%80\">0x00 前言</a></li>\n<li><a href=\"#0x01-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E5%9F%BA%E6%9C%AC-shell-%E5%91%BD%E4%BB%A4\">0x01 安装，配置，基本 shell 命令</a>\n<ul>\n<li><a href=\"#%E5%AE%89%E8%A3%85\">安装</a></li>\n<li><a href=\"#%E9%85%8D%E7%BD%AE\">配置</a></li>\n<li><a href=\"#%E5%9F%BA%E6%9C%AC-shell-%E5%91%BD%E4%BB%A4\">基本 Shell 命令</a></li>\n<li><a href=\"#%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA\">数据的导入导出</a></li>\n</ul>\n</li>\n<li><a href=\"#0x02-postgresql-%E9%85%8D%E5%A5%97%E5%B7%A5%E5%85%B7\">0x02 PostgreSQL 配套工具</a></li>\n<li><a href=\"#0x03-postgresql-sql-%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81\">0x03 PostgreSQL SQL 常用代码</a>\n<ul>\n<li><a href=\"#31-postgresql-%E7%9B%B8%E5%85%B3\">3.1 PostgreSQL 相关</a></li>\n<li><a href=\"#32-dcl-data-control-languge\">3.2 DCL ( Data Control Languge )</a></li>\n<li><a href=\"#33-ddl-data-definition-language\">3.3 DDL ( Data Definition Language )</a></li>\n<li><a href=\"#34-dml-data-manipulation-languge\">3.4 DML ( Data Manipulation Languge )</a></li>\n<li><a href=\"#35-tcl-transaction-control-languge\">3.5 TCL ( Transaction Control Languge )</a></li>\n</ul>\n</li>\n<li><a href=\"#0x04-%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5\">0x04. 常用代码片段</a>\n<ul>\n<li><a href=\"#41-tips-and-hacks\">4.1. Tips And Hacks</a>\n<ul>\n<li><a href=\"#recursive-query\">Recursive Query</a></li>\n</ul>\n</li>\n<li><a href=\"#42-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%87%8F%E8%BF%90%E7%AE%97%E6%8A%80%E5%B7%A7\">4.2. 大数据量运算技巧</a></li>\n<li><a href=\"#43-%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9F%E6%8A%80%E5%B7%A7\">4.3 备份还原技巧</a></li>\n</ul>\n</li>\n<li><a href=\"#0x05-%E5%B9%B6%E5%8F%91%E4%BC%98%E5%8C%96%E6%8A%80%E5%B7%A7\">0x05. 并发优化技巧</a>\n<ul>\n<li><a href=\"#51-acid\">5.1 ACID</a>\n<ul>\n<li><a href=\"#%E5%A4%9A%E7%89%88%E6%9C%AC%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%E6%A8%A1%E5%9E%8B\">多版本并发控制模型</a></li>\n</ul>\n</li>\n<li><a href=\"#52-ddl-%E4%BA%8B%E5%8A%A1\">5.2 DDL 事务</a></li>\n<li><a href=\"#53-%E4%BA%8B%E5%8A%A1%E4%BD%BF%E7%94%A8\">5.3 事务使用</a></li>\n<li><a href=\"#54-%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB\">5.4 事务隔离级别</a></li>\n<li><a href=\"#55-%E9%94%81%E6%9C%BA%E5%88%B6\">5.5 锁机制</a></li>\n<li><a href=\"#56-%E6%AD%BB%E9%94%81\">5.6 死锁</a></li>\n</ul>\n</li>\n<li><a href=\"#0x07-%E8%B8%A9%E5%9D%91%E9%9B%86\">0x07. 踩坑集</a></li>\n</ul>\n</li>\n</ul>\n"}},"__N_SSG":true}
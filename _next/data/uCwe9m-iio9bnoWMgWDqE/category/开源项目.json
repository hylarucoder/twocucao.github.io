{"pageProps":{"category":{"name":"开源项目","posts":[{"tags":["Golang"],"path":"20201130_ORY.md","title":"开源认证基础服务","slug":"开源认证基础服务","date":"2020-11-30T18:03:01+08:00","category":"开源项目","lastMod":"2020-12-01","description":"未描述","thumbnail":"","content":"\n## 0x00 前言\n\n随着业务的增长，往往需要统一体系内的服务的账户。\n\n经过一番调研，决定尝试一下 ory 的开源认证基础服务\n\n## 0x01 ORY 尝试解决问题？\n\nORY 提供了四个主要项目，每个项目着力于解决一个边界清晰的认证 / 鉴权问题\n\n- ORY Kratos 提供了用户认证服务\n- ORY Hydra 提供了 OAuth 2.0 & OpenID Connect provider.\n- ORY Keto 提供了 访问控制\n- ORY Oathkeeper 提供了认证访问代理\n\n## 0x02 用户认证服务 Kratos\n\n### 常见方案\n\n1. 方案 1, 选择全栈式解决方案 - 比如 Java 社区的 JGroups\n2. 方案 2, 选择 IDaas - 比如 Login With Apple, Google\n3. 方案 3, 选择自己来 - 比如 Java 社区的 JGroups\n\n三种方案各有利弊\n\n1. 全栈式解决方案上手极快，但\n   - 扩展性不强\n   - 绑定 Java 技术栈\n   - 数据模型固定\n   - 登陆流程固定\n\n- 更新迭代慢\n\n2. Login With Google 虽然方便，但是并没有解决如下的问题\n\n- 更新 Profile\n  - 添加第二个恢复邮箱\n  - 2FA\n  - 存储管理 Sessions\n- 全局登出\n\n3. 自己来，需要处理事情也挺多\n\n- 方案二遇到的问题，一个不会少\n- 加密算法\n  - 流程可能较为复杂，比如先用邮箱注册，然后用 Sign Up Using Google, 或者先用 Sign Up Google, 然后使用邮箱登陆。(PS: 我国的登陆姿势就更多了）\n\n是不是某种方案是最好的呢？其实未必\n\n就我个人经验来说，\n\n- 第一种方案比较适合稳定的，技术栈相同的团队使用。如果对原先应用进行少量裁剪就可以使用，其实未尝不可。\n- 第二种方案如果登陆入口仅是 Login With Google, 并且内网服务数量就几个，也不需要做全局登出，那么其实做起来比较省事。我工作过的一个公司就喜欢这么干。\n- 第三种方案虽然处理的问题看起来比较多，但是社区现有的 Building Block 已经比较多了。如果流程没有特别复杂，一手打造的非常容易往自己的项目发展情况发展。\n\n### Kratos 的方案\n\nKratos 提供了如下的解决方案\n\n- 登陆与注册\n- track sesison/devices\n- MFA/2FA\n- 账户验证\n- 账户恢复\n- Profile & Account Management\n- 管理后台接口 API\n- 消费 OAuth2 and OpenID Connect\n\n## 0x03 Ory Hydra\n\n> You May Not Need It\n\n- Provider OAuth2 and OpenID Connect via https://github.com/ory/hydra\n\n## 0x03 Ory Keto\n\n权限系统一般放在按照产品需求，最好跟着产品走。而不是随随便便提取出来做一个权限系统。\n\n> You May Not Need It\n\n## 0x04 Ory Oathkeeper\n\n同样，如果你不是有做 zero trust\n\n> You May Not Need It\n"},{"tags":["Windows"],"path":"20150222_Chorthotkey发布.md","title":"Chorthotkey 发布","slug":"Chorthotkey 发布","date":"2015-02-22","category":"开源项目","lastMod":"2015-10-25","description":"未描述","thumbnail":"","content":"\n# Chorthotkey 发布\n\n## 0x01 概要介绍\n\n经过长时间的电脑的使用，我渐渐的喜欢上了 Autohotkey 这个神器，喜欢 Python 是因为 Python 强大与高效，喜欢 AHK 则是太方便了。\n\n长时间的使用，毕竟也积攒了一些脚本，加上对很多脚本的收集以及修改，勉强算得上是一个入门的 AHK 菜鸟了。\n\nAHK 的优点可以对快捷键进行编程，对一个经常使用电脑自动化处理一些事情的人说，非常之方便，但缺点，太多，效率低，语法乱，数据结构乱。让我写一段文字处理简直就让我非常难受。\n\n但为了取长补短，我仅仅使用其中的对快捷键编程的功能，加上收集来的别人的一些函数。修改集成，然后做一个顺手的 AHK 脚本，名字就叫做 Chorthotkey。\n\n> 开源，协议选择 Mit 协议。简而言之也就是你改了名字版权就是你的了。\n\n我在编写这篇文章的时候，也在重构并进行 V0.4 版本的完善。\n\n什么时候使用 AHK 脚本呢。\n\n> 当繁杂的功能可以批量完成的时候。\n\n换而言之，当这个功能不值得用另一个大的专业性比较强的软件代替的时候，或者对快捷键进行编程的时候。\n\n- 先说第一点：当我想使用一个功能的时候，比如快速打开一个网页，或者进行文字上的简单处理，这个时候没有必要单独下载一个软件进行处理，这个在 AHK 中就是简单的几行代码就可以搞定。比如打开网站直接 Run www.baidu.com AHK 就会直接调用相关浏览器打开 baidu. 这么简单的东西没有必要单独下载一个软件进行管理。\n- 再说第二点：当我想着对快捷键进行编程调用进行自动化处理东西的时候，或者编写一套自己的热键用来打游戏或者其他的一些编辑用途等等，都可以。理论上来说，AHK 几乎是只有想不到没有做不到的。\n\n那么，AHK 不能替代什么东西？\n\n在文件管理方面，尽管你可以自己编写很多的快捷键，但你没有办法超越 TotalCMD，没有办法超越 Listary 或者 Everything，所以，你编写的东西只需要辅助你使用这些东西就好了。\n\n在文本编辑方面，你始终无法超越 sublime text 3，无法超越 vi，无法超越 Emacs，你只需要辅助你使用这些工具即可。\n\n其他专业软件同理。\n\n既然说了 AHK 那么多的不足和缺憾，但是 AHK 在我的脚本语言中依然傲立第二名，就是因为它擅长的快捷键编程。\n\n好了，废话这么多，总该说点干货了。\n\n我认为 Autohotkey 用好这三个脚本即可：\n\n- Candy 一个非常强大的第三方弹出菜单 amii 编写。\n- ChortHotKey 一个我编写的工具\n- vimd 无所不在的 vim 党编写的软件。\n\n好吧，我无耻的把三个工具放在一起了。虽然 Candy 和 vimdesktop 在使用上面甩 Chorthotkey 几条街，但是，我乐意把他们放在一起，怎么滴？\n\n## 0x02 设计思路\n\nAHK 的操作按照是否聪明分为两种：\n\n1. 第一种叫做非上下文的操作\n2. 第二种叫做上下文操作\n\nAHK 操作按照使用场景分为：\n\n1. 直接操作\n2. 选中操作\n\nAHK 按照操作目标分为\n\n1. 程序类操作\n2. 键盘类操作\n3. 文件类操作\n4. 文本类操作\n5. 命令类操作\n6. 其他操作\n\n选取一个角度对 Chorthotkey 描述 --- 按照操作目标\n\nPS：浏览器建议 chrome\n\n### 1. 程序类 -- 涉及运行程序，或者一些常用的小功能\n\n我的所有程序都是使用配置好的环境变量 D:\\Sysconfig 其中的快捷方式搞定的。比如 win+r 输入 qq 然后回车自动打开 QQ。这个并不使用 AHK。因为没有必要增加大量的热键来增加自己的记忆负担。\n但是使用频率非常高的必须设置快捷键。\n\n程序类快捷键我主要使用的是 Win 按键，AHK 中用 # 来表示\n\n```autohotkey\n #a 到有道官网查找单词翻译，并且保存到桌面上一个文本文档中。\n #b 选中某段文字进行解析，如果里面有网址则访问网址，否则使用百度进行搜索\n #g 选中某段文字进行解析，如果里面有网址则访问网址，否则使用 Google 进行搜索\n #f 打开 everything 进行搜索\n #e 替换原有的资源管理器，打开 TotalCMD\n #q 打开 QQ\n #v open with vim\n #s open with sublime text\n\n官方的操作\n\n #c Windows8 什么鸟菜单\n #x win8 快捷菜单\n #r 运行，比较方便\n #1-9 数字，建议把几个（四个之内，超过四个你的手可能就跟不上操作了）可能有变化的软件放在 pin 在 taskbar 上面。\n```\n\n### 2. 键盘鼠标操作\n\n```bash\nalt+f4 按住左键再按住右键输出\n\nCAPSLOCK 超级导航\nCAPSLOCK 输出 ESC\nSHIFT & CAPSLOCK 调用 Candy\n下面内容属于组合键的另一个按键\nhjkl 前下上右\na 行尾进行编辑\no 下一行进行编辑\n\nn ctrl+delete\nm delete\n, backspace\n. ctrl+backspace\n\n5 打开 coding workspace\n6 打开未整理文件\n7 打开 Onedirve\n8 打开同步文件夹\n9 打开娱乐文件\n0 打开 sysconfig\n```\n\n### 3. 文件类操作\n\n选中的文件夹在 TC 中打开，其余操作全部在 TC 中解决\n由于我使用了 Capslock 的导航功能，这时候的 capslock hjkl 完全可以当作左下上右使用。\nvim+tc，可以使用 vim desktop 进行超级强化。我一直对 TOTALCMD 的快捷键设计抱有不满和一丝丝的畏惧，但是这个软件把 TC 的快捷键常用快捷键精简到了令人发指的地步。\n\n> I love TC plus AHK\n\n### 4. 文本类操作\n\ncandy 操作，保存，发送等等，凡是 Ctrl + c 飘落的地方，就一定会有 candy 的存在（火影忍者既视感）。请在我另一篇 Blog 中看看我是怎么使用 Candy 的。\n\n### 5. 命令类操作\n\n这里面存放的是 AHK 的命令。其实就是使用 ahk 调用 python 脚本执行之类的东西。起到一个胶水的作用。\n\n### 6. 其他操作\n\n热字符串输入其实和代码的 Snippet 比较相近。\n\n```bash\n用的特别频繁的\n//date 20150223\n/dd\n//time 08:52:33\n/tt\n//lastupdate 最后修改时间 2015-02-23 08:52:33\n/ll\n//mail twocucao@gmail.com\n/mm\n//anouncement  声明 lalalalalallalalalallalalalla\n/aa\n\n常用的\n//motto 我挥舞着纸笔和键盘，发誓要把这个世界写个明白。\n\n常用打开 Vim 的文字模板使用\n/hexo  打开 gvim，粘贴进去对应的模板。\n\n比如我输入\n//hexo\n那么就会 Copy 我之前定义的文字，然后存放在我的剪切板中。（时间是动态的）\n接着脚本打开 gvim，你要做的就是把文字粘贴进去就可以进行 HEXO 的编写了。\n\n```\n\n```python\ntitle: 标题\ndate:2015-02-23 10:16:30\ntags: 感悟\ncategory: 『生活，感悟』\n---\n\n正文\n<!-- more -->\n其他\n\n博客文章原创声明：\n本博文章如果没有声明为整理或者转载，均为本人原创。非商业可以任意转载分享。但是编写的代码如果没有特别声明，虽然我建议保留原作者出处，但是代码皆为 mit 协议，也就是修改了名字也算是你的版权，开源世界嘛，我就喜欢那些可以拿来直接使用的东西，贯彻最纯粹的免费自由，但是求求你，改掉名字等等信息再说是版权是你的啊。\n\n![关于本人](http://twocucao.xyz/about/),\n点击链接就可以以 web 幻灯片的方式看到我的介绍。\n\n我的 Github 地址：https://github.com/twocucao  （尽管东西不多，但是欢迎来 Star 和 Fork，就算你们来这里提前 Star Folk 了）\n简书地址：http://www.jianshu.com/users/9a7e0b9da317/latest_articles （不常更新，而且几乎没有技术文章的讲解）\n联系方式：twocucao@gmail.com\n本人才疏学浅，是一个水平比较菜的程序员，如果行文之间发现任何错误，欢迎指正，特别欢迎技术上的指正。\n```\n\n## 0x03 三剑客地址\n\n- Chorthotkey https://github.com/twocucao/ChortHotKey\n- Candy https://github.com/aamii/Candy\n- VimDesktop https://github.com/victorwoo/vimdesktop\n\n如果你想了解关于 ahk 的世界，请到这里来看：\n\n- [善用佳软的 ahk 地址](http://xbeta.info/autohotkey-guide-2.htm)\n- [A 大在知乎的系列专题](http://zhuanlan.zhihu.com/autohotkey)\n- [我的 AUTOHOTKEY 脚本使用我的脚本来上手速度会快很多）](https://github.com/twocucao/ChortHotKey)\n- [AWESOME AUTOHOTKEY_L 这里仅仅是关于 AHKL 的资源。](https://github.com/twocucao/AwesomeAutohotkeyL)\n- [AHK 论坛](http://www.ahk8.com/)\n\n- 欢迎加入 AUTOHOTKEY 的官方群 3222783 这里的大神喜欢解答有挑战性的问题，很多 AHK 的脚本都在这里。\n\n---\n\nChangeLog:\n\n- 2016-11-23 已经于 2015-12 月份转投苹果平台，从此不想念 Windows. 除了 Windows 上面的 Autohotkey / Everything / TotalCMD\n"}],"total":2}},"__N_SSG":true}
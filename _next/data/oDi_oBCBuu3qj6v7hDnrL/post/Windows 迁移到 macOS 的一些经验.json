{"pageProps":{"post":{"tags":["macOS"],"path":"20160201_PC2MAC.md","title":"Windows 迁移到 macOS 的一些经验","slug":"Windows 迁移到 macOS 的一些经验","date":"2016-02-01","category":"善用佳软","lastMod":"2020-01-01","description":"这篇文章展示了基本的 Markdown 语法和格式.","thumbnail":"","content":"<h2 id=\"前言\"><a class=\"v-toc-item\" href=\"#前言\">#</a> 前言</h2>\n<p>我会想念 Windows 上面的一切，但我选择了 Mac。</p>\n<p>从某种程度上讲，我并不是讨厌 Windows。尽管我是一个伪装成、*nix 程序员的技术菜鸟。</p>\n<p>我还记得高一时候家里给我买的第一台二手电脑，那是一台烂到令人发指的破电脑，你可能见过那种俗称大屁股的电脑，512M 内存，64M 显存。我就在那一台机器上打了仙剑三通关和仙剑四的青鸾峰到寿阳城阶段，千佛寺时候家里电脑实在是烂到令人发指，于是电脑就报废了。后来，家里面换了一台电脑，128 显存，内存 2g 的联想杨天电脑。我就在这一台机器上打了仙剑四的寿阳城之后的剧情。</p>\n<!-- more -->\n<p>正如你可以看出来的，我并不讨厌 Windows，甚至某种程度上，我非常喜欢 Windows，正是盗版时代风靡全球的 Windows 才给了我电脑的启蒙。</p>\n<p>喜欢 Windows 的部分原因也是因为穷，只能用盗版（我当年以为是免费，后来才知道这叫做盗版）。就像当我知道仙剑四团队因为我这样只知道免费的盗版人群解散了以后，心痛不已。自此以后，如果经济上可以，我一定会买正版。倒也不是为了买给别人看，这只是代表我对软件开发者的最崇高的敬意。也是弥补我因为无知犯下的错误的愧疚感。</p>\n<p>Windows 对我来说就是启蒙老师。</p>\n<p>但 Windows 的种种环境配置，日常使用和我*inux 的技术栈完全不兼容了。从 XP 到 Vista 再到 7 再到 8 再到 10，这种情况依旧没有发生什么本质的变化。这样的我不得不选择模拟、<em>nix 工具，虚拟机或者双系统。但，模拟的</em>nix 实在太难用，虚拟机里面的系统用起来根本操作根本就不丝滑，双系统一会切换到 Win，一会切换到 Ubuntu 这种情况简直让我非常的抓狂。*nux 的环境又不能不要，可 Win 的桌面软件实在是难以割舍。</p>\n<p>于是，一个切换到 OSX 的想法在我的脑海中不断的浮现。但是正如你所知道的一个很现实的情况：</p>\n<blockquote>\n<p>没钱，也不愿意给父母添麻烦。</p>\n</blockquote>\n<p>但</p>\n<blockquote>\n<p>幽灵，一个想买 MacBook Pro 的想法，像幽灵一样，在脑海中不断的浮现。</p>\n</blockquote>\n<p>直到前几天才攒够足够的钱买了一台二手 mbp 改装一下 SSD。作为丐帮 Mac 第一新人，进入了 MAC 的世界里。</p>\n<p><em>对，我受够了 Windows 里面各种奇葩的问题，也受够了 Ubuntu 等 Linux 系统的糟糕的桌面体验。</em></p>\n<p>对于一个不研究。net 的人来说，Windows 完成了他伟大的启蒙任务。也是时候与你告别了。</p>\n<p>只是人总要和以前的一些人和事情不断的做告别，不是吗？</p>\n<p>以前看过很多比较浅显的讲解，正是那些讲解，让我逐渐入了门，然后我就不得不与他们做告别。</p>\n<p>他们完成了他们伟大的任务，他们的伟大之处永远都在为新手敞开大门，所以，我们成长之后不应该去鄙视那些给你带来进步的事物，而是礼貌的挥挥手向他们告别。</p>\n<h2 id=\"开始迁移\"><a class=\"v-toc-item\" href=\"#开始迁移\">#</a> 开始迁移</h2>\n<p>那么，依照我丰富的 Windows 使用经验来说，我需要解决的问题就是把原有的 Windows 和 Ubuntu 上的东西搬运到我的新电脑上。</p>\n<p>使用电脑 = 软件 + 操作<br>\n学会使用电脑 = 描述问题 + 搜索引擎 + 笔记</p>\n<h3 id=\"0-自带的软件各种-hack\"><a class=\"v-toc-item\" href=\"#0-自带的软件各种-hack\">#</a> 0. 自带的软件各种 Hack</h3>\n<p>其实，自带的软件往往有不可忽略的强大之处。比如，Windows 世界里面的 Win+R 按键。</p>\n<p>目前来说，发现苹果上面自带软件不错的地方如下：</p>\n<ul>\n<li>自带软件，苹果的一些应用，itunes，iphoto，isg 等等。使用这些软件简直就是易如反掌。没什么好说，不错的软件就是 spotlight 了，这个软件非常的强大。可以说是进阶版本的 Windows 上面的搜索 +Win+R。但是然并卵，我们用 alfred2 这个神一样的东西，逐渐就把这基本的软件废弃了。我使用的也就是自带的 finder。</li>\n<li>Mac 上的软件的快捷键可以通过一个叫做 cheatsheet 的的软件进行查看，安装好这个软件，打开一个软件，然后长按 cmd 按键。</li>\n</ul>\n<h4 id=\"00-系统设置调整\"><a class=\"v-toc-item\" href=\"#00-系统设置调整\">#</a> 0.0 系统设置调整</h4>\n<p>从 Win 过来人在一些细节操作上与 Mac 的设计有一些不同。这些可以在系统里面进行设置。</p>\n<p>比如， 鼠标滚轮调整</p>\n<p>preference - mouse - 取消勾选：scroll direction ：natural</p>\n<h4 id=\"01-文件的操作\"><a class=\"v-toc-item\" href=\"#01-文件的操作\">#</a> 0.1 文件的操作</h4>\n<p>windows 里面管理文件的东西叫做 explorer.<br>\nmac 里面叫做 finder.<br>\n二者，图形操作上大致相同。但是结合快捷键的操作就不同了。</p>\n<pre><code># cmd 为 command 按键，通常情况下为所有桌面程序通用性的快捷键。\n# ctrl ，通常情况下是针对程序的功能进行加强，并且此功能往往是非 cmd 类（窗口操作，选择，复制粘贴等等）操作。\n# shift 按键通常用于加强操作。一般会让操作更进一步 or 相反操作。\ncmd+tab =~ alt+tab 程序之间的切换\ncmd+` 应用内窗口切换\n\ncmd+h 窗口 hide\ncmd+m 窗口 minimize\ncmd+n 新建窗口\ncmd+o 打开\ncmd+s 保存\ncmd+shift+s 另存为\ncmd+p 打印 print\ncmd+w 关闭\ncmd+q quit\n\ncmd+a select all\ncmd+i show info\ncmd+n create a new folder\ncmd+f search\ncmd+c copy\ncmd+v paste\ncmd+delete  删除选中文件\ncmd+shift+delete 清空回收站\n\ncmd+= 放大\ncmd+- 缩小\ncmd+t 新建选项卡\ncmd+r 刷新\n\ncmd+shift+3 截取整个屏幕\ncmd+shift+4 截取选择区域\ncmd+shift+4+SPACE 截取选择窗口\ncmd+ 鼠标点击 -&gt; 选中不连续文件\ncontrol+ 鼠标点击 -&gt; 相当于 win 中右键点击\n\nfn+left home\nfn+right end\nfn+up pageup\nfn+down pagedown\n</code></pre>\n<h4 id=\"02-trackpad\"><a class=\"v-toc-item\" href=\"#02-trackpad\">#</a> 0.2 Trackpad</h4>\n<p>到 trackpad 中设置对应鼠标手势</p>\n<ol>\n<li>点击</li>\n</ol>\n<p>单指点击 - 单击<br>\n单指滑动 - 滑动鼠标光标<br>\n双指点击 - 相当于 Windows 的鼠标右键<br>\n三指点击 - 划词查找</p>\n<ol start=\"2\">\n<li>滑动与缩放</li>\n</ol>\n<p>双指上下滑动 - 滚动<br>\n双指缩放 - 与 Android 上图片缩放一致<br>\n双指双击 - 只能缩放<br>\n双指旋转 - 旋转<br>\n双指左右滑动 - 应用内切换网页<br>\n双指头从右往左<br>\n三指头左右滑动 - 全屏幕 App 切换<br>\n大拇指和食中无名缩放 - launchpad</p>\n<h3 id=\"1-日常软件\"><a class=\"v-toc-item\" href=\"#1-日常软件\">#</a> 1. 日常软件</h3>\n<h4 id=\"11-一些满足日常生活的软件\"><a class=\"v-toc-item\" href=\"#11-一些满足日常生活的软件\">#</a> 1.1 一些满足日常生活的软件</h4>\n<p>Alfred - 让你的 spotlight 更上一层楼，程序打开 / 切换、文件搜索、互联网搜索、与其他软件交互的利器。<br>\nweixin，qq - 这是必须的。<br>\nCleanMyMac - 系统清理软件。<br>\n欧陆词典 - 国产词典领域最牛。别说有道词典了好伐。<br>\ncalibre - 电子书必备，下载免费经济学人。<br>\nWiznote - 为知笔记，实在是国产良心之作。可惜，Mac 上面的功能比较少。<br>\nPS，Sketch - P 图必备吧？<br>\nSafari，Chrome+ 大量的插件 - 不多说，Chrome 简直就是我的第二操作系统。那犀利的插件，Get 到痛点的功能，用起来纵享丝滑一般的流畅，都深深的迷住了我。除了吃内存，其他都好。<br>\nPDF reader，ibook - 文档查看必备。<br>\nMS OFFICE，Work 套件：包括 pages, numbers, keynote. 其实 Windows 的生产力之说大抵也就是 Office 系列 VS 系列了，虽然我不喜欢 Office，但是不得不说，Excel 做的真的是世界级的牛。其他，PPT，Word 嘛？反正我不喜欢，奈何别人都用这个。我只好在电脑上安装一份了。<br>\n虚拟机：parallels desktop<br>\n迅雷 本来挺简洁的，最近出来一个商城。哦，看来距离我卸载他的日期已经不多了。<br>\n管理 Android 手机：airdroid 用于管理我的坚果手机。<br>\n写作与编码，Sublime+ 插件，MacVim+ 插件<br>\n邮件：airmail 好简洁，好强大，和 Gmail 简直就是无缝对接嘛。<br>\n思维导图：xmind - 一直在用。依赖 Java 环境。<br>\n解压缩：BetterZip 7z 解压缩 我比较喜欢 7z<br>\n你懂的：shadowsocks 不多说了，看小粉红出墙征战四方寸草不生的优良工具。<br>\n其他系统自带软件</p>\n<h3 id=\"2-开发环境\"><a class=\"v-toc-item\" href=\"#2-开发环境\">#</a> 2. 开发环境</h3>\n<p>ide 类：xcode 和 xcode-cli 工具（用于安装 homebrew 和 homebrew cask）</p>\n<h4 id=\"21-homebrew\"><a class=\"v-toc-item\" href=\"#21-homebrew\">#</a> 2.1 homebrew</h4>\n<p>少什么？homebrew 一下就好。</p>\n<p>如果你想更深一步，那就使用 homebrew cask</p>\n<h4 id=\"22-sublime-text\"><a class=\"v-toc-item\" href=\"#22-sublime-text\">#</a> 2.2 sublime text</h4>\n<p>sublime text 作为我很长一段时间的主力编辑器，优点如下：</p>\n<ul>\n<li>快，打开文件比较快。当然，比 notepad++ 要慢</li>\n<li>多光标编辑。</li>\n<li>强大的插件库</li>\n</ul>\n<p>对，加上第三点，sublime 成为了编辑器世界的女神级别人物。哎，想起我对别人大力推荐这个编辑器别人还是一如既往的使用 npp，实在是糟心。</p>\n<p>插件库里面的主题我比较喜欢 sodarized<br>\n喜欢的功能性插件为 pretty 系插件，比如，对 json,html,js.css 进行一键格式化。哦，简直帅爆了。<br>\n当然其他能留下深刻印象的就是 lint 系列插件和部分对编辑器的侧边栏，右键菜单，以及对应语言的库进行补充的插件了。</p>\n<p>现在继续使用这一款软件的原因也是如此。</p>\n<h4 id=\"23-macvim-spf13-vim\"><a class=\"v-toc-item\" href=\"#23-macvim-spf13-vim\">#</a> 2.3 macvim + spf13-vim</h4>\n<p>我对计算机上古时代的前辈们总是有很崇高的敬意。这在我是用来了 Vim 以后才逐渐有这种想法。</p>\n<p>对，Vim 真的很神奇。但是 Vim 是我见过的为数不多的使用难度超越了我认识到的所有软件的软件。之前排名在 top 1 的应该是 Windows 上面的 Totalcmd。</p>\n<p>出于 Vim 及其陡峭的学习路径，我认为 Vim 本身适合可以盲打，并且是键盘流爱好者的情况下再学习。否则，学习效率会极其的低下。为什么我知道？一把辛酸泪。</p>\n<p>在这个时代，最宝贵的就是有用的信息，对，我遇到了 SPF13Vim 这个已经配置好的 VIm 版本。并且从中学习到了一些奇技淫巧。</p>\n<p>现在基本上是离不开 Vim 了。甚至面对没有 Vim 类型操作的编辑器或者浏览器的时候，简直无法忍受。</p>\n<p>尽管现在我还是一个 Vim 菜鸟。有机会我会整理好自己的 Vim 配置，放在 github 上面。</p>\n<p>Vim 使用一定要改按键！！！</p>\n<p>CapsLock 按键没有什么用，改成 Escape 按键或者改成 Ctrl 按键，推荐改成 Ctrl，因为 ESC 除了 Vim 里面使用的比较少，但是使用 Ctrl 的场景就比较多了（Vim 中 ESC 可以使用 Ctrl+\\『代替，而且不需要使用第三方工具），这样让小拇指很舒服。</p>\n<h4 id=\"24-chrome\"><a class=\"v-toc-item\" href=\"#24-chrome\">#</a> 2.4 Chrome</h4>\n<p>由于一些众所周知，或者你不知道我也懒得告诉你的原因。我们比较信赖国外的好的产品。</p>\n<p>Chrome 就是这样的产品。</p>\n<p>我以前的文章也写过，只是由于硬盘发生了一次数据丢失事件，关于 chrome 的笔记都已经丢掉了，我就再也没有写过 chrome 的那些牛的要死的功能。</p>\n<p>但是我还是要推荐一些我喜欢的插件。</p>\n<p>adblock - 去广告标准配置了吧<br>\nautoPatchWork - 自动拼接下一页到本页<br>\ncapture，explain and send screenshots - 截图<br>\ncssviewer - 查看 css 的工具<br>\nDream Afar New Tab - 美化新标签页面必备<br>\njson editor - 格式化 json 专用<br>\nisometric contribution - 其实也就是美化 github 上面提交的工具<br>\nOne Click extensions Manager - 由于 chrome 的标签数量惊人，所以有的时候为了提升速度还是禁用掉一些比较好。<br>\nPocket - read it later PS：虽然我自从用了为知笔记以后就不用 pocket 了。但 pocket 真的值得一用<br>\nVimium - 快速浏览网页的神器<br>\nWeb Timer - 记录花在每个站点的时间。<br>\nWiznote WebCliper - Pocket 的替代品<br>\nOctotree - 如果你玩 github 没装这个插件，是时候使用这个插件然后感叹时光一去永不回了。<br>\nSwitchyOMega - 你懂得</p>\n<h4 id=\"25-lang-环境\"><a class=\"v-toc-item\" href=\"#25-lang-环境\">#</a> 2.5 Lang 环境</h4>\n<p>Lang 环境，顾名思义，就是各种语言的环境。</p>\n<p>我们程序员需要懂和计算机交流的本事，所以，我们需要学很多的语言。但，问题也就因此而来。选择什么样的软件来管理不同的软件环境呢？如果是 Ruby 环境，我们又怎么配置 Ruby 不同版本呢？</p>\n<p>计算机世界的铁律：</p>\n<blockquote>\n<p>只要有树叶飞舞的地方，火就会燃烧</p>\n</blockquote>\n<p>额，等等，说串场了</p>\n<blockquote>\n<p>只要有痛点，就有解决痛点的工具。</p>\n</blockquote>\n<p>Java 这个需要切换版本的要求比较低。无所谓。何况，已经很久没有写 Java 了。 我一般情况下使用的是 Java8<br>\nrvm ruby 社区的人都喜欢使用最新最潮的技术，所以，切换版本这种事情必须要做，rbenv 和 rvm 都是非常有用 ruby 版本管理器。我喜欢 rvm。<br>\nnvm nodejs 比较火，虽然我对 nodejs 并不是很感冒，但是我不得不承认，有些人写出来的 nodejs 工具实在是方便的要死。比如，gitbook-cli，hexo-cli，二者都是记录自己的笔记的好东西。<br>\nLang 对于 Python，我选择了 anaconda，anaconda 为特殊的 Python 分发包。里面的库比较全面，不需要我特地为一个包找教程来安装。</p>\n<h4 id=\"26-终端\"><a class=\"v-toc-item\" href=\"#26-终端\">#</a> 2.6 终端</h4>\n<p>首先，我们对终端的认识可能还停留在 unix 机器或者 ubuntu 桌面进不了的时代。Mac 上面 iterm2 作为一个终端模拟器，则是做到了同类中的最强者。好用到想让人哭。</p>\n<p>shell 一般情况下使用的 bash，但是那是对运维人员来说的，我们开发者使用的是 zsh。配置 zsh 的文件使用是 OhMyZsh.</p>\n<p>好用到想哭。</p>\n<h2 id=\"结束语\"><a class=\"v-toc-item\" href=\"#结束语\">#</a> 结束语</h2>\n<p>从我的角度来看 Win 和 Mac 的好于不好</p>\n<p>Win 的好在于系统优良的兼容性，以及入门就可以上手的强大的操作性。由于出自于什么都爱做的微软公司，从整体来说，VS，.NET, 游戏性，兼容性，性能，新手上手速度来说，都是遥遥领先 Mac 的。<br>\n也可惜了，微软的战线实在是拉的太长，什么都想做，什么都想垄断。于是，与之服务密切相关的公司也就受到了 MS 的牵制。这对大公司来说，几乎是不能够忍受的行为。于是硅谷的公司使用微软服务的也就接近 5%（可能有误差）。并且，糟糕的终端环境（DOS）和无法与、*nux 世界的脚本友好相处使得系统的可定制性和进阶操作性大大降低。<br>\n虽然有 Everything，TotalCMD，AHK 这种神级辅助工具可以满足定制要求。但由于过高的学习成本（AHK 语言真的很混乱啊，TC 实在是太难用了）但也无法满足、*nux 程序员的要求。这就是我不得不切换到 Mac 上面的理由。</p>\n<p>Mac 的好在于终端和美观的图形的结合。也就是开发基于、*nux 应用的非常方便以及非常容易与脚本文件配合出强大的组合技能，反观 Win 上，则这种组合技能则在环境配置上和操作流畅度上差了很多。<br>\n缺点也是相当容易看出来的 – 娱乐项目实在是少的要死。再者说，我们也不需要娱乐性那么强的软件，不是么？</p>\n<p>哦，终于集齐了 PC，Linux，Mac 的配置文章</p>\n<p><a href=\"https://www.zhihu.com/question/30816866/answer/59415036\">关于 Ubuntu 我的回答</a></p>\n<p><a href=\"https://www.zhihu.com/question/32129337/answer/59379401\">关于 Win10 我的回答</a></p>\n<p>就酱紫。</p>\n<h2 id=\"更新\"><a class=\"v-toc-item\" href=\"#更新\">#</a> 更新</h2>\n<ul>\n<li>2016-02-03 : 更新 Trackpad 部分，修改部分文字</li>\n<li>2016-02-07 : 重写快捷键部分，将快捷键按照程序划分。</li>\n<li>2017-04-01 : 重写碎碎念部分。</li>\n<li>2017-05-01 : 已经更换最新款 Macbook Pro, 算是实现了一个小目标吧。</li>\n</ul>\n","toc":"<ul class=\"v-article-toc\">\n<li>\n<ul>\n<li><a href=\"#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li><a href=\"#%E5%BC%80%E5%A7%8B%E8%BF%81%E7%A7%BB\">开始迁移</a>\n<ul>\n<li><a href=\"#0-%E8%87%AA%E5%B8%A6%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%90%84%E7%A7%8D-hack\">0. 自带的软件各种 Hack</a>\n<ul>\n<li><a href=\"#00-%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE%E8%B0%83%E6%95%B4\">0.0 系统设置调整</a></li>\n<li><a href=\"#01-%E6%96%87%E4%BB%B6%E7%9A%84%E6%93%8D%E4%BD%9C\">0.1 文件的操作</a></li>\n<li><a href=\"#02-trackpad\">0.2 Trackpad</a></li>\n</ul>\n</li>\n<li><a href=\"#1-%E6%97%A5%E5%B8%B8%E8%BD%AF%E4%BB%B6\">1. 日常软件</a>\n<ul>\n<li><a href=\"#11-%E4%B8%80%E4%BA%9B%E6%BB%A1%E8%B6%B3%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB%E7%9A%84%E8%BD%AF%E4%BB%B6\">1.1 一些满足日常生活的软件</a></li>\n</ul>\n</li>\n<li><a href=\"#2-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\">2. 开发环境</a>\n<ul>\n<li><a href=\"#21-homebrew\">2.1 homebrew</a></li>\n<li><a href=\"#22-sublime-text\">2.2 sublime text</a></li>\n<li><a href=\"#23-macvim-spf13-vim\">2.3 macvim + spf13-vim</a></li>\n<li><a href=\"#24-chrome\">2.4 Chrome</a></li>\n<li><a href=\"#25-lang-%E7%8E%AF%E5%A2%83\">2.5 Lang 环境</a></li>\n<li><a href=\"#26-%E7%BB%88%E7%AB%AF\">2.6 终端</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E7%BB%93%E6%9D%9F%E8%AF%AD\">结束语</a></li>\n<li><a href=\"#%E6%9B%B4%E6%96%B0\">更新</a></li>\n</ul>\n</li>\n</ul>\n"}},"__N_SSG":true}
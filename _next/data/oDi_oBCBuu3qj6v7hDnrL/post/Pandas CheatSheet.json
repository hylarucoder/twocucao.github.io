{"pageProps":{"post":{"tags":["数据分析"],"path":"20170603_PandasCheatSheet.md","title":"Pandas CheatSheet","slug":"Pandas CheatSheet","date":"2017-06-03","category":"Python","lastMod":"2020-01-01","description":"这篇文章展示了基本的 Markdown 语法和格式.","thumbnail":"","content":"<h2 id=\"0x00-前言\"><a class=\"v-toc-item\" href=\"#0x00-前言\">#</a> 0x00 前言</h2>\n<p>本文为 Cheatsheet 类型文章，用于记录我在日常编程中经常使用的 Pandas 相关语句。</p>\n<p>主要包含：</p>\n<ul>\n<li>Pandas 中 Series 的一些常见操作和技巧</li>\n<li>Pandas 中 Dateframe 的一些常见操作和技巧</li>\n<li>Python 里的可视化技巧</li>\n<li>Pandas 使用过程中的一些细节</li>\n</ul>\n<p>不定期更新。</p>\n<!-- more -->\n<blockquote>\n<p>SQL 是一种面向集合的处理工具 / 语言<br>\nPandas 是一种面向数组的处理工具</p>\n</blockquote>\n<blockquote>\n<p><strong>而一般处理 pandas 的数据往往以二维表的形式存在。所以，可以类比为更加强大的 SQL 语言。</strong></p>\n</blockquote>\n<p>而依据 Pandas 的作者之言，牛逼的 Pandas 使用者必须要精通 numpy; 当然，关于 Numpy, 留待之后开一篇文章做笔记好了。</p>\n<h2 id=\"0x01-series-相关\"><a class=\"v-toc-item\" href=\"#0x01-series-相关\">#</a> 0x01 Series 相关</h2>\n<p>Series 接近于 ndarray 的用法，区别仅仅在于会带上 label 而已</p>\n<blockquote>\n<p>关于 ndarray, 请参考 我的另一篇文章 Numpy Cheatsheet</p>\n</blockquote>\n<h2 id=\"0x02-dataframe-相关\"><a class=\"v-toc-item\" href=\"#0x02-dataframe-相关\">#</a> 0x02 DataFrame 相关</h2>\n<h3 id=\"21-对象创建\"><a class=\"v-toc-item\" href=\"#21-对象创建\">#</a> 2.1 对象创建</h3>\n<pre><code class=\"language-python\">\n# <span class=\"token number\">1.</span> 内存变量转 Dataframe\n## <span class=\"token number\">1.1</span><span class=\"token punctuation\">.</span> 通过二位矩阵 <span class=\"token punctuation\">,</span> index <span class=\"token punctuation\">,</span> columns\ndates <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span><span class=\"token function\">date_range</span><span class=\"token punctuation\">(</span><span class=\"token string\">'20130101'</span><span class=\"token punctuation\">,</span> periods<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\npd <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span><span class=\"token function\">DataFrame</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span><span class=\"token function\">randn</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>dates<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ABCD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n## <span class=\"token number\">1.2</span><span class=\"token punctuation\">.</span> 通过字典 Key 为 Column <span class=\"token punctuation\">,</span> Value 为 list<span class=\"token punctuation\">,</span>timestamp<span class=\"token punctuation\">,</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">,</span>value\ndf2 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span><span class=\"token function\">DataFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'A'</span> <span class=\"token operator\">:</span> <span class=\"token number\">1.</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token string\">'B'</span> <span class=\"token operator\">:</span> pd<span class=\"token punctuation\">.</span><span class=\"token function\">Timestamp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'20130102'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token string\">'C'</span> <span class=\"token operator\">:</span> pd<span class=\"token punctuation\">.</span><span class=\"token function\">Series</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>index<span class=\"token operator\">=</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>dtype<span class=\"token operator\">=</span><span class=\"token string\">'float32'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token string\">'D'</span> <span class=\"token operator\">:</span> np<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>dtype<span class=\"token operator\">=</span><span class=\"token string\">'int32'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token string\">'E'</span> <span class=\"token operator\">:</span> pd<span class=\"token punctuation\">.</span><span class=\"token function\">Categorical</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"train\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"train\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token string\">'F'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'foo'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n# 长度无需统一，会自动填充\n\n# <span class=\"token number\">2.</span> 从文件中读取\npd<span class=\"token punctuation\">.</span><span class=\"token function\">read_excel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./data_set.xlsx\"</span><span class=\"token punctuation\">,</span>index_col<span class=\"token operator\">=</span>False<span class=\"token punctuation\">)</span> # 关掉 Index\n\n# <span class=\"token number\">3.</span> 合并多个同样的 DataFrame\ndf_items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>df_item1<span class=\"token punctuation\">,</span>df_item2<span class=\"token punctuation\">,</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>df_items<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drop_duplicates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>data_set_df<span class=\"token punctuation\">,</span> left_on<span class=\"token operator\">=</span><span class=\"token string\">\"lno\"</span><span class=\"token punctuation\">,</span> right_on<span class=\"token operator\">=</span><span class=\"token string\">\"rno\"</span><span class=\"token punctuation\">,</span> how<span class=\"token operator\">=</span><span class=\"token string\">\"outer\"</span><span class=\"token punctuation\">)</span>\n\n# <span class=\"token number\">4.</span>series to dataframe\ndf <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">to_frame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>选择数据<br>\nGetting<br>\nSelection by Label<br>\nSelection by Position<br>\nBoolean Indexing<br>\nSetting<br>\n缺失数据<br>\n数据操作<br>\nOperations<br>\nStats<br>\nApply<br>\nHistogramming<br>\nString Methods<br>\n数据合并<br>\nConcat<br>\nJoin<br>\nAppend<br>\nGrouping<br>\nReshaping<br>\nStack<br>\nPivot Tables<br>\nTime Series<br>\nCategoricals<br>\nPlotting</p>\n<h3 id=\"22-浏览数据\"><a class=\"v-toc-item\" href=\"#22-浏览数据\">#</a> 2.2 浏览数据</h3>\n<pre><code class=\"language-python\"># <span class=\"token number\">1.</span> 查看表结构\n\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">tail</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span>index\n# df<span class=\"token punctuation\">.</span>index <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'日期'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'小时'</span><span class=\"token punctuation\">]</span>\ndf<span class=\"token punctuation\">.</span>columns\ndf<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> <span class=\"token function\">map</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span>\n\ndf<span class=\"token punctuation\">.</span>values\n\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'col'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'col'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">astype</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">convert_objects</span><span class=\"token punctuation\">(</span>convert_numeric<span class=\"token operator\">=</span>True<span class=\"token punctuation\">)</span>\n\n# <span class=\"token number\">2.</span> 删除 col_name\n\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">drop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'col_name_1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'col_name_2'</span><span class=\"token punctuation\">,</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span><span class=\"token string\">'col_name_N'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>inplace<span class=\"token operator\">=</span>True<span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>errors<span class=\"token operator\">=</span><span class=\"token string\">'ignore'</span><span class=\"token punctuation\">)</span>\n\ndel df<span class=\"token punctuation\">[</span><span class=\"token string\">'cola'</span><span class=\"token punctuation\">]</span>\n\n# <span class=\"token number\">3.</span> 修改元数据\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span>lambda x<span class=\"token operator\">:</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span>True<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'oldName1'</span><span class=\"token operator\">:</span> <span class=\"token string\">'newName1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oldName2'</span><span class=\"token operator\">:</span> <span class=\"token string\">'newName2'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span>True<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span>columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token string\">'cola'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token string\">'colb'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> <span class=\"token string\">'colc'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span>True<span class=\"token punctuation\">)</span>\n\n# <span class=\"token number\">2.</span>\n## <span class=\"token number\">2.</span> 遍历\n<span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> row <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span><span class=\"token function\">iterrows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    print row<span class=\"token punctuation\">[</span><span class=\"token string\">\"c1\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">[</span><span class=\"token string\">\"c2\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span><span class=\"token function\">itertuples</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span>True<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'Pandas'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    print <span class=\"token function\">getattr</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token string\">\"c1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getattr</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token string\">\"c2\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token constant\">IF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>@price<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"未知\"</span><span class=\"token punctuation\">,</span><span class=\"token constant\">IF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>@price<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">30000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"三万以下\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">IF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>@price<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">50000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"三万到五万\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">IF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>@price<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"五万到十万\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">IF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>@price<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10000000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"十万以上\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"其他\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"23-修改表内容\"><a class=\"v-toc-item\" href=\"#23-修改表内容\">#</a> 2.3 修改表内容</h3>\n<pre><code class=\"language-python\">df<span class=\"token punctuation\">.</span><span class=\"token function\">drop_duplicates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'col_a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'col_b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"24-查看表内容\"><a class=\"v-toc-item\" href=\"#24-查看表内容\">#</a> 2.4 查看表内容</h3>\n<pre><code class=\"language-python\"># 选择\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">]</span> # 列选\ndf<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token operator\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span> # 行选\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'20130102'</span><span class=\"token operator\">:</span><span class=\"token string\">'20130104'</span><span class=\"token punctuation\">]</span> # 行选\ndf<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token string\">'20130102'</span><span class=\"token operator\">:</span><span class=\"token string\">'20130104'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> # by label\ndf<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>condition<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">'cola'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'colb'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\ndf<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'ri01'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ri02'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"cola\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"colb\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"colc\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\ndf<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> # by position\ndf<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> # 全部列，<span class=\"token number\">0</span><span class=\"token operator\">-</span><span class=\"token number\">7</span> 索引\n\ndf<span class=\"token punctuation\">.</span>ix<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'ri02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ri09'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> # 选取行\n\ntotal_rows<span class=\"token operator\">=</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ntotal_cols<span class=\"token operator\">=</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">sample</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span> # 随机抽取 <span class=\"token number\">3000</span> 行，可以用于快速验证算法\n\ncriterion <span class=\"token operator\">=</span> df2<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>lambda x<span class=\"token operator\">:</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">startswith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndf2<span class=\"token punctuation\">[</span>criterion<span class=\"token punctuation\">]</span>\n\ndf2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">startswith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> df2<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n# select <span class=\"token operator\">*</span> from df limit <span class=\"token number\">5</span>\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n# select a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c from df\ndf<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n# select a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c from df where a <span class=\"token operator\">=</span> <span class=\"token number\">11</span> and b <span class=\"token operator\">=</span> <span class=\"token string\">'xx'</span>\ndf<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'xx'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">value_counts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n# <span class=\"token constant\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token constant\">FROM</span> df <span class=\"token constant\">ORDER</span> <span class=\"token constant\">BY</span> a <span class=\"token constant\">DESC</span> <span class=\"token constant\">LIMIT</span> <span class=\"token number\">10</span> <span class=\"token constant\">OFFSET</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">nlargest</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">tail</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\ndf<span class=\"token punctuation\">.</span>column<span class=\"token punctuation\">.</span>str<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\ndf<span class=\"token punctuation\">.</span>column_name<span class=\"token punctuation\">.</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntwo_groups <span class=\"token operator\">=</span> <span class=\"token string\">'(?P&lt;letter>[a-z])(?P&lt;digit>[0-9])'</span>\ns<span class=\"token punctuation\">.</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span>two_groups<span class=\"token punctuation\">,</span> expand<span class=\"token operator\">=</span>True<span class=\"token punctuation\">)</span>\n\n# 排序\n\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">sort_index</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span>False<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">sort_values</span><span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span>\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'col1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'col2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'col3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>ascending<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n#\n\n# window <span class=\"token keyword\">function</span>\n# <span class=\"token constant\">SELECT</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> <span class=\"token function\">rank</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">PARTITION</span> <span class=\"token constant\">BY</span> a <span class=\"token constant\">ORDER</span> <span class=\"token constant\">BY</span> b <span class=\"token constant\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> rn <span class=\"token constant\">FROM</span> df<span class=\"token punctuation\">;</span>\n# 如果没有这个 window <span class=\"token keyword\">function</span> 的话，可以 groupby 一下，然后生成表和原有表进行 <span class=\"token constant\">JOIN</span>\ntips<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>rn<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">.</span><span class=\"token function\">sort_values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span>False<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">groupby</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">cumcount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n# Top <span class=\"token constant\">N</span> rows per group\n# rank 代表等级 如果两人并列第一名，则不存在第二名，直接是第三名 <span class=\"token punctuation\">,</span> row_number 代表排名，即即便两个人分数一样，也无法并列第一名\n\n# PostGRESQL's <span class=\"token constant\">ROW_NUMBER</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> analytic <span class=\"token keyword\">function</span>\n<span class=\"token constant\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token constant\">FROM</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token constant\">SELECT</span>\n    t<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">ROW_NUMBER</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PARTITION</span> <span class=\"token constant\">BY</span> day <span class=\"token constant\">ORDER</span> <span class=\"token constant\">BY</span> total_bill <span class=\"token constant\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">AS</span> rn\n  <span class=\"token constant\">FROM</span> tips t\n<span class=\"token punctuation\">)</span> tt\n<span class=\"token constant\">WHERE</span> rn <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span>\n<span class=\"token constant\">ORDER</span> <span class=\"token constant\">BY</span> day<span class=\"token punctuation\">,</span> rn<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>tips<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>rn<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">.</span><span class=\"token function\">sort_values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'total_bill'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span>False<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">groupby</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'day'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">cumcount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rn &lt; 3'</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">sort_values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'day'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rn'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span>tips<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>rnk<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">.</span><span class=\"token function\">groupby</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'day'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'total_bill'</span><span class=\"token punctuation\">]</span>\n                     <span class=\"token punctuation\">.</span><span class=\"token function\">rank</span><span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span><span class=\"token string\">'first'</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span>False<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rnk &lt; 3'</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">sort_values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'day'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rnk'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\n# PostGRESQL's <span class=\"token constant\">RANK</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> analytic <span class=\"token keyword\">function</span>\n<span class=\"token constant\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token constant\">FROM</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token constant\">SELECT</span>\n    t<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">RANK</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PARTITION</span> <span class=\"token constant\">BY</span> sex <span class=\"token constant\">ORDER</span> <span class=\"token constant\">BY</span> tip<span class=\"token punctuation\">)</span> <span class=\"token constant\">AS</span> rnk\n  <span class=\"token constant\">FROM</span> tips t\n  <span class=\"token constant\">WHERE</span> tip <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token constant\">WHERE</span> rnk <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span>\n<span class=\"token constant\">ORDER</span> <span class=\"token constant\">BY</span> sex<span class=\"token punctuation\">,</span> rnk<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>tips<span class=\"token punctuation\">[</span>tips<span class=\"token punctuation\">[</span><span class=\"token string\">'tip'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>rnk_min<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">.</span><span class=\"token function\">groupby</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'sex'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'tip'</span><span class=\"token punctuation\">]</span>\n                         <span class=\"token punctuation\">.</span><span class=\"token function\">rank</span><span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span><span class=\"token string\">'min'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rnk_min &lt; 3'</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">.</span><span class=\"token function\">sort_values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'sex'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rnk_min'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\n# where 语句\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">isnull</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">isin</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n\n# groupby\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">groupby</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> # 计算 a\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">groupby</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> # 同上计算 a\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">groupby</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> # 计算所有 cols\nagg_fun_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'tip'</span><span class=\"token operator\">:</span> np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">,</span> <span class=\"token string\">'day'</span><span class=\"token operator\">:</span> np<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">}</span>\nagg_fun_dict_new <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'tip'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">groupby</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">agg</span><span class=\"token punctuation\">(</span>agg_fun_dict<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">groupby</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">.</span><span class=\"token function\">agg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'min'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'max'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">applymap</span><span class=\"token punctuation\">(</span>multiply_10_for_every_int<span class=\"token punctuation\">)</span> #\n\ncalc_groups <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span><span class=\"token function\">groupby</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>date<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ncalc_groups<span class=\"token punctuation\">[</span><span class=\"token string\">'id_aa'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">nunique</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reset_index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_excel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123.xlsx\"</span><span class=\"token punctuation\">)</span>\n\n# pivot\npd<span class=\"token punctuation\">.</span><span class=\"token function\">pivot_table</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>df<span class=\"token punctuation\">,</span>values<span class=\"token operator\">=</span><span class=\"token string\">'value_col'</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token string\">'A_FROM'</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token string\">'B_TO'</span><span class=\"token punctuation\">,</span> aggfunc<span class=\"token operator\">=</span>lambda x<span class=\"token operator\">:</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">unique</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>margins<span class=\"token operator\">=</span>True<span class=\"token punctuation\">)</span>\n\n# <span class=\"token constant\">CONCAT</span>\nappend\n# <span class=\"token constant\">JOIN</span>\npd<span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">,</span> df2<span class=\"token punctuation\">,</span> on<span class=\"token operator\">=</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> how<span class=\"token operator\">=</span><span class=\"token string\">'outer'</span><span class=\"token punctuation\">)</span>\n\n# <span class=\"token constant\">UPDATE</span> tips <span class=\"token constant\">SET</span> tip <span class=\"token operator\">=</span> tip<span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token constant\">WHERE</span> tip <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\ntips<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>tips<span class=\"token punctuation\">[</span><span class=\"token string\">'tip'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tip'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*=</span> <span class=\"token number\">2</span>\n\n# <span class=\"token constant\">TODO</span><span class=\"token operator\">:</span>\n</code></pre>\n<h3 id=\"25-表变换\"><a class=\"v-toc-item\" href=\"#25-表变换\">#</a> 2.5 表变换</h3>\n<pre><code class=\"language-python\"># apply <span class=\"token punctuation\">,</span> apply map\nDataFrame<span class=\"token punctuation\">.</span>apply operates on entire rows or columns at a time<span class=\"token punctuation\">.</span>\nDataFrame<span class=\"token punctuation\">.</span>applymap<span class=\"token punctuation\">,</span> Series<span class=\"token punctuation\">.</span>apply<span class=\"token punctuation\">,</span> and Series<span class=\"token punctuation\">.</span>map operate on one element at time<span class=\"token punctuation\">.</span>\n</code></pre>\n<h3 id=\"26-表遍历\"><a class=\"v-toc-item\" href=\"#26-表遍历\">#</a> 2.6 表遍历</h3>\n<pre><code class=\"language-python\">df<span class=\"token punctuation\">.</span><span class=\"token function\">iterrows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">itertuples</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"数据导入导出\"><a class=\"v-toc-item\" href=\"#数据导入导出\">#</a> 数据导入导出</h2>\n<h3 id=\"sql\"><a class=\"v-toc-item\" href=\"#sql\">#</a> SQL</h3>\n<pre><code class=\"language-python\">from sqlalchemy <span class=\"token keyword\">import</span> create_engine\nfrom sqlalchemy<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>url <span class=\"token keyword\">import</span> <span class=\"token constant\">URL</span>\n<span class=\"token constant\">DATABASE</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'drivername'</span><span class=\"token operator\">:</span> <span class=\"token string\">'postgres'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'host'</span><span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'port'</span><span class=\"token operator\">:</span> <span class=\"token string\">'5432'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'username'</span><span class=\"token operator\">:</span> <span class=\"token string\">'yourusername'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'password'</span><span class=\"token operator\">:</span> <span class=\"token string\">'yourpass'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'database'</span><span class=\"token operator\">:</span> <span class=\"token string\">'yourdb'</span>\n<span class=\"token punctuation\">}</span>\n# 这里并不建议直接写数据库连接字符串，而是使用 <span class=\"token constant\">URL</span> 函数，这样可以避免转义字符带来的坑，比如 @ 在数据库连接字符串是 <span class=\"token operator\">%</span><span class=\"token number\">40</span>\nengine <span class=\"token operator\">=</span> <span class=\"token function\">create_engine</span><span class=\"token punctuation\">(</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">(</span><span class=\"token operator\">**</span><span class=\"token constant\">DATABASE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n# 读一整张表\n<span class=\"token keyword\">with</span> engine<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> conn<span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span><span class=\"token function\">read_sql_table</span><span class=\"token punctuation\">(</span><span class=\"token string\">'yourtablehere'</span><span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">processyourdata</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n# 按照 <span class=\"token constant\">SQL</span> 语句来读\n<span class=\"token keyword\">with</span> engine<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> conn<span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span><span class=\"token function\">read_sql</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span>\"\n    yoursqlquery\n    <span class=\"token string\">\"\"</span>\"<span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">processyourdata</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"csv\"><a class=\"v-toc-item\" href=\"#csv\">#</a> CSV</h3>\n<p>日常数据处理用 CSV 的比较多，因为这种格式语法简洁，类二维表，读写速度快，而且配合 gzip 压缩解压。</p>\n<p>pandas 在 windows 上好像不能读取中文路径？</p>\n<p>而且，pandas 读取的时候要注意指定编码。因为在日常导出 CSV 的时往往使用的是 utf-8, 而 windows 默认打开文本文件时候使用的是 gbk</p>\n<p>read_csv 有几十个参数，挑几个说一下：</p>\n<ul>\n<li>sep 可以指定分隔符，默认为’,', 但有的人导出的数据以 tab 为空格。</li>\n<li>dtype 可以指定某些列的值类型为 int,float 的类型从而减少 object 的创建 , 但是对 str/object 没有什么暖用</li>\n<li>parse_dates 可以指定 date 列</li>\n<li>header 如果 CSV 没有 Header, 可以指定为 None</li>\n<li>usecols 可以指定几列，相当于数据库中的 SELECT a_col,b_col</li>\n</ul>\n<p>其中还有一些比较有趣的东西，比如说，iterator=True<br>\n值得注意的是，通过</p>\n<h3 id=\"excel\"><a class=\"v-toc-item\" href=\"#excel\">#</a> Excel</h3>\n<p>Gotchas</p>\n<h2 id=\"0x02-可视化技术\"><a class=\"v-toc-item\" href=\"#0x02-可视化技术\">#</a> 0x02 可视化技术</h2>\n<pre><code class=\"language-python\"># 绘制\ndf<span class=\"token punctuation\">.</span><span class=\"token function\">plot</span><span class=\"token punctuation\">(</span>kind<span class=\"token operator\">=</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">)</span>\n\nplt<span class=\"token punctuation\">.</span><span class=\"token function\">xlabel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xlable'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span><span class=\"token function\">ylabel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ylable'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span><span class=\"token function\">title</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title name'</span><span class=\"token punctuation\">)</span>\n\nplt<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'数量'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">plot</span><span class=\"token punctuation\">(</span>kind<span class=\"token operator\">=</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">)</span>\n\n# 批量创建图\ng <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span><span class=\"token function\">FacetGrid</span><span class=\"token punctuation\">(</span>customers<span class=\"token punctuation\">,</span> col<span class=\"token operator\">=</span><span class=\"token string\">\"cola\"</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">,</span> <span class=\"token string\">\"数量\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"单位\"</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span><span class=\"token function\">add_legend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nttbill <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span><span class=\"token function\">distplot</span><span class=\"token punctuation\">(</span>tips<span class=\"token punctuation\">[</span><span class=\"token string\">\"总价格\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nttbill<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>xlabel <span class=\"token operator\">=</span> <span class=\"token string\">'价值'</span><span class=\"token punctuation\">,</span> ylabel <span class=\"token operator\">=</span> <span class=\"token string\">'频率'</span><span class=\"token punctuation\">,</span> title <span class=\"token operator\">=</span> <span class=\"token string\">\"标题名\"</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span><span class=\"token function\">despine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nsns<span class=\"token punctuation\">.</span><span class=\"token function\">jointplot</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span> data <span class=\"token operator\">=</span> tips<span class=\"token punctuation\">)</span>\n# https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>guipsamora<span class=\"token operator\">/</span>pandas_exercises<span class=\"token operator\">/</span>blob<span class=\"token operator\">/</span>master<span class=\"token operator\">/</span><span class=\"token number\">07</span>_Visualization<span class=\"token operator\">/</span>Tips<span class=\"token operator\">/</span>Exercises_with_code_and_solutions<span class=\"token punctuation\">.</span>ipynb\n\nplt<span class=\"token punctuation\">.</span><span class=\"token function\">pie</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    labels <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'女'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    shadow <span class=\"token operator\">=</span> False<span class=\"token punctuation\">,</span>\n    colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    explode <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.15</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    startangle <span class=\"token operator\">=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span>\n    autopct <span class=\"token operator\">=</span> <span class=\"token string\">'%1.1f%%'</span>\n    <span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span><span class=\"token function\">axis</span><span class=\"token punctuation\">(</span><span class=\"token string\">'equal'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span><span class=\"token function\">title</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"男女比例\"</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span><span class=\"token function\">tight_layout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"0x03-asd1\"><a class=\"v-toc-item\" href=\"#0x03-asd1\">#</a> 0x03 asd1</h2>\n<h2 id=\"0x07-performance-tips\"><a class=\"v-toc-item\" href=\"#0x07-performance-tips\">#</a> 0x07 Performance Tips</h2>\n<p>最近遇到了数据量比较大的数据处理，数据条数差不多在 3 千万条。加载到内存中大约 1GB.</p>\n<h3 id=\"71-精简行列\"><a class=\"v-toc-item\" href=\"#71-精简行列\">#</a> 7.1 精简行列</h3>\n<ol>\n<li>读入 dataframe 的时候就排除多余的行列。</li>\n<li>Merge 时候需要精简行列。</li>\n</ol>\n<pre><code class=\"language-python\">df1<span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>df2<span class=\"token punctuation\">[</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xab'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\npandas<span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>dataframe1<span class=\"token punctuation\">,</span> dataframe2<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token operator\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> how<span class=\"token operator\">=</span><span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span> on<span class=\"token operator\">=</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"72-大文件的处理\"><a class=\"v-toc-item\" href=\"#72-大文件的处理\">#</a> 7.2 大文件的处理</h3>\n<blockquote>\n<p>参考我的文章 记一次小机器的 Python 大数据分析</p>\n</blockquote>\n<h2 id=\"0x-踩坑集合\"><a class=\"v-toc-item\" href=\"#0x-踩坑集合\">#</a> 0x 踩坑集合</h2>\n<h2 id=\"0x08-踩坑集合\"><a class=\"v-toc-item\" href=\"#0x08-踩坑集合\">#</a> 0x08 踩坑集合</h2>\n<h3 id=\"81-io-类\"><a class=\"v-toc-item\" href=\"#81-io-类\">#</a> 8.1 IO 类</h3>\n<h4 id=\"\"><a class=\"v-toc-item\" href=\"#\">#</a> </h4>\n<h3 id=\"82-io-类\"><a class=\"v-toc-item\" href=\"#82-io-类\">#</a> 8.2 IO 类</h3>\n<h2 id=\"0xee-参考链接\"><a class=\"v-toc-item\" href=\"#0xee-参考链接\">#</a> 0xEE 参考链接</h2>\n<hr>\n<p>ChangeLog:</p>\n<ul>\n<li><strong>2017-06-03</strong> 初始化本文</li>\n<li><strong>2018-02-03</strong> 重修文字</li>\n</ul>\n","toc":"<ul class=\"v-article-toc\">\n<li>\n<ul>\n<li><a href=\"#0x00-%E5%89%8D%E8%A8%80\">0x00 前言</a></li>\n<li><a href=\"#0x01-series-%E7%9B%B8%E5%85%B3\">0x01 Series 相关</a></li>\n<li><a href=\"#0x02-dataframe-%E7%9B%B8%E5%85%B3\">0x02 DataFrame 相关</a>\n<ul>\n<li><a href=\"#21-%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA\">2.1 对象创建</a></li>\n<li><a href=\"#22-%E6%B5%8F%E8%A7%88%E6%95%B0%E6%8D%AE\">2.2 浏览数据</a></li>\n<li><a href=\"#23-%E4%BF%AE%E6%94%B9%E8%A1%A8%E5%86%85%E5%AE%B9\">2.3 修改表内容</a></li>\n<li><a href=\"#24-%E6%9F%A5%E7%9C%8B%E8%A1%A8%E5%86%85%E5%AE%B9\">2.4 查看表内容</a></li>\n<li><a href=\"#25-%E8%A1%A8%E5%8F%98%E6%8D%A2\">2.5 表变换</a></li>\n<li><a href=\"#26-%E8%A1%A8%E9%81%8D%E5%8E%86\">2.6 表遍历</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA\">数据导入导出</a>\n<ul>\n<li><a href=\"#sql\">SQL</a></li>\n<li><a href=\"#csv\">CSV</a></li>\n<li><a href=\"#excel\">Excel</a></li>\n</ul>\n</li>\n<li><a href=\"#0x02-%E5%8F%AF%E8%A7%86%E5%8C%96%E6%8A%80%E6%9C%AF\">0x02 可视化技术</a></li>\n<li><a href=\"#0x03-asd1\">0x03 asd1</a></li>\n<li><a href=\"#0x07-performance-tips\">0x07 Performance Tips</a>\n<ul>\n<li><a href=\"#71-%E7%B2%BE%E7%AE%80%E8%A1%8C%E5%88%97\">7.1 精简行列</a></li>\n<li><a href=\"#72-%E5%A4%A7%E6%96%87%E4%BB%B6%E7%9A%84%E5%A4%84%E7%90%86\">7.2 大文件的处理</a></li>\n</ul>\n</li>\n<li><a href=\"#0x-%E8%B8%A9%E5%9D%91%E9%9B%86%E5%90%88\">0x 踩坑集合</a></li>\n<li><a href=\"#0x08-%E8%B8%A9%E5%9D%91%E9%9B%86%E5%90%88\">0x08 踩坑集合</a>\n<ul>\n<li><a href=\"#81-io-%E7%B1%BB\">8.1 IO 类</a><br>\n*</li>\n<li><a href=\"#82-io-%E7%B1%BB\">8.2 IO 类</a></li>\n</ul>\n</li>\n<li><a href=\"#0xee-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\">0xEE 参考链接</a></li>\n</ul>\n</li>\n</ul>\n"}},"__N_SSG":true}